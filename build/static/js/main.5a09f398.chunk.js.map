{"version":3,"sources":["styles/GlobalStyle.js","pages/Home/world.jpg","pages/Constantes/index.js","pages/Home/football.png","pages/AoVivo/index.js","pages/PreJogo/index.js","pages/PreJogo2/index.js","pages/MaisAoVivo/index.js","pages/Mais/index.js","pages/Init/Jogos/index.js","pages/Caixa/index.js","pages/Bilhetes/index.js","pages/RelatorioCliente/index.js","pages/VerificarBilhete/football.png","pages/Login/football.jpeg","pages/Login/football2.png","pages/Login/index.js","gerente/Login/football.jpeg","gerente/Login/football2.png","gerente/Constantes/index.js","gerente/Login/index.js","pages/NovaSenha/football.png","pages/NovaSenha/index.js","gerente/Menu/football.png","gerente/Menu/index.js","gerente/Home/index.js","gerente/Caixa/index.js","gerente/Bilhetes/index.js","gerente/Bilhete/index.js","gerente/Clients/index.js","gerente/CadCambista/index.js","gerente/EditCambista/index.js","gerente/Relatorios/index.js","gerente/CaixaCambista/index.js","gerente/NovaSenha/football.png","gerente/NovaSenha/index.js","admin/Constantes/index.js","admin/Menu/football.png","admin/Menu/index.js","admin/Home/index.js","admin/Login/football.png","admin/Login/index.js","admin/Caixa/index.js","admin/Bilhetes/index.js","admin/Bilhete/index.js","admin/Clients/index.js","admin/CadCambista/index.js","admin/CadGerente/index.js","admin/EditCambista/index.js","admin/EditGerente/index.js","admin/RelatoriosCambistas/index.js","admin/CaixaCambista/index.js","admin/NovaSenha/football.png","admin/NovaSenha/index.js","admin/Cotacao/index.js","admin/CotacaoAoVivo/index.js","admin/ValidarBilhete/index.js","admin/Propriedades/index.js","admin/Bancas/index.js","admin/BancasReset/index.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","api","axios","create","baseURL","interceptors","request","use","a","config","headers","Authorization","require","get","then","res","data","sessionStorage","setItem","admin","cotacao","valorDeSaida","valorDeEntrada","cotacaoMin","cotaMin","cotaMax","qtdJogos","configTime","e","catch","error","console","log","date","Date","getMinutes","getAdminAPI","getDateAll","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","padding","createTheme","primary","main","ptBR","root","action","hover","TableRow","makeStyles","height","image","opacity","backgroundImage","Conan","backgroundRepeat","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","width","form","marginTop","submit","yup","user","required","password","limiteApostaGeral","limiteApostaSimples","Copyright","Typography","variant","align","Link","href","getFullYear","useStyles","secondary","validationSchema","SignInSideManage","classes","history","useHistory","formik","useFormik","initialValues","getItem","JSON","parse","encryptedData","key","C","CryptoJS","Key","enc","Utf8","IV","AES","decrypt","iv","mode","CBC","pad","Pkcs7","toString","decryptData2","onSubmit","values","post","gerencias","id","nome","encrypt","stringify","format","Base64","encryptData2","push","alert","useState","useEffect","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","src","Logo","handleSubmit","TextField","fullWidth","name","label","value","onChange","handleChange","touched","Boolean","errors","helperText","Button","Box","mt","password1","password2","oneOf","Menu","props","useTheme","React","mobileOpen","setMobileOpen","drawerWidth","handleDrawerToggle","nested","paddingLeft","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","button","flexShrink","AppBar","clsx","Toolbar","IconButton","edge","onClick","style","cursor","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","List","ListItem","ListItemIcon","football","Divider","to","ListItemText","removeItem","Dashboard","dataAux","setDataAux","responsive","tableBodyHeight","tableBodyMaxHeight","options","rowsPerPage","filter","filterType","selectableRows","onRowClick","rowData","rowMeta","clearInterval","Number","d","atualizarApostasAoVivo","apostasAoVivo","put","go","atualizarAtivarApostasPreJogo","ativarApostasPreJogo","atualizarAtivarApostas","ativarApostas","atualizarStatus","status","bancas","map","b","saldoGeral","toFixed","saldoSimples","comissaoPreJogo","comissaoAoVivo","borderColor","ativarApostasAoVivos","getBancasAPI","clientX","document","getElementById","Container","maxWidth","length","Fragment","columns","marginBottom","StyledTableCell","message","openURL","setOpenURL","openLoading","setOpenLoading","StyledTableRow","handleCloseURL","total","bilhetes","totalEntrada","saidas","comissoes","innerText","entradasAberto","innerHTML","lg","justify","paperX","textAlign","TableContainer","Table","stickyHeader","TableHead","TableBody","Dialog","wordWrap","DialogTitle","DialogContent","split","DialogActions","disableBackdropClick","disableEscapeKeyDown","CircularProgress","themeG","window","setBilhetes","setAux","count","setCount","setDateAfter","s","field","headerName","renderCell","params","background","codigoBilhete","disabled","selectedDate1","handleDateChange1","selectedDate2","handleDateChange2","custom_sort","d1","dataDaAposta","d2","getTime","l","ax","bh","slice","sort","difference","minutes","Math","floor","Banca","nomeBanca","Cupom","codigo","Cliente","nomeCliente","Data","Situacao","Entrada","Comissao","comissao","Cotacao","Retorno","Tipo","tipoSimplesouMultiplo","Aposta","tipoDeJogo","Cancelar","reverse","getDateAfter","getBilhetesAPI","utils","DateFnsUtils","locale","pt","date1","date2","listAux","init","auxDate1","getMonth","getDate","auxDate2","datas","dateReverse","join","ThemeProvider","components","GridToolbar","density","rows","pageSize","rowsPerPageOptions","useParams","setSaldoSimples","setSaldoGeral","setNomeBanca","setComissao","codigoB","setCodigo","setGerenteId","setBancaId","statusB","impressao","setImpressao","componentRef","useRef","handlePrint","useReactToPrint","current","dataDoJogo","bilhete","jg","jogo","nomeDoCampeonato","nomeDosTimes","tipoDeCotacao","indexOf","x","quantidadeJogos","gerente","habilitarImpressao","getLoginAPI","target","boxSizing","ref","campId","setData","dataToState","deleteClient","delete","currentDateTime","setDate","localStorage","clientes","getClientAPI","telefone","setTelefone","setComissaoAoVivo","email","setEmail","setComissaoPreJogo","setApostasAoVivo","apostasPreJogo","setApostasPreJogo","imprimir","setImprimir","apostas","setApostas","setStatus","min","limitGeneral","max","parseFloat","limitSimple","gutterBottom","autoComplete","multiline","InputLabelProps","shrink","placeholder","FormControlLabel","control","Checkbox","checked","disableElevation","limitG","setLimitG","limitS","setLimitS","senha","setSenha","setidCambista","login","getBancaAPI","setTotalEntrada","totalEntradaP","setTotalEntradaP","totalEntradaV","setTotalEntradaV","entradasAbertas","setEntradasAbertas","entradasAbertasP","setEntradasAbertasP","entradasAbertasV","setEntradasAbertasV","setSaidas","saidasP","setSaidasP","saidasV","setSaidasV","setComissoes","comissoesP","setComissoesP","comissoesV","setComissoesV","Set","nomesBancas","setNomesBancas","nomesAux","setNomeAux","setTotal","totalP","totalV","setDataCambista","done","setDone","graph","setNome","openS","setOpenS","relatorios","entradas","abertos","ganhos","entradasV","abertosV","ganhosV","comissaoV","totalPP","totalVV","add","FormControl","formControl","InputLabel","Select","labelId","onOpen","event","MenuItem","n","ResponsiveContainer","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","banca","abs","SignInSide","loginAll","textShadow","MenuAdmin","setDay","textLabels","noMatch","toolTip","columnHeaderTooltip","column","pagination","next","previous","displayRows","search","downloadCsv","print","viewColumns","filterTable","all","reset","titleAria","selectedRows","text","deleteAria","atualizarReiprimirApostas","reiprimirApostas","atualizarCriarCambista","criarCambista","atualizarAtivaApostasCambistas","ativaApostasCambistas","atualizarAlterarStatusCambista","alterarStatusCambista","atualizarAlterarLimitesApostas","alterarLimitesApostas","atualizarCancelarApostaCambista","cancelarApostaCambista","getDay","getGerentesAPI","overrides","MUIDataTableBodyCell","setBancas","manage","setManage","ba","setB","unmounted","gerentes","getGerenteAPI","Autocomplete","freeSolo","getOptionLabel","option","renderInput","setAtivaApostasCambistas","nomeGerente","setNomeGerente","setCriarCambista","setReiprimirApostas","setAlterarStatusCambista","setAlterarLimitesApostas","setCancelarApostasCambistas","idCambista","ban","gerencia","setTotalP","setTotalV","g","gerenteAPI","setdrawerWidth","setOpenNav","setOpenNavA","setOpenNavB","handleDrawerOpen","handleDrawerClose","perdeu","loadCaixa","undefined","pop","onEscapeKeyDown","onBackdropClick","titulo","setTitulo","porcentagem","setPorcentagem","bancasAux","setBancasAux","setGerentes","ge","setG","deleteCotacao","cotacoes","c","getCotacaoAPI","auxClient","ValidarBilhete","jogos","setJogos","handleCloseLoading","addJogo","j","dict","i","valor","setTimeout","ValidarDados","setValorDeEntrada","setValorDeSaida","setCotacao","setCotacaoMin","setCotaMax","setCotaMin","setConfigTime","setQtdJogos","Routes","exact","path","LoginMange","ManageHome","ManageCaixa","ManageCaixaCambista","ManageBilhete","ManageBilhetes","ManageClients","CadCambista","EditCambista","Relatorios","NovaSenhaGerente","ManageHomeA","LoginMangeA","ManageCaixaA","ManageCaixaCambistaA","ManageBilhetesA","ManageBilheteA","ManageClientsA","CadCambistaA","CadGerente","EditCambistaA","EditGerente","RelatoriosCambistasA","ManageCotacaoAoVivo","ManageCotacaoA","NovaSenhaGerenteA","Bancas","BancasReset","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a09f398.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle `\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 3px;\n    height: 3px;\n    cursor: pointer;\n  }\n\n  \n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #F4F4F4;\n  }\n  ::-webkit-scrollbar {\n      width: 10px;\n      background: #F4F4F4;\n  }\n  ::-webkit-scrollbar-thumb {\n      background: #000080;\n  }\n\n  #myTable {\n\n    border-collapse: collapse;\n    width: 100%;\n    border: 1px solid #ddd;\n    font-size: 18px;\n  }\n  \n  #myTable th, #myTable td {\n    text-align: left;\n    padding: 12px;\n  }\n  \n  #myTable tr {\n    border-bottom: 1px solid #ddd;\n    font-size: 15px;\n  }\n  \n  #myTable tr.header, #myTable tr:hover {\n    background-color: #f1f1f1;\n  }\n\n  #myInput {\n    background-image: url('/css/searchicon.png');\n    background-position: 10px 10px;\n    background-repeat: no-repeat;\n    width: 100%;\n    font-size: 16px;\n    padding: 12px 20px 12px 40px;\n    border: 1px solid #ddd;\n    margin-bottom: 12px;\n  }\n\n  .pagination a {\n    color: black;\n    float: left;\n    padding: 8px 16px;\n    text-decoration: none;\n    transition: background-color .3s;\n  }\n  \n  .pagination a.active {\n    background-color: dodgerblue;\n    color: white;\n  }\n  \n  .pagination a:hover:not(.active) {background-color: #ddd;}\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  #bets {\n      display: none;\n  }\n\n  .button {\n    background-color: #2237CF;\n    border: none;\n    color: white;\n    width: 80px;\n    padding: 10px 22px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    border-radius: 8px;\n    cursor: pointer;\n    margin: 4px 2px;\n\n  }\n\n\n\n\n  .buttonM {\n    background-color: #4CAF50;\n    border: none;\n    color: white;\n    padding: 2.9px 22px;\n    text-align: center;\n    text-decoration: none;\n    display: block;\n    font-size: 16px;\n    border-radius: 8px;\n    margin: 4px 2px;\n    cursor: pointer;\n\n  }\n\n  tr:hover {\n    background-color: #dddddd; \n  }\n\n  tr#zebra td {\n    border-bottom:1pt solid black;\n  }\n\n  td {\n    padding: 5px;\n  }\n\n  .times {\n    padding: 5px;\n    box-sizing: border-box;\n    font-weight: bold;\n    font-size: 15px;\n  }\n\n  .buttonPlus {\n      background-color: #2237CF;\n      border: none;\n      color: white;\n      width: 80px;\n      padding: 10px 22px;\n      text-align: center;\n      text-decoration: none;\n      display: inline-block;\n      font-size: 16px;\n      border-radius: 8px;\n      cursor: pointer;\n      margin: 4px 2px;\n\n    }\n\n    .buttonGold {\n      background-color: gold;\n      border: none;\n      color: white;\n      width: 130px;\n      padding: 10px 22px;\n      text-align: center;\n      text-decoration: none;\n      display: inline-block;\n      font-size: 16px;\n      border-radius: 8px;\n      cursor: pointer;\n      margin: 4px 2px;\n\n    }\n\n    .buttonBlue {\n      background-color: blue;\n      border: none;\n      color: white;\n      width: 130px;\n      padding: 10px 22px;\n      text-align: center;\n      text-decoration: none;\n      display: inline-block;\n      font-size: 16px;\n      border-radius: 8px;\n      cursor: pointer;\n      margin: 4px 2px;\n\n    }\n\n    .buttonRed {\n      background-color: red;\n      border: none;\n      color: white;\n      width: 130px;\n      padding: 10px 22px;\n      text-align: center;\n      text-decoration: none;\n      display: inline-block;\n      font-size: 16px;\n      border-radius: 8px;\n      cursor: pointer;\n      margin: 4px 2px;\n\n    }\n\n    .buttonGreen {\n      background-color: green;\n      border: none;\n      color: white;\n      width: 130px;\n      padding: 10px 22px;\n      text-align: center;\n      text-decoration: none;\n      display: inline-block;\n      font-size: 16px;\n      border-radius: 8px;\n      cursor: pointer;\n      margin: 4px 2px;\n\n    }\n \n  @media print {\n    @page { size: auto; margin: 0; }\n  }\n\n  @media only screen and (max-width: 600px) {\n    #ocultar {\n      display: none;\n    }\n\n    #timeA {\n      content: \"\\a\";\n      white-space: pre;\n    }\n\n    #bets1 {\n\n      display: block;\n      padding: -4px;\n    }\n\n    #bets2 {\n      display: block;\n      margin-top: -55px;\n      margin-left: 205px;\n      position: relative;\n    }\n\n    #bets3 {\n      display: block;\n      margin-top:-55px;\n      margin-left: 45px;\n      float: right;\n      position: relative;\n    }\n\n    #font {\n      font-size: 12px;\n    }\n\n    .times {\n      padding: 5px;\n      box-sizing: border-box;\n      font-weight: bold;\n      font-size: 12px;\n    }\n\n\n    .button {\n      background-color: #2237CF;\n      border: 2px solid white;\n      color: white;\n      min-width: 45px;\n      max-width: 45px;\n      padding: 12px;\n      text-align: center;\n      text-decoration: none;\n      font-size: 12px;\n      border-radius: 8px;\n      cursor: pointer;\n      display: table-cell;\n\n    }\n\n    #vcasa {\n      margin-left: -4px;\n    }\n\n    .buttonPlus {\n      background-color: #2237CF;\n      border: none;\n      color: white;\n      width: 80px;\n      padding: 10px 22px;\n      text-align: center;\n      text-decoration: none;\n      display: inline-block;\n      font-size: 16px;\n      border-radius: 10px;\n      cursor: pointer;\n      margin: 4px 2px;\n\n    }\n\n  }\n`;","export default __webpack_public_path__ + \"static/media/world.4ab18d94.jpg\";","// https://restcountries.eu/data/afg.svg\n// http://www.geognos.com/api/en/countries/flag/AI.png\n// https://restcountries.eu/data/bra.svg\n// https://restcountries.eu/rest/v2/all\nimport World from \"../Home/world.jpg\";\nimport axios from 'axios';\n\n\nconst images = {\n    \"Brasil\": [\"https://www.countryflags.com/wp-content/uploads/brazil-flag-png-large.png\"],\n    \"Arábia Saudita\": [\"https://www.countryflags.com/wp-content/uploads/saudi-arabia-flag-png-large.png\"],\n    \"Argentina\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-7-1536x963.jpg\"],\n    \"Áustria\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-10-1536x1024.jpg\"],\n    \"Bélgica\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-18-1536x1331.jpg\"],\n    \"Bolívia\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-1536x1050.jpg\"],\n    \"Bósnia e Herzegovina\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-22-1536x768.jpg\"],\n    \"Bulgária\": [\"https://www.countryflags.com/wp-content/uploads/bulgaria-flag-png-large.png\"],\n    \"Canadá\": [\"https://www.countryflags.com/wp-content/uploads/canada-flag-png-large.png\"],\n    \"Catar\": [\"https://www.countryflags.com/wp-content/uploads/qatar-flag-png-large.png\"],\n    \"Chile\": [\"https://www.countryflags.com/wp-content/uploads/chile-flag-png-large.png\"],\n    \"Chipre\": [\"https://www.countryflags.com/wp-content/uploads/cyprus-flag-png-large.png\"],\n    \"Colômbia\": [\"https://www.countryflags.com/wp-content/uploads/colombia-flag-png-large.png\"],\n    \"Coreia do Sul\": [\"https://www.countryflags.com/wp-content/uploads/south-korea-flag-png-large.png\"],\n    \"República da Coreia\": [\"https://www.countryflags.com/wp-content/uploads/south-korea-flag-png-large.png\"],\n    \"Costa Rica\": [\"https://www.countryflags.com/wp-content/uploads/costa-rica-flag-png-large.png\"],\n    \"Croácia\": [\"https://www.countryflags.com/wp-content/uploads/croatia-flag-png-large.png\"],\n    \"Dinamarca\": [\"https://www.countryflags.com/wp-content/uploads/denmark-flag-png-large.png\"],\n    \"Egito\": [\"https://www.countryflags.com/wp-content/uploads/egypt-flag-png-large.png\"],\n    \"El Salvador\": [\"https://www.countryflags.com/wp-content/uploads/el-salvador-flag-png-large.png\"],\n    \"Equador\": [\"https://www.countryflags.com/wp-content/uploads/ecuador-flag-png-large.png\"],\n    \"Escócia\": [\"https://www.countryflags.com/wp-content/uploads/scotland-flag-jpg-xl-1536x1024.jpg\"],\n    \"Eslovênia\": [\"https://www.countryflags.com/wp-content/uploads/slovenia-flag-png-large.png\"],\n    \"Espanha\": [\"https://www.countryflags.com/wp-content/uploads/spain-flag-png-large.png\"],\n    \"EUA\": [\"https://www.countryflags.com/wp-content/uploads/united-states-of-america-flag-png-large.png\"],\n    \"Estónia\": [\"https://www.countryflags.com/wp-content/uploads/estonia-flag-png-large.png\"],\n    \"Estônia\": [\"https://www.countryflags.com/wp-content/uploads/estonia-flag-png-large.png\"],\n    \"França\": [\"https://www.countryflags.com/wp-content/uploads/france-flag-png-large.png\"],\n    \"Geórgia\": [\"https://www.countryflags.com/wp-content/uploads/georgia-flag-jpg-xl.jpg\"],\n    \"Grécia\": [\"https://www.countryflags.com/wp-content/uploads/greece-flag-png-large.png\"],\n    \"Guatemala\": [\"https://www.countryflags.com/wp-content/uploads/guatemala-flag-png-large.png\"],\n    \"Holanda\": [\"https://www.countryflags.com/wp-content/uploads/netherlands-flag-png-large.png\"],\n    \"Honduras\": [\"https://www.countryflags.com/wp-content/uploads/honduras-flag-png-large.png\"],\n    \"Hungria\": [\"https://www.countryflags.com/wp-content/uploads/hungary-flag-png-large.png\"],\n    \"Índia\": [\"https://www.countryflags.com/wp-content/uploads/india-flag-png-large.png\"],\n    \"Inglaterra\": [\"https://www.countryflags.com/wp-content/uploads/england-flag-jpg-xl-1536x922.jpg\"],\n    \"Irã\": [\"https://www.countryflags.com/wp-content/uploads/iran-flag-png-large.png\"],\n    \"Irlanda\": [\"https://www.countryflags.com/wp-content/uploads/ireland-flag-png-large.png\"],\n    \"Irlanda do Norte\": [\"https://www.countryflags.com/wp-content/uploads/northern-ireland-flag-jpg-xl-1536x768.jpg\"],\n    \"Israel\": [\"https://www.countryflags.com/wp-content/uploads/israel-flag-png-large.png\"],\n    \"Itália\": [\"https://www.countryflags.com/wp-content/uploads/italy-flag-png-large.png\"],\n    \"Japão\": [\"https://www.countryflags.com/wp-content/uploads/japan-flag-png-large.png\"],\n    \"Jordânia\": [\"https://www.countryflags.com/wp-content/uploads/jordan-flag-png-large.png\"],\n    \"Lituânia\": [\"https://www.countryflags.com/wp-content/uploads/lithuania-flag-png-large.png\"],\n    \"Marrocos\": [\"https://www.countryflags.com/wp-content/uploads/morocco-flag-png-large.png\"],\n    \"México\": [\"https://www.countryflags.com/wp-content/uploads/mexico-flag-png-large.png\"],\n    \"Nicarágua\": [\"https://www.countryflags.com/wp-content/uploads/nicaragua-flag-png-large.png\"],\n    \"Noruega\": [\"https://www.countryflags.com/wp-content/uploads/norway-flag-png-large.png\"],\n    \"Omã\": [\"https://www.countryflags.com/wp-content/uploads/oman-flag-png-large.png\"],\n    \"Panamá\": [\"https://www.countryflags.com/wp-content/uploads/panama-flag-png-large.png\"],\n    \"Paraguai\": [\"https://www.countryflags.com/wp-content/uploads/paraguay-flag-png-large.png\"],\n    \"Peru\": [\"https://www.countryflags.com/wp-content/uploads/peru-flag-png-large.png\"],\n    \"Polônia\": [\"https://www.countryflags.com/wp-content/uploads/poland-flag-png-large.png\"],\n    \"Polónia\": [\"https://www.countryflags.com/wp-content/uploads/poland-flag-png-large.png\"],\n    \"Portugal\": [\"https://www.countryflags.com/wp-content/uploads/portugal-flag-400.png\"],\n    \"República Tcheca\": [\"https://www.countryflags.com/wp-content/uploads/czech-republic-flag-png-large.png\"],\n    \"Romênia\": [\"https://www.countryflags.com/wp-content/uploads/romania-flag-png-large.png\"],\n    \"Rússia\": [\"https://www.countryflags.com/wp-content/uploads/russia-flag-png-large.png\"],\n    \"Sérvia\": [\"https://www.countryflags.com/wp-content/uploads/serbia-flag-png-large.png\"],\n    \"Suécia\": [\"https://www.countryflags.com/wp-content/uploads/sweden-flag-png-large.png\"],\n    \"Suíça\": [\"https://www.countryflags.com/wp-content/uploads/switzerland-flag-png-large.png\"],\n    \"Turquia\": [\"https://www.countryflags.com/wp-content/uploads/turkey-flag-png-large.png\"],\n    \"Ucrânia\": [\"https://www.countryflags.com/wp-content/uploads/ukraine-flag-png-large.png\"],\n    \"Uruguai\": [\"https://www.countryflags.com/wp-content/uploads/uruguay-flag-png-large.png\"],\n    \"Venezuela\": [\"https://www.countryflags.com/wp-content/uploads/venezuela-flag-png-large.png\"],\n    \"África do Sul\": [\"https://www.countryflags.com/wp-content/uploads/south-africa-flag-png-large.png\"],\n    \"Alemanha\": [\"https://www.countryflags.com/wp-content/uploads/germany-flag-png-large.png\"],\n    \"Eslováquia\": [\"https://www.countryflags.com/wp-content/uploads/slovakia-flag-png-large.png\"],\n    \"Indonésia\": [\"https://www.countryflags.com/wp-content/uploads/indonesia-flag-png-large.png\"],\n    \"Azerbaijão\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-11-1536x768.jpg\"],\n    \"China\": [\"https://www.countryflags.com/wp-content/uploads/china-flag-png-large.png\"],\n    \"Luxemburgo\": [\"https://www.countryflags.com/wp-content/uploads/luxembourg-flag-png-large.png\"],\n    \"Macedônia do Norte\": [\"https://www.countryflags.com/wp-content/uploads/macedonia-flag-png-large.png\"],\n    \"Macedónia do Norte\": [\"https://www.countryflags.com/wp-content/uploads/macedonia-flag-png-large.png\"],\n    \"Malta\": [\"https://www.countryflags.com/wp-content/uploads/malta-flag-png-large.png\"],\n    \"Moldávia\": [\"https://www.countryflags.com/wp-content/uploads/moldova-flag-png-large.png\"],\n    \"Montenegro\": [\"https://www.countryflags.com/wp-content/uploads/montenegro-flag-png-large.png\"],\n    \"País de Gales\": [\"https://www.countryflags.com/wp-content/uploads/wales-flag-jpg-xl-1536x912.jpg\"],\n    \"Palestina\": [\"https://www.countryflags.com/wp-content/uploads/palestina-flag-jpg-xl-1536x768.jpg\"],\n    \"Tailândia\": [\"https://www.countryflags.com/wp-content/uploads/thailand-flag-png-large.png\"],\n    \"Hong Kong\": [\"https://www.countryflags.com/wp-content/uploads/hongkong-flag-jpg-xl-1536x1024.jpg\"],\n    \"Austrália\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-9-1536x768.jpg\"],\n    \"ad\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-4-1536x1075.jpg\"],\n    \"Albânia\": [\"https://www.countryflags.com/wp-content/uploads/albania-albanian-flag-png-square-large.png\"],\n    \"São Marino\": [\"https://www.countryflags.com/wp-content/uploads/san-marino-flag-png-large.png\"],\n    \"Tunísia\": [\"https://www.countryflags.com/wp-content/uploads/tunisia-flag-png-large.png\"],\n    \"Uzbequistão\": [\"https://www.countryflags.com/wp-content/uploads/uzbekistan-flag-png-large.png\"],\n    \"Zimbábue\": [\"https://www.countryflags.com/wp-content/uploads/zimbabwe-flag-png-large.png\"],\n    \"Andorra\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-4-1536x1075.jpg\"],\n    \"Bahrein\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-13-1536x922.jpg\"],\n    \"Bahrain\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-13-1536x922.jpg\"],\n    \"Bielorrússia\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-16-1536x768.jpg\"],\n    \"Armênia\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-8-1536x768.jpg\"],\n    \"Botswana\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-23-1536x1024.jpg\"],\n    \"Ruanda\": [\"https://www.countryflags.com/wp-content/uploads/rwanda-flag-png-large.png\"],\n    \"Argélia\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-3-1536x1024.jpg\"],\n    \"Camboja\": [\"https://www.countryflags.com/wp-content/uploads/cambodia-flag-png-large.png\"],\n    \"Emirados Árabes Unidos\": [\"https://www.countryflags.com/wp-content/uploads/united-arab-emirates-flag-png-large.png\"],\n    \"Kuwait\": [\"https://www.countryflags.com/wp-content/uploads/kuwait-flag-png-large.png\"],\n    \"Kosovo\": [\"https://www.countryflags.com/wp-content/uploads/kosovo-flag-png-large.png\"],\n    \"Libano\": [\"https://www.countryflags.com/wp-content/uploads/lebanon-flag-png-large.png\"],\n    \"Rep. da Tanzânia\": [\"https://www.countryflags.com/wp-content/uploads/tanzania-flag-png-large.png\"],\n    \"Gana\": [\"https://www.countryflags.com/wp-content/uploads/ghana-flag-png-large.png\"],\n    \"Costa do Marfim\": [\"https://www.countryflags.com/wp-content/uploads/cote-d-ivoire-flag-png-large.png\"],\n    \"Senegal\": [\"https://www.countryflags.com/wp-content/uploads/senegal-flag-png-large.png\"],\n    \"Etiópia\": [\"https://www.countryflags.com/wp-content/uploads/ethiopia-flag-png-large.png\"],\n    \"Finlândia\": [\"https://www.countryflags.com/wp-content/uploads/finland-flag-png-large.png\"],\n    \"Perú\": [\"https://www.countryflags.com/wp-content/uploads/peru-flag-png-large.png\"],\n    \"Bangladesh\": [\"https://www.countryflags.com/wp-content/uploads/flag-jpg-xl-14-1536x922.jpg\"],\n\n    \"Internacional\": [World],\n};\n\n\nconst api = axios.create({\n\n    // baseURL: \"http://localhost:8000\",\n    baseURL: 'https://footballdjango.herokuapp.com/',\n\n\n    //baseURL: \"http://107.22.133.172:8000/\"\n});\n\napi.interceptors.request.use(async config => {\n\n    config.headers.Authorization = `Token 88c3f466365e3346c236c65d703892cefcadb49b`;\n\n\n    return config;\n});\n\n\nconst weeks = {\n    \"0\": \"DOMINGO\",\n    \"1\": \"SEGUNDA-FEIRA\",\n    \"2\": \"TERÇA-FEIRA\",\n    \"3\": \"QUARTA-FEIRA\",\n    \"4\": \"QUINTA-FEIRA\",\n    \"5\": \"SEXTA-FEIRA\",\n    \"6\": \"SÁBADO\",\n}\n\n\nconst auxCountry = [33, 42, 6, 7, 9, 14, 20, 28, 17, 36, 16, 37];\nconst auxItens = [33, 6, 14, 20, 28, 17, 36, 16, 37];\nconst regions = ['BRA', 'EUR', 'ENG', 'ITA', 'FRA', 'ESP', 'GER', 'POR', 'TUR', 'NED', 'DEN', 'WRL', 'S-A', 'EUR'];\n\nconst cc = require('coupon-code');\n\n\nconst nome_cotacoes = []\n\nasync function getAdminAPI() {\n\n    api.get('/api/getadmin')\n        .then(res => {\n            try {\n                if (res.data) {\n                    //console.log(res.data);\n                    sessionStorage.setItem('cotacaoAdmin', res.data.admin[0].cotacao);\n                    sessionStorage.setItem('valorDeSaida', res.data.admin[0].valorDeSaida);\n                    sessionStorage.setItem('valorDeEntrada', res.data.admin[0].valorDeEntrada);\n                    sessionStorage.setItem('cotacaoAdminMin', res.data.admin[0].cotacaoMin);\n                    sessionStorage.setItem('cotaMin', res.data.admin[0].cotaMin);\n                    sessionStorage.setItem('cotaMax', res.data.admin[0].cotaMax);\n                    sessionStorage.setItem('qtdJogos', res.data.admin[0].qtdJogos);\n                    sessionStorage.setItem('configTime', res.data.admin[0].configTime);\n                }\n            } catch (e) {\n\n            }\n        }).catch(error => {\n        console.log(error)\n    });\n\n}\nsessionStorage.setItem('minutos', new Date().getMinutes());\ngetAdminAPI();\n\nasync function getDateAll() {\n    api.get('/api/getdate').then(res => {\n\n        try {\n            sessionStorage.setItem('date', res.data.date);\n\n        } catch (e) {\n            console.log(e);\n        }\n    }).catch(error => {\n        console.log(error)\n    });\n}\n\ngetDateAll();\n\n\nexport {auxCountry, weeks, images, auxItens, cc, regions, api, nome_cotacoes};\n","export default __webpack_public_path__ + \"static/media/football.f7763bd0.png\";","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useReactToPrint} from 'react-to-print';\nimport {api, cc} from '../Constantes/index';\nimport Menu from '../Menu/index';\nimport useWindowDimensions from '../Size/index';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport ReactDOMServer from \"react-dom/server\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport ReactDOM from \"react-dom\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\n\nexport default function Dashboard(props) {\n\n    const codigo = cc.generate().split('-').slice(1).join('-');\n    let tab = false;\n\n    let betsAll = \"\";\n    let history = useHistory();\n    const [live, setLive] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [openURL, setOpenURL] = useState(false);\n    const [openLoading, setOpenLoading] = useState(false);\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [bilhetes, setBilhetes] = useState([]);\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [clientes, setClientes] = useState([]);\n    const [entrada, setEntrada] = useState([]);\n    const {height, width} = useWindowDimensions();\n    const [inputValue, setInputValue] = React.useState('');\n    const [value, setValue] = React.useState(\"\");\n    const html = ReactDOMServer.renderToStaticMarkup(<LockIcon style={{fontSize: 15}}/>);\n    const [cotacoes, setCotacoes] = useState({});\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        button: {\n            width: 10,\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n\n    const handleClickOpenURL = () => {\n        setOpenURL(true);\n    };\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleClickOpenLoading = () => {\n        setOpenLoading(true);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n\n    function InitOdds() {\n\n        if (localStorage.getItem(\"betsAll\") === null) {\n            localStorage.setItem(\"betsAll\", \"\");\n            localStorage.setItem('displayBets', 'none');\n            try {\n                noneBets();\n            } catch (e) {\n            }\n\n        } else {\n            let bets = localStorage.getItem(\"betsAll\");\n            try{\n                if(localStorage.getItem(\"retorno\") != null && localStorage.getItem(\"retorno\") != \"\"){\n                    document.getElementById('retorno').innerHTML = localStorage.getItem(\"retorno\");\n                }\n            } catch (e) {\n\n            }\n            for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n                try {\n\n                    if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                        document.getElementById(bets.split('=')[n].split('-')[1] +\n                            bets.split('=')[n].split('-')[0]).style.background = \"red\";\n\n                    }\n                } catch (e) {\n\n                }\n            }\n        }\n    }\n\n    function clearOdds() {\n        let bets = localStorage.getItem(\"betsAll\");\n\n        for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n\n            try {\n\n\n                if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                    bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                    document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).style.background = \"\";\n\n\n                }\n\n            } catch (e) {\n\n            }\n        }\n    }\n\n    let initInterval = setInterval(() => {\n        if (localStorage.getItem('delete') !== null) {\n            let team = localStorage.getItem('delete');\n            try {\n                document.getElementById(team.split('-')[1] + team.split('-')[0]).style.background = \"\";\n            } catch (e) {\n                localStorage.setItem(team.split('-')[0], \"\");\n                localStorage.setItem(team.split('-')[0] + 'x', \"\");\n                localStorage.removeItem(team.split('-')[0]);\n                localStorage.removeItem(team.split('-')[0] + 'x');\n                betsAll = localStorage.getItem(\"betsAll\");\n                betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n                localStorage.setItem(\"betsAll\", betsAll);\n                geraBilhete();\n            }\n            localStorage.setItem(team.split('-')[0], \"\");\n            localStorage.setItem(team.split('-')[0] + 'x', \"\");\n            localStorage.removeItem(team.split('-')[0]);\n            localStorage.removeItem(team.split('-')[0] + 'x');\n            betsAll = localStorage.getItem(\"betsAll\");\n            betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n            localStorage.setItem(\"betsAll\", betsAll);\n            geraBilhete();\n        }\n        localStorage.removeItem('delete');\n        if (localStorage.getItem('click') != null && localStorage.getItem('click') != '') {\n            onClickHandler();\n            localStorage.removeItem('click');\n        }\n        InitOdds();\n\n\n\n    }, 100);\n\n\n    function noneBets() {\n        localStorage.setItem('displayBets', 'none');\n        document.getElementById('valuesBets').style.display = 'none';\n        document.getElementById('value').style.display = 'none';\n        document.getElementById('clients').style.display = 'none';\n        document.getElementById('done').style.display = 'none';\n        document.getElementById('fieldClient').style.display = 'none';\n        document.getElementById('buttonClient').style.display = 'none';\n        document.getElementById('resetField1').value = '';\n\n    }\n\n    function blockBets() {\n        localStorage.setItem('displayBets', 'block');\n        document.getElementById('value').style.display = 'block';\n        document.getElementById('clients').style.display = 'block';\n        document.getElementById('done').style.display = 'block';\n        document.getElementById('fieldClient').style.display = 'block';\n        document.getElementById('buttonClient').style.display = 'block';\n        document.getElementById('valuesBets').style.display = 'block';\n    }\n\n\n    function geraBilhete() {\n        if (localStorage.getItem('betsAll') == \"\") {\n            noneBets();\n        }\n\n        try {\n            document.getElementById(\"bilhete\").innerHTML = '';\n            localStorage.getItem('betsAll').split('=').slice(0, -1).map((b) => {\n                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                let data = Number.isInteger(\n                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[0];\n                let bets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[1];\n                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                let date = \"delete\";\n\n                document.getElementById(\"bilhete\").innerHTML += '<div>\\n' +\n                    '\\t\\n' +\n                    '    <div style=\"width: calc(100% - 20px); margin: 10px; padding: 10px; background-color: rgb(248, 236, 194); color: black; box-sizing: border-box;\">\\n' +\n                    '    <div style=\"font-family:\\'Roboto Condensed\\',sans-serif !important;\">\\n' +\n                    '        <span >' + bets + '</span>\\n' +\n                    '        <span onclick=\"localStorage.setItem(\\'' + date + '\\', \\'' + b + '\\')\"\\n' +\n                    ' id-item=\"1\" style=\"float:right; margin-top:-5px; color: black; width: 20px; cursor: pointer\"><b>X</b></span>\\n' +\n\n                    '    </div>\\n' +\n                    '<hr style=\"width: 100%; border: 0; border-bottom: 1px dashed #292323; margin-bottom: 10px\">\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>Futebol - ' + data + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + campeonato + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + times + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>' + typeBets + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px;\">Cotação: </span>' + '<b style=\"float: right;\">' + value + '</b>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '</div>'\n\n                blockBets();\n\n\n            });\n\n            cotacaoHandler();\n\n        } catch (e) {\n            // setBilhetes(\"\");\n        }\n    }\n\n    function salvarBilhete() {\n\n\n        let d = \"\";\n        let prejogo = localStorage.getItem('betsAll');\n        let dx = new Date();\n        let dateHour = dx.getDate() + '/' + (parseInt(dx.getMonth()) + 1) + '/' + dx.getFullYear() + ' ' + dx.getHours() + ':' + dx.getMinutes() + ':' + dx.getSeconds();\n\n        document.getElementById('header').innerHTML = '\\n' +\n            '                    <div >\\n' +\n            '\\n' +\n            '                        <center><h2 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\">SONHOBETS</h2></center>\\n' +\n            '\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <center><h4 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\" class=\"H3\">' + ((localStorage.getItem('betsAll').split(\"=\").length - 1) > 1 ? 'Aposta Multipla' : 'Aposta Simples') + '</h4></center>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block; text-align: left;\">DATA:</span> <span id=\"conteudo_txtDataBilhete\" style=\"display: inline-block\"> ' + dateHour + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">COLABORADOR:</span> <span style=\"display: inline-block\">' + nomeBanca + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">CLIENTE:</span> <span style=\"display: inline-block\">' + client + '</span><br>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">APOSTA</span></div>\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">COTAÇÃO</span></div>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n';\n\n        prejogo.split('=').slice(0, -1).map((b) => {\n\n            let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n            let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n            let data = Number.isInteger(\n                parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n            ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n            let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n            let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n\n\n            document.getElementById('bilheteP').innerHTML +=\n                '<div id=\"conteudo_divBilheteImpressao\">\\n' +\n                '<div>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block; text-align: left;\">Futebol - ' + data + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + campeonato + '</span><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + times + '</span><br>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block; text-align: left;\">' + typeBets.split('--')[0] + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">' + typeBets.split('--')[1] + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + value + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Status:</span></div>\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + \"Aberto\" + '</span></div>\\n' +\n                '\\n' +\n                '                                    <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                '\\n' +\n                '                                </div>\\n'\n\n        });\n\n        document.getElementById('footer').innerHTML = '                            \\n' +\n            '                                \\n' +\n            '                            \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Quant. Jogos:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + (localStorage.getItem('betsAll').split(\"=\").length - 1) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Cotação:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span  style=\"display: inline-block\">' + parseFloat(document.getElementById('cotacao').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '\\t\\t\\t\\t\\t\\t\\t</div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Total Apostado:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span id=\"conteudo_txtTotalApostado\" style=\"display: inline-block\">R$ ' + parseFloat(entrada).toFixed(2) + '</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Poss. Retorno:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">R$ ' + parseFloat(document.getElementById('retorno').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\"><span style=\"display: inline-block\">BILHETE</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\">\\n' +\n            '                                <h2 style=\"font-weight:bold\" class=\"H3\">' + codigo + '</h2>                  \\n' +\n            '                            </div>\\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <span>Ao realizar apostas na SONHOBETS, você concorda com todos os termos e regras do site. Boa Sorte!</span>\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                    </div>\\n' +\n            '                </div>';\n\n        api.get('/api/getdate')\n            .then(res => {\n                d = (res.data.date);\n\n                let comissaoValor = 0;\n                let qtd = parseFloat(localStorage.getItem('betsAll').split(\"=\").length - 1);\n\n                for (let valores of bilhetes) {\n\n                    if (qtd >= parseFloat(valores.split(':')[0])) {\n                        comissaoValor = parseFloat(valores.split(':')[1]) / 100;\n\n                    }\n                }\n\n\n                api.post('/api/addbilhete',\n                    {\n                        \"codigo\": codigo,\n                        \"bancaId\": bancaId,\n                        \"gerenteId\": gerenteId,\n                        \"nomeCliente\": client,\n                        \"nomeBanca\": nomeBanca,\n                        \"dataDaAposta\": d,\n                        \"valorDeEntrada\": parseFloat(entrada),\n                        \"valorDeSaida\": parseFloat(document.getElementById('retorno').innerHTML),\n                        \"cotacao\": parseFloat(document.getElementById('cotacao').innerHTML),\n                        \"tipoDeJogo\": \"Ao Vivo\",\n                        \"quantidadeJogos\": qtd,\n                        \"tipoSimplesouMultiplo\": qtd > 1 ? \"M\" : \"S\",\n                        \"comissao\": (parseFloat(entrada) * comissaoValor).toFixed(2),\n                        \"status\": \"Aberto\"\n\n                    })\n                    .then(res => {\n                        let prejogo = localStorage.getItem('betsAll');\n                        try {\n                            prejogo.split('=').slice(0, -1).map((b) => {\n                                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                                let data = Number.isInteger(\n                                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n                                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                                api.post('/api/addjogo',\n                                    {\n                                        \"codigoBilhete\": codigo,\n                                        \"dataDoJogo\": data,\n                                        \"nomeDoCampeonato\": campeonato,\n                                        \"nomeDosTimes\": times,\n                                        \"tipoDeCotacao\": typeBets,\n                                        \"cotacao\": parseFloat(value),\n                                        \"status\": \"Aberto\",\n                                        // \"idEvento\": b.split('-')[0],\n                                    })\n                                    .then(res => {\n                                        try {\n                                            if (res.data) {\n                                                localStorage.removeItem(b.split('-')[0] + 'x');\n                                                localStorage.removeItem(b.split('-')[0]);\n                                                clearOdds();\n                                                localStorage.setItem('betsAll', localStorage.getItem('betsAll').replace(b + '=', ''));\n                                                geraBilhete();\n                                                document.getElementById(\"retorno\").innerHTML = '0.00';\n                                            }\n                                        } catch (e) {\n\n                                        }\n\n                                    }).catch(error => {\n                                    console.log(error);\n                                });\n\n                            });\n                            setEntrada(0);\n                            localStorage.setItem(\"retorno\", \"\");\n                            setClient(\"\");\n                            addVeiryClient(\"\");\n\n                        } catch (e) {\n\n                        }\n\n                    }).catch(error => {\n                    console.log(error);\n                });\n            }).catch(error => {\n            console.log(error);\n        });\n\n    }\n\n\n    function cotacaoHandler() {\n        try {\n            var resultCotaca = 1;\n            var id = localStorage.getItem('betsAll').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            } else {\n                resultCotaca = 0;\n            }\n\n            let cotacao = sessionStorage.getItem('cotacaoAdmin');\n            document.getElementById('cotacao').innerHTML = parseFloat(resultCotaca > Number(cotacao) ?\n                Number(cotacao) : resultCotaca).toFixed(2);\n        } catch (e) {\n\n        }\n\n    }\n\n    function valueBetsHandler(e) {\n        var value = e.target.value;\n        \n        let cotacao = Number(document.getElementById('cotacao').innerHTML);\n        if (1) {\n\n                setEntrada(value);\n\n                document.getElementById('retorno').innerHTML =\n                    ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                        ((cotacao * Number(value)).toFixed(2));\n\n\n        } else {\n            document.getElementById('retorno').innerHTML = '0.00';\n            setEntrada(0);\n\n            handleCloseURL();\n        }\n\n\n    }\n\n    function addVeiryClient(e) {\n        setValue(e.target.value);\n\n    }\n\n    function addClient() {\n        if (value.length > 3) {\n            if (getClient() == false) {\n                api.post('/api/addcliente', {\n                    'nome': value,\n                    'banca': sessionStorage.getItem('login'),\n                    'gerenteId': sessionStorage.getItem('gerenteId'),\n                    'nomeBanca': sessionStorage.getItem('nomeBanca')\n                })\n                    .then(res => {\n                        try {\n                            let nomes = [];\n                            if (res.data) {\n                                if(res.data.clientes == false){\n                                    handleClickOpenURL();\n                                    setMessage(`Já possui um cliente com esse nome!`);\n                                } else {\n                                    handleClickOpenURL();\n                                    setMessage(`Cliente cadastrado com sucesso!`);\n                                    api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                                        .then(res => {\n                                            try {\n                                                if (res.data) {\n                                                    res.data.clientes.map((c) => {\n                                                        nomes.push(c.nome);\n                                                    });\n                                                }\n                                            } catch (e) {\n\n                                            }\n                                            setClientes((nomes));\n                                        }).catch(error => {\n                                        console.log(error);\n                                    });\n                                }\n                            }\n                        } catch (e) {\n\n                        }\n                        setValue(\"\");\n                    }).catch(error => {\n                    console.log(error);\n                });\n            } else {\n                setMessage(`Cliente já existe nessa banca!`);\n                handleClickOpenURL();\n            }\n        } else {\n            setMessage(`O nome deve conter mais de 3 letras!`);\n            handleClickOpenURL();\n        }\n    }\n\n\n    function getClient() {\n        let r = false;\n        clientes.map((f) => {\n            console.log(f);\n            if (f == client) {\n                r = true;\n            }\n        });\n        return r;\n    }\n\n    function verifyClientHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setClient(auxClient);\n\n    }\n\n\n    function validIn(){\n\n        let valorMax = sessionStorage.getItem('valorDeSaida');                                                          let valorMin = sessionStorage.getItem('valorDeEntrada');                                                \n        if (parseFloat(entrada) >= valorMin && parseFloat(entrada) <= valorMax) {                                               betsDone();                          \n        } else if (parseFloat(entrada) < valorMin) {\n\n         document.getElementById('retorno').innerHTML = '0.00';\n                setMessage(\"O valor mínimo permitido<br/> por aposta é de R$ \" + parseFloat(valorMin).toFixed(2)\n);                                                                handleClickOpenURL();\n        } else {                                                    setMessage(\"O valor máximo permitido<br/> por aposta é de R$ \" + parseFloat(valorMax).toFixed(2));\n          handleClickOpenURL();                                 }                                                   }\n\n\n    function betsDone() {\n        let qtd = localStorage.getItem('betsAll2').split(\"=\").length-1;\n        let qtdJogos = sessionStorage.getItem(\"qtdJogos\");\n        if(qtd <= qtdJogos) {\n        handleClickOpenLoading();\n\n\n        setTimeout(function () {\n\n            let valid1 = false;\n            let valid2 = true;\n            let valid3 = false;\n            let oddValue = false;\n            let teams = [];\n            let cotacaoAux = 1;\n            let cotAux = parseFloat(document.getElementById('cotacao').innerHTML);\n            let betsAll = localStorage.getItem(\"betsAll\").split(\"=\");\n            var id = localStorage.getItem('betsAll').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    cotacaoAux *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            }\n            betsAll = betsAll.slice(0, betsAll.length - 1);\n            let i = 0;\n            betsAll.map((bets) => {\n\n                let auxBets = localStorage.getItem(bets.split('-')[0] + \"x\").split(',');\n                let id = auxBets.slice(-1)[0];\n                let opcao = auxBets[0].split(':')[0];\n                let key = auxBets[0].split(':')[1];\n\n\n                api.get('/api/getmaison/' + id)\n                    .then(res => {\n\n                        let valores = new Set();\n                        let cotacoes = {};\n\n\n                        try {\n                            let getlive = res.data.mais\n                            if(parseInt(getlive.tempoDecorridoMin) > 75){\n                                getlive = {}\n                            }\n\n\n                            i++;\n\n\n                            if (res.data) {\n                                getlive.modalidades.map((m) => {\n                                    m.cotacoes.map((c) => {\n                                        if (c.subeventos != null) {\n                                            c.subeventos.map((e) => {\n                                                let aux = (m.titulo + \"--\" + ' (' + e.nome + ')')\n                                                if (m.titulo + \"--\" + ((m.titulo != 'Vencedor do Encontro') ?\n                                                        (e.titulo + ' (' + e.nome + ')') : e.nome) == auxBets[1] ||\n                                                    aux == auxBets[1]) {\n\n\n                                                    try{\n                                                        oddValue = true;\n                                                        valid2 = false;\n                                                        let cot =  (Number(e.cotacao / 100) +\n                                                            (Number(e.cotacao / 100) *\n                                                                (cotacoes[m.titulo][1] / 100))).toFixed(2);\n                                                        if (Number(auxBets[4]) == 15 &&\n                                                            Number(auxBets[4]) > cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        } else if (Number(auxBets[4]) != cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        }\n                                                    }catch (e) {\n\n                                                    }\n                                                }\n                                            })\n                                        }\n                                    })\n                                })\n\n\n                                if (betsAll.length == i) {\n\n\n                                    if (Number(document.getElementById('retorno').innerHTML) > 0) {\n                                        if (cotacaoAux > parseFloat(sessionStorage.getItem('cotacaoAdminMin'))) {\n                                            if (getClient() == false) {\n                                                setMessage(`Por favor adicione um cliente válido!`);\n                                                handleClickOpenURL();\n                                            } else if (valid2) {\n                                                setMessage(`Algumas apostas foram suspenas, aguarde um momento e confirme sua aposta!`);\n                                                handleClickOpenURL();\n                                            } else if (valid1) {\n\n                                                var resultCotaca = 1;\n                                                var id = localStorage.getItem('betsAll').split('=');\n\n                                                if (id !== null && id[0] !== '') {\n                                                    for (let n in id.slice(0, id.length - 1)) {\n                                                        resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                                                    }\n                                                } else {\n                                                    resultCotaca = 0;\n                                                }\n                                                let r = parseFloat(document.getElementById('retorno').innerHTML);\n                                                if(resultCotaca != r && resultCotaca <= 10000){\n                                                    document.getElementById('retorno').innerHTML = ' ' +\n                                                        Number(resultCotaca * Number(document.getElementById('resetField1').value)).toFixed(2);\n                                                    setMessage(`A cotação escolhida alterou de: R$ ${cotacaoAux.toFixed(2)} <br/> para: R$ ${resultCotaca.toFixed(2)} . Clique novamente para confirmar a aposta!`);\n                                                } else {\n                                                    setMessage(`Algumas apostas foram alteradas, pode finalizar sua aposta!`);\n                                                }\n                                                handleClickOpenURL();\n\n\n                                            }\n                                            if (getClient() && !valid1 && !valid2 && !valid3) {\n                                                let qtd = localStorage.getItem('betsAll').split(\"=\").length - 1;\n                                                let auxSaldo = qtd > 1 ? saldoGeral : saldoSimples;\n\n                                                if (auxSaldo >= parseFloat(entrada)) {\n                                                    salvarBilhete();\n\n                                                    noneBets();\n                                                    clearOdds();\n                                                    geraBilhete();\n                                                    var top = window.screen.height - 300;\n                                                    top = top > 0 ? top/2 : 0;\n\n                                                    var left = window.screen.width - 400;\n                                                    left = left > 0 ? left/2 : 0;\n\n                                                    const WinPrint = window.open('', '_blank', 'width=800,height=900,scrollbars=0, top=' + top + ',left=' + left + '' );\n                                                    WinPrint.document.write('<button class=\"block2\" onclick=\"whatsapp()\" id=\"print1\"><b>WHATSAPP</b></button><br>' +\n                                                        '<button class=\"block1\" onclick=\"imprimir()\" id=\"print2\"><b>IMPRIMIR</b></button>' + document.getElementById(\"dialogBilhete\").innerHTML+'<style>' +\n                                                        'body {background-color: rgb(248, 236, 194); color: black;  font-size: 12px}' +\n                                                        'span {font-size: 12px}' +\n                                                        '.block1 {' +\n                                                        'display: block;' +\n                                                        'width: 100%;' +\n                                                        'border: none;' +\n                                                        'background-color: #3f51b5;' +\n                                                        'color: white;' +\n                                                        'padding: 14px 28px;' +\n                                                        'font-size: 26px;' +\n                                                        'cursor: pointer;' +\n                                                        'text-align: center;' +\n                                                        '}' +\n                                                        '.block2 {' +\n                                                        'display: block;' +\n                                                        'width: 100%;' +\n                                                        'border: none;' +\n                                                        'background-color: #04AA6D;' +\n                                                        'color: white;' +\n                                                        'padding: 14px 28px;' +\n                                                        'font-size: 26px;' +\n                                                        'cursor: pointer;' +\n                                                        'text-align: center;' +\n                                                        '}' +\n                                                        '</style>'+\n\n                                                        '<script>' +\n                                                        'function imprimir(){document.getElementById(\"print1\").style.display = \"none\";' +\n                                                        'document.getElementById(\"print2\").style.display = \"none\";' +\n                                                        'setTimeout(function () { window.print(); }, 500);window.onfocus = function () { ' +\n                                                        'setTimeout(function () { window.close(); }, 500); };' +\n                                                        '};' +\n                                                        'function whatsapp(){window.location.href=' +\n                                                        '\"whatsapp://send?text=Link+para+seu+bilhete%3a%0d%0a%0d%0' +\n                                                        'ahttps%3A%2F%2Fwww.sonhobets.com.br%2F%23%2FverificarBilhete%2F' + codigo + '\";}</script>');\n                                                } else {\n                                                    alert('Sem limite para apostar!');\n                                                }\n\n\n                                            }\n                                        } else {\n                                            setMessage('A cotação mínima é de R$ ' + parseFloat(sessionStorage.getItem('cotacaoAdminMin'))\n                                                .toFixed(2));\n                                            handleClickOpenURL();\n                                        }\n                                    } else {\n                                        setMessage('Por favor insira um valor de no mínimo R$ ' + sessionStorage.getItem('valorDeEntrada') + ',00');\n                                        handleClickOpenURL();\n                                    }\n                                    handleCloseLoading();\n                                }\n                            }\n\n\n                        } catch (e) {\n                            alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                            handleCloseLoading();\n                            console.log(e);\n                            valid1 = true;\n                            valid2 = true;\n                        }\n                    }).catch(error => {\n                    alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                    handleCloseLoading();\n                });\n\n\n            });\n\n\n        }, 0);\n        } else {\n            alert('Você selecionou ' + qtd + ' jogos, o máximo é ' + qtdJogos);\n        }\n    }\n\n\n    function onClickHandler() {\n        document.getElementById('resetField1').value = '';\n        if(sessionStorage.getItem('login') != null && sessionStorage.getItem('login') != \"\") {\n\n            if (1) {\n                sessionStorage.setItem('minutos', new Date().getMinutes());\n                document.getElementById('bilheteP').innerHTML = '';\n                const team = localStorage.getItem('click');\n                document.getElementById(\"retorno\").innerHTML = '0.00';\n                try {\n                    let betsGame = team.split(\"=\");\n\n                    var date = new Date(Date.parse(betsGame[7].replace(\"Z\", \"+00:00\")));\n                    var hourMinute =\n                        ((date.getHours() + \"\").length === 1\n                            ? \"0\" + date.getHours()\n                            : date.getHours()) +\n                        \":\" +\n                        ((date.getMinutes() + \"\").length === 1\n                            ? \"0\" + date.getMinutes()\n                            : date.getMinutes());\n\n                    var monthDate =\n                        date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n                    betsGame[7] = monthDate + \"  \" + hourMinute;\n\n                    if (\n                        localStorage.getItem(betsGame.slice(-1)[0]) === betsGame[2] &&\n                        document\n                            .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                            .innerHTML.indexOf(\"/svg>\") === -1\n                    ) {\n                        document.getElementById(\n                            betsGame[2] + betsGame.slice(-1)[0]\n                        ).style.background = \"\";\n                        localStorage.setItem(betsGame.slice(-1)[0], \"\");\n                        localStorage.setItem(betsGame.slice(-1)[0] + \"x\", \"\");\n                        localStorage.removeItem(betsGame.slice(-1)[0]);\n                        localStorage.removeItem(betsGame.slice(-1)[0] + \"x\");\n\n                        betsAll = localStorage.getItem(\"betsAll\");\n                        betsAll = betsAll.replace(\n                            betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\",\n                            \"\"\n                        );\n                        localStorage.setItem(\"betsAll\", betsAll);\n                        geraBilhete();\n                        cotacaoHandler();\n\n                    } else if (\n                        document\n                            .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                            .innerHTML.indexOf(\"/svg>\") === -1\n                    ) {\n\n                        document.getElementById(\n                            betsGame[2] + betsGame.slice(-1)[0]\n                        ).style.background = \"red\";\n                        if (localStorage.getItem(betsGame.slice(-1)[0])) {\n                            document.getElementById(\n                                localStorage.getItem(betsGame.slice(-1)[0]) + betsGame.slice(-1)[0]\n                            ).style.background = \"\";\n                        }\n                        localStorage.setItem(betsGame.slice(-1)[0] + \"x\", betsGame);\n                        betsAll = localStorage.getItem(\"betsAll\");\n                        betsAll = betsAll.replace(\n                            betsGame.slice(-1)[0] +\n                            \"-\" +\n                            localStorage.getItem(betsGame.slice(-1)[0]) +\n                            \"=\",\n                            \"\"\n                        );\n                        localStorage.setItem(betsGame.slice(-1)[0], betsGame[2]);\n                        betsAll = betsAll + betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\";\n                        localStorage.setItem(\"betsAll\", betsAll);\n                        geraBilhete();\n                        cotacaoHandler();\n                    }\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        }\n    };\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        let cancel = true;\n\n\n\n        async function getLoginAPI() {\n            if (Number(new Date().getMinutes() - Number(sessionStorage.getItem('minutos'))) >= 10) {\n                history.push('/banca');\n                sessionStorage.setItem('minutos', new Date().getMinutes());\n            }\n\n            api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            setSaldoSimples(res.data.bancas.saldoSimples);\n                            setSaldoGeral(res.data.bancas.saldoGeral);\n                            setNomeBanca(res.data.bancas.nome);\n                            setGerenteId(res.data.bancas.gerente);\n                            setBilhetes(res.data.bancas.comissaoPreJogo.split(';'));\n                            setBancaId(res.data.bancas.id);\n                            console.log(res.data.bancas.ativarApostasAoVivos == false);\n                            if (res.data.bancas.ativarApostasAoVivos == true) {\n\n                                let l = [];\n                                let cotacao = {};\n                                api.get('/api/getlive')\n                                    .then(res => {\n\n                                        try {\n                                            document.getElementById('aoVivo').innerHTML = '';\n                                            res.data.live.campeonatos.map((c) => {\n                                                try {\n                                                    res.data.cotacao.map((o) => {\n                                                        cotacao[o.tipoDeCotacao] = [o.status, o.porcentagem];\n                                                    })\n\n                                                    setCotacoes(cotacao);\n                                                    c.eventos.map((live) => {\n\n                                                        if (live.periodo != \"Não Iniciado\" && parseInt(live.tempoDecorridoMin) <= 75) {\n                                                            let idCasa = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ?\n                                                                (live.subeventos.length >= 3 ?\n                                                                    ('VencedordoEncontro' +\n                                                                        live.subeventos[0].aposta +\n                                                                        live.subeventos[0].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                                            let idEmpate = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ?\n                                                                (live.subeventos.length >= 3 ?\n                                                                    ('VencedordoEncontro' +\n                                                                        live.subeventos[1].aposta +\n                                                                        live.subeventos[1].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                                            let idFora = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ?\n                                                                (live.subeventos.length >= 3 ?\n                                                                    ('VencedordoEncontro' +\n                                                                        live.subeventos[2].aposta +\n                                                                        live.subeventos[2].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                                            let valorCasa = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                                                ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                                live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                                                && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                                    (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                            ? sessionStorage.getItem('cotaMax') : (live.subeventos[0].cotacao / 100)) +\n                                                                        parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                                            ((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                    : html) : html)\n\n                                                            let valorEmpate = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                                                ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                                live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                                                && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                                    (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                            ? sessionStorage.getItem('cotaMax') : (live.subeventos[1].cotacao / 100)) +\n                                                                        parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                                            ((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                    : html) : html)\n\n                                                            let valorFora = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                                                ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                                live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                                                && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                                    (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                            ? sessionStorage.getItem('cotaMax') : (live.subeventos[2].cotacao / 100)) +\n                                                                        parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                                            ((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                    : html) : html)\n\n\n                                                            let xcasa = Number.isInteger(parseInt(valorCasa)) == true ? parseFloat(valorCasa).toFixed(2) :\n                                                                (live.subeventos[0].cotacao / 100).toFixed(2);\n\n                                                            let casa = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                                                    live.subeventos[0].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                                                + live.subeventos[0].aposta + \"=\" +\n                                                                (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[0].aposta + live.subeventos[0].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                                                + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                                                    'VencedordoEncontro' + live.subeventos[0].aposta : '') + \"=\" +\n                                                                (live.subeventos.length >= 3 ? xcasa >\n                                                                parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xcasa : 0)\n                                                                + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                                                + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                                                \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                                                            let xempate = Number.isInteger(parseInt(valorEmpate)) == true ? parseFloat(valorEmpate).toFixed(2) :\n                                                                (live.subeventos[1].cotacao / 100).toFixed(2);\n\n                                                            let empate = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                                                    live.subeventos[1].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                                                + live.subeventos[1].aposta + \"=\" +\n                                                                (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[1].aposta + live.subeventos[1].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                                                + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                                                    'VencedordoEncontro' + live.subeventos[1].aposta : '') + \"=\" +\n                                                                (live.subeventos.length >= 3 ? xempate >\n                                                                parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xempate : 0)\n                                                                + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                                                + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                                                \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                                                            let xfora = Number.isInteger(parseInt(valorFora)) == true ? parseFloat(valorFora).toFixed(2) :\n                                                                (live.subeventos[2].cotacao / 100).toFixed(2);\n\n                                                            let fora = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                                                    live.subeventos[2].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                                                + live.subeventos[2].aposta + \"=\" +\n                                                                (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[2].aposta + live.subeventos[2].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                                                + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                                                    'VencedordoEncontro' + live.subeventos[2].aposta : '') + \"=\" +\n                                                                (live.subeventos.length >= 3 ? xfora >\n                                                                parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xfora : 0)\n                                                                + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                                                + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                                                \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n\n\n\n                                                            let date = (new Date(live.data).getDate() < 10\n                                                                    ? \"0\" + new Date(live.data).getDate()\n                                                                    : new Date(live.data).getDate()) +\n                                                                \"/\" +\n                                                                (Number(new Date(live.data).getMonth()) + 1 < 10\n                                                                    ? \"0\" +\n                                                                    (Number(new Date(live.data).getMonth()) + 1)\n                                                                    : Number(new Date(live.data).getMonth()) + 1) +\n                                                                \"/\" +\n                                                                new Date(live.data).getFullYear() +\n                                                                \" \" +\n                                                                (new Date(live.data).getHours() < 10\n                                                                    ? \"0\" + new Date(live.data).getHours()\n                                                                    : new Date(live.data).getHours()) +\n                                                                \":\" +\n                                                                (Number(new Date(live.data).getMinutes() + \"\") === 0\n                                                                    ? \"00\"\n                                                                    : Number(new Date(live.data).getMinutes() + \"\") >=\n                                                                    10\n                                                                        ? new Date(live.data).getMinutes() + \"\"\n                                                                        : \"0\" + (new Date(live.data).getMinutes() + \"\"))\n                                                            if (width > 600) {\n                                                                document.getElementById('aoVivo')\n                                                                    .innerHTML += '<tr id=\"zebra\">' +\n                                                                    '<td class=\"times\">' + live.casa + ' X ' + live.fora + '<br/>' +\n                                                                    c.pais + ': ' + c.nome + '<br/>' +\n                                                                    '<b>(' + live.placar.split(':')[0] + ' - ' + live.placar.split(':')[1] + ')</b><br/>' +\n                                                                    '<b>' + (live.periodo == 'INT' ? 'Intervalo' : live.periodo) + ' - ' + live.tempoDecorridoMin + 'min</b>' +\n                                                                    '</td>' +\n                                                                    '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + casa + '\\')\">' +\n                                                                    '<b class=\"button\" id=\"' + (valorCasa[0] == '&' ? '' : idCasa) + '\">' + valorCasa + '</b></td>' +\n\n                                                                    '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + empate + '\\')\">' +\n                                                                    '<b class=\"button\" id=\"' + (valorEmpate[0] == '&' ? '' : idEmpate) + '\">' + valorEmpate + '</b></td>' +\n\n                                                                    '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + fora + '\\')\">' +\n                                                                    '<b class=\"button\" id=\"' + (valorFora[0] == '&' ? '' : idFora) + '\">' + valorFora + '</b></td>' +\n\n                                                                    '<td id=\"ocultar\" ><a href=\"/#/maisaovivo/' + live.id + '\"' +\n                                                                    'class=\"buttonM\"><p style=\"font-size: 26px;\">' + \"+\" + '</p></a></td>' +\n                                                                    '</tr>'\n                                                            } else {\n\n                                                                document.getElementById('aoVivo')\n                                                                    .innerHTML += '<fieldset style=\"border: 1px solid black;\"><tr id=\"bets1\">' +\n                                                                    '<td class=\"times\"><a style=\"text-decoration: none; color: black\" href=\"/#/maisaovivo/' + live.id + '\"' +\n                                                                    '>' + live.casa + ' X ' + live.fora + '</a><br/>' +\n                                                                    c.pais + ': ' + c.nome + '<br/>' +\n                                                                    '<b>(' + live.placar.split(':')[0] + ' - ' + live.placar.split(':')[1] + ')</b><br/>' +\n                                                                    '<b>' + (live.periodo == 'INT' ? 'Intervalo' : live.periodo) + '<br/>' + live.tempoDecorridoMin + 'min</b>' +\n                                                                    '</td>' +\n                                                                    '<td id=\"bets2\">' +\n                                                                    '<span id=\"' + (valorCasa[0] == '&' ? '' : idCasa) + '\" class=\"button\" style=\"margin-left: 52px;\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + casa + '\\')\">' +\n                                                                    '<b><p id=\"vcasa\">' + valorCasa + '</p></b></span>' +\n\n                                                                    '<span id=\"' + (valorEmpate[0] == '&' ? '' : idEmpate) + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + empate + '\\')\">' +\n                                                                    '<b><p id=\"vcasa\">' + valorEmpate + '</p></b></span>' +\n\n\n                                                                    '<span id=\"' + (valorFora[0] == '&' ? '' : idFora) + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + fora + '\\')\">' +\n                                                                    '<b><p id=\"vcasa\">' + valorFora + '</p></b></span>' + '</td>' +\n\n                                                                    '</tr></fieldset>'\n                                                            }\n                                                        }\n\n                                                    })\n\n\n                                                } catch (e) {\n\n                                                }\n\n                                            })\n\n                                        } catch (e) {\n                                            // console.log(e);\n                                        }\n                                        setLive(l);\n\n                                    }).catch(error => {\n                                    // console.log(error);\n                                });\n\n                            } else {\n                                document.getElementById('aoVivo')\n                                    .innerHTML = '<center>Apostas Ao Vivo Desativadas. Fale com seu gerente!</center>';\n                            }\n\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        async function getClienteAPI() {\n            let nomes = [];\n            api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n\n                        if (res.data) {\n\n                            res.data.clientes.map((c) =>{\n                                nomes.push(c.nome);\n\n                            })\n                        }\n                    } catch (e) {\n\n                    }\n                    setClientes(nomes);\n\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n        async function gamesLivre(){\n            if (Number(new Date().getMinutes() - Number(sessionStorage.getItem('minutos'))) >= 10) {\n                history.push('/banca');\n                sessionStorage.setItem('minutos', new Date().getMinutes());\n            }\n            let l = [];\n            let cotacao = {};\n            api.get('/api/getlive')\n                .then(res => {\n\n                    try {\n                        document.getElementById('aoVivo').innerHTML = '';\n                        res.data.live.campeonatos.map((c) => {\n                            try {\n                                res.data.cotacao.map((o) => {\n                                    cotacao[o.tipoDeCotacao] = [o.status, o.porcentagem];\n                                })\n\n\n                                c.eventos.map((live) => {\n                                    if (live.periodo != \"Não Iniciado\" && parseInt(live.tempoDecorridoMin) <= 75) {\n                                        let idCasa = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ?\n                                            (live.subeventos.length >= 3 ?\n                                                ('VencedordoEncontro' +\n                                                    live.subeventos[0].aposta +\n                                                    live.subeventos[0].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                        let idEmpate = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ?\n                                            (live.subeventos.length >= 3 ?\n                                                ('VencedordoEncontro' +\n                                                    live.subeventos[1].aposta +\n                                                    live.subeventos[1].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                        let idFora = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ?\n                                            (live.subeventos.length >= 3 ?\n                                                ('VencedordoEncontro' +\n                                                    live.subeventos[2].aposta +\n                                                    live.subeventos[2].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                        let valorCasa = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                            && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? sessionStorage.getItem('cotaMax') : (live.subeventos[0].cotacao / 100)) +\n                                                    parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                : html) : html)\n\n                                        let valorEmpate = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                            && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? sessionStorage.getItem('cotaMax') : (live.subeventos[1].cotacao / 100)) +\n                                                    parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                : html) : html)\n\n                                        let valorFora = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                            && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? sessionStorage.getItem('cotaMax') : (live.subeventos[2].cotacao / 100)) +\n                                                    parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                : html) : html)\n\n\n                                        let xcasa = Number.isInteger(parseInt(valorCasa)) == true ? parseFloat(valorCasa).toFixed(2) :\n                                            (live.subeventos[0].cotacao / 100).toFixed(2);\n\n                                        let casa = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                                live.subeventos[0].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                            + live.subeventos[0].aposta + \"=\" +\n                                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[0].aposta + live.subeventos[0].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                                'VencedordoEncontro' + live.subeventos[0].aposta : '') + \"=\" +\n                                            (live.subeventos.length >= 3 ? xcasa >\n                                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xcasa : 0)\n                                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                            + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                                        let xempate = Number.isInteger(parseInt(valorEmpate)) == true ? parseFloat(valorEmpate).toFixed(2) :\n                                            (live.subeventos[1].cotacao / 100).toFixed(2);\n\n                                        let empate = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                                live.subeventos[1].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                            + live.subeventos[1].aposta + \"=\" +\n                                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[1].aposta + live.subeventos[1].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                                'VencedordoEncontro' + live.subeventos[1].aposta : '') + \"=\" +\n                                            (live.subeventos.length >= 3 ? xempate >\n                                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xempate : 0)\n                                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                            + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                                        let xfora = Number.isInteger(parseInt(valorFora)) == true ? parseFloat(valorFora).toFixed(2) :\n                                            (live.subeventos[2].cotacao / 100).toFixed(2);\n\n                                        let fora = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                                live.subeventos[2].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                            + live.subeventos[2].aposta + \"=\" +\n                                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[2].aposta + live.subeventos[2].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                                'VencedordoEncontro' + live.subeventos[2].aposta : '') + \"=\" +\n                                            (live.subeventos.length >= 3 ? xfora >\n                                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xfora : 0)\n                                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                            + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n\n\n\n                                        let date = (new Date(live.data).getDate() < 10\n                                                ? \"0\" + new Date(live.data).getDate()\n                                                : new Date(live.data).getDate()) +\n                                            \"/\" +\n                                            (Number(new Date(live.data).getMonth()) + 1 < 10\n                                                ? \"0\" +\n                                                (Number(new Date(live.data).getMonth()) + 1)\n                                                : Number(new Date(live.data).getMonth()) + 1) +\n                                            \"/\" +\n                                            new Date(live.data).getFullYear() +\n                                            \" \" +\n                                            (new Date(live.data).getHours() < 10\n                                                ? \"0\" + new Date(live.data).getHours()\n                                                : new Date(live.data).getHours()) +\n                                            \":\" +\n                                            (Number(new Date(live.data).getMinutes() + \"\") === 0\n                                                ? \"00\"\n                                                : Number(new Date(live.data).getMinutes() + \"\") >=\n                                                10\n                                                    ? new Date(live.data).getMinutes() + \"\"\n                                                    : \"0\" + (new Date(live.data).getMinutes() + \"\"))\n                                        if (width > 600) {\n                                            document.getElementById('aoVivo')\n                                                .innerHTML += '<tr id=\"zebra\">' +\n                                                '<td class=\"times\">' + live.casa + ' X ' + live.fora + '<br/>' +\n                                                c.pais + ': ' + c.nome + '<br/>' +\n                                                '<b>(' + live.placar.split(':')[0] + ' - ' + live.placar.split(':')[1] + ')</b><br/>' +\n                                                '<b>' + (live.periodo == 'INT' ? 'Intervalo' : live.periodo) + ' - ' + live.tempoDecorridoMin + 'min</b>' +\n                                                '</td>' +\n                                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + casa + '\\')\">' +\n                                                '<b class=\"button\" id=\"' + (valorCasa[0] == '&' ? '' : idCasa) + '\">' + valorCasa + '</b></td>' +\n\n                                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + empate + '\\')\">' +\n                                                '<b class=\"button\" id=\"' + (valorEmpate[0] == '&' ? '' : idEmpate) + '\">' + valorEmpate + '</b></td>' +\n\n                                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + fora + '\\')\">' +\n                                                '<b class=\"button\" id=\"' + (valorFora[0] == '&' ? '' : idFora) + '\">' + valorFora + '</b></td>' +\n\n                                                '<td id=\"ocultar\" ><a href=\"/#/maisaovivo/' + live.id + '\"' +\n                                                'class=\"buttonM\"><p style=\"font-size: 26px;\">' + \"+\" + '</p></a></td>' +\n                                                '</tr>'\n                                        } else {\n\n                                            document.getElementById('aoVivo')\n                                                .innerHTML += '<fieldset style=\"border: 1px solid black;\"><tr id=\"bets1\">' +\n                                                '<td class=\"times\"><a style=\"text-decoration: none; color: black\" href=\"/#/maisaovivo/' + live.id + '\"' +\n                                                '>' + live.casa + ' X ' + live.fora + '</a><br/>' +\n                                                c.pais + ': ' + c.nome + '<br/>' +\n                                                '<b>(' + live.placar.split(':')[0] + ' - ' + live.placar.split(':')[1] + ')</b><br/>' +\n                                                '<b>' + (live.periodo == 'INT' ? 'Intervalo' : live.periodo) + '<br/>' + live.tempoDecorridoMin + 'min</b>' +\n                                                '</td>' +\n                                                '<td id=\"bets2\">' +\n                                                '<span id=\"' + (valorCasa[0] == '&' ? '' : idCasa) + '\" class=\"button\" style=\"margin-left: 52px;\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + casa + '\\')\">' +\n                                                '<b><p id=\"vcasa\">' + valorCasa + '</p></b></span>' +\n\n                                                '<span id=\"' + (valorEmpate[0] == '&' ? '' : idEmpate) + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + empate + '\\')\">' +\n                                                '<b><p id=\"vcasa\">' + valorEmpate + '</p></b></span>' +\n\n\n                                                '<span id=\"' + (valorFora[0] == '&' ? '' : idFora) + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click' + '\\', \\'' + fora + '\\')\">' +\n                                                '<b><p id=\"vcasa\">' + valorFora + '</p></b></span>' + '</td>' +\n\n                                                '</tr></fieldset>'\n                                        }\n                                    }\n\n                                })\n\n\n                            } catch (e) {\n\n                            }\n\n                        })\n\n                    } catch (e) {\n                        // console.log(e);\n                    }\n                    setLive(l);\n\n                }).catch(error => {\n                // console.log(error);\n            });\n        }\n\n        setTimeout(() => {\n            if(sessionStorage.getItem('login') == null || sessionStorage.getItem('login') == \"\") {\n                gamesLivre();\n            } else {\n                getLoginAPI();\n            }\n        }, 1000);\n\n        if (cancel) {\n            getLoginAPI();\n            getClienteAPI();\n        }\n\n        let maisAovivo = setInterval(() => {\n\n            if(sessionStorage.getItem('login') == null || sessionStorage.getItem('login') == \"\") {\n                gamesLivre();\n            } else {\n                if (cancel) {\n                    getLoginAPI();\n                    getClienteAPI();\n                }\n            }\n        }, 10000);\n\n        if (cancel) {\n            geraBilhete();\n        }\n\n\n        return () => {\n            // clean up\n            clearInterval(maisAovivo);\n            clearInterval(initInterval);\n            maisAovivo = null;\n            cancel = false;\n            initInterval = null;\n        };\n\n\n    }, []);\n\n\n    const fixedHeightPaper = clsx(classes.paper);\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3} justify=\"flex-start\">\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={8}>\n                            <Grid>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={6} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n                                                            <Typography>\n\n                                                            </Typography>\n                                                            <Typography gutterBottom variant=\"h4\">\n                                                                AO VIVO\n                                                            </Typography>\n                                                            <Typography variant=\"body2\" gutterBottom>\n\n                                                            </Typography>\n                                                            <Typography gutterBottom variant=\"subtitle1\">\n\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                        <TableContainer component={Paper}>\n\n\n                                            <Table stickyHeader aria-label=\"sticky table\">\n\n                                                <TableHead>\n                                                    <TableRow>\n\n                                                        <StyledTableCell align={\"center\"}\n                                                                         id='font'><b>JOGO</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>CASA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>EMPATE</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>FORA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>MAIS</b></StyledTableCell>\n                                                    </TableRow>\n                                                </TableHead>\n\n                                                <TableBody id='aoVivo'>\n                                                    <LinearProgress/>\n                                                </TableBody>\n\n                                            </Table>\n\n                                        </TableContainer>\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n\n                        <Grid item xs={12} md={9} lg={4} id='bl'>\n                            <div id='font'>\n                                <Paper className={fixedHeightPaper}>\n                                    <Typography variant=\"h6\" gutterBottom align=\"center\">\n                                        <b>AO VIVO</b>\n                                    </Typography>\n                                    <Divider/><br/>\n                                    <div id={\"bilhete\"}></div>\n                                    <Divider/>\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Typography align=\"center\" style={{\n                                        lineHeight: '120%',\n\n                                    }}\n                                                id={\"valuesBets\"}>\n                                        Cotação: R$ <b id={\"cotacao\"}></b><br/>\n                                        Possível Retorno:\n                                        R$ <b id={\"retorno\"}>0.00</b><br/>\n                                        Valor da Aposta:<br/><br/>\n                                    </Typography>\n                                    <center>\n                                        <div id={\"value\"}>\n                                            <TextField\n                                                fullWidth\n                                                id={\"resetField1\"}\n                                                label=\"Digite um Valor\"\n                                                type=\"number\"\n\n                                                onChange={valueBetsHandler}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                onInput={(e) => {\n                                                    e.target.value = Math.max(0, parseInt(e.target.value)).toString().slice(0, 4)\n                                                }}\n                                                variant=\"filled\"\n                                            /></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <div id={\"clients\"}>\n                                        <Autocomplete\n                                            id=\"controllable-states-demo\"\n                                            value={client}\n                                            onChange={(event, newValue) => {\n                                                setClient(newValue);\n                                            }}\n                                            inputValue={inputValue}\n                                            onInputChange={(event, newInputValue) => {\n                                                setInputValue(newInputValue);\n                                            }}\n                                            options={clientes}\n                                            renderInput={(params) =>\n                                                <TextField\n                                                    {...params}\n\n                                                    label=\"Nome do Cliente\"\n                                                    variant=\"outlined\"/>}\n                                        /></div>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Button id={\"done\"}\n                                            onClick={validIn} variant=\"contained\" color=\"secondary\">\n                                        <b>FINALIZAR APOSTA</b>\n                                    </Button>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <center>\n                                        <div id={\"fieldClient\"}>\n                                            <TextField\n                                                id={\"resetField3\"}\n                                                value={value}\n                                                label=\"Cadastrar Cliente\"\n                                                type=\"search\"\n                                                fullWidth\n                                                onChange={addVeiryClient}\n                                                variant=\"outlined\"/></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <Button id={\"buttonClient\"}\n                                            variant=\"contained\"\n                                            onClick={addClient}\n                                            color=\"secondary\">\n                                        <b>CADASTRAR CLIENTE</b>\n                                    </Button>\n                                    <br style={{marginBottom: '10px'}}/>\n                                </Paper>\n                            </div>\n                        </Grid>\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <div>\n                    <ScrollUpButton/>\n                </div>\n                <div style={{display: 'none'}}>\n\n                    <Grid item xs={12} md={4} sm={12}>\n                        <div style={{\n                            width: 'calc(100% - 15%)',\n                            fontSize: 12,\n                            backgroundColor: 'rgb(248, 236, 194)',\n                            color: 'black',\n                            boxSizing: 'border-box'\n                        }} ref={componentRef} id=\"dialogBilhete\">\n                            <div id=\"header\"></div>\n                            <div id=\"bilheteP\"></div>\n                            <div id=\"footer\"></div>\n                        </div>\n\n                    </Grid>\n\n                </div>\n            </main>\n\n        </div>\n\n    );\n\n}\n","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useParams} from \"react-router\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useReactToPrint} from 'react-to-print';\nimport {api, cc} from '../Constantes/index';\nimport useWindowDimensions from '../Size/index';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport LockIcon from '@mui/icons-material/Lock';\nimport ReactDOMServer from \"react-dom/server\";\nimport Menu from '../Menu/index';\n\nlet date = [];\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n\n    },\n}))(TableCell);\n\n\nexport default function Dashboard1(props) {\n    const codigo = cc.generate().split('-').slice(1).join('-');\n    let {campId} = useParams();\n    var betsAll = \"\";\n    const [message, setMessage] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [bilhetes, setBilhetes] = useState([]);\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [clientes, setClientes] = useState([]);\n    const [apostasPreJogo, setApostasPreJogo] = useState(true);\n    const [campeonato, setCampeonato] = useState([]);\n    const [entrada, setEntrada] = useState(0);\n    const {height, width} = useWindowDimensions();\n    const [inputValue, setInputValue] = React.useState('');\n    const [value, setValue] = React.useState(\"\");\n    const html = ReactDOMServer.renderToStaticMarkup(<LockIcon style={{fontSize: 14}}/>);\n    const load = ReactDOMServer.renderToStaticMarkup(<LinearProgress />);\n\n\n    const [titulo, setTitulo] = useState([]);\n    const [cotacoes, setCotacoes] = useState({});\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n        },\n        button: {\n            width: 10,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n\n    const handleClickOpenURL = () => {\n        setOpenURL(true);\n    };\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleClickOpenLoading = () => {\n        setOpenLoading(true);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    setTimeout(() => {\n        cotacaoHandler();\n    }, 1000);\n\n    let games = { ...localStorage };\n\n    for(let g in games) {\n        localStorage.setItem(g, games[g]);\n    }\n\n\n    function InitOdds() {\n\n        if (localStorage.getItem(\"betsAll2\") === null) {\n            localStorage.setItem(\"betsAll2\", \"\");\n            localStorage.setItem('displayBets2', 'none');\n        } else {\n            let bets = localStorage.getItem(\"betsAll2\");\n\n            for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n                try {\n\n                    if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                        document.getElementById(bets.split('=')[n].split('-')[1] +\n                            bets.split('=')[n].split('-')[0]).style.background = \"red\";\n\n                    }\n                } catch (e) {\n\n                }\n            }\n        }\n    }\n\n    function clearOdds() {\n        let bets = localStorage.getItem(\"betsAll2\");\n\n        for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n\n            try {\n\n\n                if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                    bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                    document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).style.background = \"\";\n\n\n                }\n\n            } catch (e) {\n\n            }\n        }\n    }\n\n\n    setInterval(() => {\n        if (localStorage.getItem('delete2') !== null) {\n            let team = localStorage.getItem('delete2');\n            document.getElementById(\"resetField1\").value = '';\n            document.getElementById(\"retorno\").innerHTML = '0.00';\n            try {\n                document.getElementById(team.split('-')[1] + team.split('-')[0]).style.background = \"\";\n            } catch (e) {\n                localStorage.setItem(team.split('-')[0], \"\");\n                localStorage.setItem(team.split('-')[0] + 'x', \"\");\n                localStorage.removeItem(team.split('-')[0]);\n                localStorage.removeItem(team.split('-')[0] + 'x');\n                betsAll = localStorage.getItem(\"betsAll2\");\n                betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n                localStorage.setItem(\"betsAll2\", betsAll);\n                document.getElementById(\"resetField1\").value = '';\n                geraBilhete();\n            }\n            localStorage.setItem(team.split('-')[0], \"\");\n            localStorage.setItem(team.split('-')[0] + 'x', \"\");\n            localStorage.removeItem(team.split('-')[0]);\n            localStorage.removeItem(team.split('-')[0] + 'x');\n            betsAll = localStorage.getItem(\"betsAll2\");\n            betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n            localStorage.setItem(\"betsAll2\", betsAll);\n            geraBilhete();\n            document.getElementById(\"resetField1\").value = '';\n        }\n        localStorage.removeItem('delete2');\n        if (localStorage.getItem('click2') != null && localStorage.getItem('click2') != '') {\n            onClickHandler();\n            localStorage.removeItem('click2');\n        }\n        InitOdds();\n        //console.log(localStorage.getItem('delete'));\n    }, 200);\n\n\n    function noneBets() {\n        localStorage.setItem('displayBets2', 'none');\n        document.getElementById('valuesBets').style.display = 'none';\n        document.getElementById('value').style.display = 'none';\n        document.getElementById('clients').style.display = 'none';\n        document.getElementById('done').style.display = 'none';\n        document.getElementById('fieldClient').style.display = 'none';\n        document.getElementById('buttonClient').style.display = 'none';\n        document.getElementById('resetField1').value = '';\n    }\n\n    function blockBets() {\n        localStorage.setItem('displayBets2', 'block');\n        document.getElementById('value').style.display = 'block';\n        document.getElementById('clients').style.display = 'block';\n        document.getElementById('done').style.display = 'block';\n        document.getElementById('fieldClient').style.display = 'block';\n        document.getElementById('buttonClient').style.display = 'block';\n        document.getElementById('valuesBets').style.display = 'block';\n\n    }\n\n\n    function geraBilhete() {\n\n        if (localStorage.getItem('betsAll2') == \"\") {\n            noneBets();\n        }\n\n\n        try {\n            document.getElementById(\"bilhete\").innerHTML = '';\n            localStorage.getItem('betsAll2').split('=').slice(0, -1).map((b) => {\n\n                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                let data = Number.isInteger(\n                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[0];\n                let bets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[1];\n                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                let date = \"delete2\";\n\n                document.getElementById(\"bilhete\").innerHTML += '<div>\\n' +\n                    '\\t\\n' +\n                    '    <div style=\"width: calc(100% - 20px); margin: 10px; padding: 10px; background-color: rgb(248, 236, 194); color: black; box-sizing: border-box;\">\\n' +\n                    '    <div style=\"font-family:\\'Roboto Condensed\\',sans-serif !important;\">\\n' +\n                    '        <span >' + bets + '</span>\\n' +\n                    '        <span onclick=\"localStorage.setItem(\\'' + date + '\\', \\'' + b + '\\')\"\\n' +\n                    ' id-item=\"1\" style=\"float:right; margin-top:-5px; color: black; width: 20px; cursor: pointer\"><b>X</b></span>\\n' +\n\n                    '    </div>\\n' +\n                    '<hr style=\"width: 100%; border: 0; border-bottom: 1px dashed #292323; margin-bottom: 10px\">\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>Futebol - ' + data + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + campeonato + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + times + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>' + typeBets + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px;\">Cotação: </span>' + '<b style=\"float: right;\">' + value + '</b>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '</div>'\n\n                blockBets();\n\n\n            });\n\n            cotacaoHandler();\n\n        } catch (e) {\n            // setBilhetes(\"\");\n        }\n        if(sessionStorage.getItem('login') == null ||  sessionStorage.getItem('login') == \"\") {\n\n            document.getElementById('clients').style.display = 'none';\n            document.getElementById('fieldClient').style.display = 'none';\n            document.getElementById('buttonClient').style.display = 'none';\n            document.getElementById('resetField1').value = '';\n        }\n    }\n\n\n\n    function salvarBilhete() {\n\n\n        let d = \"\";\n        let prejogo = localStorage.getItem('betsAll2');\n        let dx = new Date();\n        let dateHour = dx.getDate() + '/' + (parseInt(dx.getMonth()) + 1) + '/' + dx.getFullYear() + ' ' + dx.getHours() + ':' + dx.getMinutes() + ':' + dx.getSeconds();\n\n        document.getElementById('header').innerHTML = '\\n' +\n            '                    <div >\\n' +\n            '\\n' +\n            '                        <center><h2 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\">SONHOBETS</h2></center>\\n' +\n            '\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <center><h4 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\" class=\"H3\">' + ((localStorage.getItem('betsAll2').split(\"=\").length - 1) > 1 ? 'Aposta Multipla' : 'Aposta Simples') + '</h4></center>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block; text-align: left;\">DATA:</span> <span id=\"conteudo_txtDataBilhete\" style=\"display: inline-block\"> ' + dateHour + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">COLABORADOR:</span> <span style=\"display: inline-block\">' + nomeBanca + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">CLIENTE:</span> <span style=\"display: inline-block\">' + client + '</span><br>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">APOSTA</span></div>\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">COTAÇÃO</span></div>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n';\n\n        prejogo.split('=').slice(0, -1).map((b) => {\n\n            let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n            let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n            let data = Number.isInteger(\n                parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n            ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n            let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n            let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n\n\n            document.getElementById('bilheteP').innerHTML +=\n                '<div id=\"conteudo_divBilheteImpressao\">\\n' +\n                '<div>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block; text-align: left;\">Futebol - ' + data + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block;  text-align: left;\">' + campeonato + '</span><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + times + '</span><br>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block;  text-align: left;\">' + typeBets.split('--')[0] + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">' + typeBets.split('--')[1] + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + value + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Status:</span></div>\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + \"Aberto\" + '</span></div>\\n' +\n                '\\n' +\n                '                                    <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                '\\n' +\n                '                                </div>\\n'\n\n        });\n\n        document.getElementById('footer').innerHTML = '                            \\n' +\n            '                                \\n' +\n            '                            \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Quant. Jogos:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + (localStorage.getItem('betsAll2').split(\"=\").length - 1) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Cotação:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span  style=\"display: inline-block\">' + parseFloat(document.getElementById('cotacao').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '\\t\\t\\t\\t\\t\\t\\t</div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Total Apostado:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span id=\"conteudo_txtTotalApostado\" style=\"display: inline-block\">R$ ' + parseFloat(entrada).toFixed(2) + '</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Poss. Retorno:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">R$ ' + parseFloat(document.getElementById('retorno').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\"><span style=\"display: inline-block\">BILHETE</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\">\\n' +\n            '                                <h2 style=\"font-weight:bold\" class=\"H3\">' + codigo + '</h2>                  \\n' +\n            '                            </div>\\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <span>Ao realizar apostas na SONHOBETS, você concorda com todos os termos e regras do site. Boa Sorte!</span>\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                    </div>\\n' +\n            '                </div>';\n\n        api.get('/api/getdate')\n            .then(res => {\n                d = (res.data.date);\n\n                let comissaoValor = 0;\n                let qtd = parseFloat(localStorage.getItem('betsAll2').split(\"=\").length - 1);\n\n                for (let valores of bilhetes) {\n\n                    if (qtd >= parseFloat(valores.split(':')[0])) {\n                        comissaoValor = parseFloat(valores.split(':')[1]) / 100;\n\n                    }\n                }\n\n                api.post('/api/addbilhete',\n                    {\n                        \"codigo\": codigo,\n                        \"bancaId\": bancaId,\n                        \"gerenteId\": gerenteId,\n                        \"nomeCliente\": client,\n                        \"nomeBanca\": nomeBanca,\n                        \"dataDaAposta\": d,\n                        \"valorDeEntrada\": parseFloat(entrada),\n                        \"valorDeSaida\": parseFloat(document.getElementById('retorno').innerHTML),\n                        \"cotacao\": parseFloat(document.getElementById('cotacao').innerHTML),\n                        \"tipoDeJogo\": \"Pre-Jogo\",\n                        \"quantidadeJogos\": qtd,\n                        \"tipoSimplesouMultiplo\": qtd > 1 ? \"M\" : \"S\",\n                        \"comissao\": (parseFloat(entrada) * comissaoValor).toFixed(2),\n                        \"status\": \"Aberto\"\n\n                    })\n                    .then(res => {\n                        let prejogo = localStorage.getItem('betsAll2');\n                        try {\n                            prejogo.split('=').slice(0, -1).map((b) => {\n                                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                                let data = Number.isInteger(\n                                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n                                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n\n                                api.post('/api/addjogo',\n                                    {\n                                        \"codigoBilhete\": codigo,\n                                        \"dataDoJogo\": data,\n                                        \"nomeDoCampeonato\": campeonato,\n                                        \"nomeDosTimes\": times,\n                                        \"tipoDeCotacao\": typeBets,\n                                        \"cotacao\": parseFloat(value),\n                                        \"status\": \"Aberto\",\n                                        // \"idEvento\": b.split('-')[0],\n                                    })\n                                    .then(res => {\n                                        try {\n                                            if (res.data) {\n                                                localStorage.removeItem(b.split('-')[0] + 'x');\n                                                localStorage.removeItem(b.split('-')[0]);\n                                                clearOdds();\n                                                localStorage.setItem('betsAll2', localStorage.getItem('betsAll2').replace(b + '=', ''));\n                                                geraBilhete();\n                                                document.getElementById(\"retorno\").innerHTML = '0.00';\n                                            }\n                                        } catch (e) {\n                                            console.log(e);\n                                        }\n\n                                    }).catch(error => {\n                                    console.log(error);\n                                });\n\n                            });\n                            setEntrada(0);\n                            setClient(\"\");\n                            addVeiryClient(\"\");\n\n\n                        } catch (e) {\n\n                        }\n\n                    }).catch(error => {\n                    console.log(error);\n                });\n\n            }).catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    function cotacaoHandler() {\n        try {\n            var resultCotaca = 1;\n            var id = localStorage.getItem('betsAll2').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            } else {\n                resultCotaca = 0;\n            }\n\n            let cotacao = sessionStorage.getItem('cotacaoAdmin');\n\n            document.getElementById('cotacao').innerHTML = parseFloat(resultCotaca > Number(cotacao) ?\n                Number(cotacao) : resultCotaca).toFixed(2);\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    // {(retorno*cotacaoValue).toFixed(2) > 10000.00 ? 10000.00 :\n    //     (retorno*cotacaoValue).toFixed(2)}\n\n    function valueBetsHandler(e) {\n        var value = e.target.value;\n\n        \n        let cotacao = Number(document.getElementById('cotacao').innerHTML);\n        if (1) {\n                setEntrada(value);\n\n                document.getElementById('retorno').innerHTML =\n                    ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                        ((cotacao * Number(value)).toFixed(2));\n\n                sessionStorage.setItem(\"retorno\", ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                    ((cotacao * Number(value)).toFixed(2)));\n\n\n        } else {\n            document.getElementById('retorno').innerHTML = '0.00';\n            setEntrada(0);\n            handleCloseURL();\n        }\n\n        sessionStorage.setItem('valorIn', value);\n\n\n    }\n\n    function addVeiryClient(e) {\n        setValue(e.target.value);\n\n    }\n\n    function addClient() {\n\n        if (value.length > 3) {\n            if (getClient() == false) {\n                api.post('/api/addcliente', {\n                    'nome': value,\n                    'banca': sessionStorage.getItem('login'),\n                    'gerenteId': sessionStorage.getItem('gerenteId'),\n                    'nomeBanca': sessionStorage.getItem('nomeBanca')\n                })\n                    .then(res => {\n                        try {\n                            let nomes = [];\n                            if (res.data) {\n                                if(res.data.clientes == false){\n                                    handleClickOpenURL();\n                                    setMessage(`Já possui um cliente com esse nome!`);\n                                } else {\n                                    handleClickOpenURL();\n                                    setMessage(`Cliente cadastrado com sucesso!`);\n                                    api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                                        .then(res => {\n                                            try {\n                                                if (res.data) {\n                                                    res.data.clientes.map((c) => {\n                                                        nomes.push(c.nome);\n                                                    });\n                                                }\n                                            } catch (e) {\n\n                                            }\n                                            setClientes((nomes));\n                                        }).catch(error => {\n                                        console.log(error);\n                                    });\n                                }\n                            }\n                        } catch (e) {\n\n                        }\n                        setValue(\"\");\n                    }).catch(error => {\n                    console.log(error);\n                });\n            } else {\n                setMessage(`Cliente já existe nessa banca!`);\n                handleClickOpenURL();\n            }\n        } else {\n            setMessage(`O nome deve conter mais de 3 letras!`);\n            handleClickOpenURL();\n        }\n    }\n\n\n    function getClient() {\n        let r = false;\n        if(sessionStorage.getItem('login') != null && sessionStorage.getItem('login') != \"\") {\n            clientes.map((f) => {\n                if (f == client) {\n                    r = true;\n                }\n            });\n        } else {\n            r = true;\n        }\n        return r;\n    }\n\n    function verifyClientHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setClient(auxClient);\n\n    }\n\n\n    function validIn(){\n\n        let valorMax = sessionStorage.getItem('valorDeSaida');                                                          let valorMin = sessionStorage.getItem('valorDeEntrada');                                                \n        if (parseFloat(entrada) >= valorMin && parseFloat(entrada) <= valorMax) {                                               betsDone();                             \n        } else if (parseFloat(entrada) < valorMin) {\n\n        document.getElementById('retorno').innerHTML = '0.00';\n                setMessage(\"O valor mínimo permitido<br/> por aposta é de R$ \" + parseFloat(valorMin).toFixed(2)\n);                                                                handleClickOpenURL();\n        } else {                                                    setMessage(\"O valor máximo permitido<br/> por aposta é de R$ \" + parseFloat(valorMax).toFixed(2));\n          handleClickOpenURL();                                 }                                                   }\n\n\n    function betsDone() {\n        let qtd = localStorage.getItem('betsAll2').split(\"=\").length-1;\n        let qtdJogos = sessionStorage.getItem(\"qtdJogos\");\n        if(qtd <= qtdJogos) {\n        handleClickOpenLoading();\n\n\n        setTimeout(function () {\n\n            let valid1 = false;\n            let valid2 = true;\n            let valid3 = false;\n            let oddValue = false;\n            let teams = [];\n            let cotacaoAux = 1;\n            let cotAux = parseFloat(document.getElementById('cotacao').innerHTML);\n            let betsAll = localStorage.getItem(\"betsAll2\").split(\"=\");\n            var id = localStorage.getItem('betsAll2').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    cotacaoAux *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            }\n            betsAll = betsAll.slice(0, betsAll.length - 1);\n            let i = 0;\n            betsAll.map((bets) => {\n\n                let auxBets = localStorage.getItem(bets.split('-')[0] + \"x\").split(',');\n                let id = auxBets.slice(-1)[0];\n                let opcao = auxBets[0].split(':')[0];\n                let key = auxBets[0].split(':')[1];\n\n\n                api.get('/api/getmaispre/' + id)\n                    .then(res => {\n\n                        try {\n\n\n                            i++;\n\n\n                            if (res.data) {\n                                res.data.mais.modalidades.map((m) => {\n                                    m.cotacoes.map((c) => {\n                                        if (c.subeventos != null) {\n                                            c.subeventos.map((e) => {\n                                                let aux = (m.titulo + \"--\" + ' (' + e.nome + ')')\n                                                if (m.titulo + \"--\" + ((m.titulo != 'Vencedor do Encontro') ?\n                                                        (e.titulo + ' (' + e.nome + ')') : e.nome) == auxBets[1] ||\n                                                    aux == auxBets[1]) {\n                                                    let cotacoes = JSON.parse(sessionStorage.getItem(\"cotacao\"));\n                                                    try{\n                                                        oddValue = true;\n                                                        valid2 = false;\n                                                        let cot =  (Number(e.cotacao / 100) +\n                                                            (Number(e.cotacao / 100) *\n                                                                (cotacoes[m.titulo][1] / 100))).toFixed(2);\n                                                        if (Number(auxBets[4]) == 15 &&\n                                                            Number(auxBets[4]) > cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        } else if (Number(auxBets[4]) != cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        }\n                                                    }catch (e) {\n\n                                                    }\n                                                }\n                                            })\n                                        }\n                                    })\n                                })\n\n\n                                if (betsAll.length == i) {\n\n\n                                    if (Number(document.getElementById('retorno').innerHTML) > 0) {\n                                        if (cotacaoAux > parseFloat(sessionStorage.getItem('cotacaoAdminMin'))) {\n                                            if (getClient() == false) {\n                                                setMessage(`Por favor adicione um cliente válido!`);\n                                                handleClickOpenURL();\n                                            } else if (valid2) {\n                                                setMessage(`Algumas apostas foram suspenas, aguarde um momento e confirme sua aposta!`);\n                                                handleClickOpenURL();\n                                            } else if (valid1) {\n\n                                                var resultCotaca = 1;\n                                                var id = localStorage.getItem('betsAll2').split('=');\n\n                                                if (id !== null && id[0] !== '') {\n                                                    for (let n in id.slice(0, id.length - 1)) {\n                                                        resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                                                    }\n                                                } else {\n                                                    resultCotaca = 0;\n                                                }\n                                                let r = parseFloat(document.getElementById('retorno').innerHTML);\n                                                if(resultCotaca != r && resultCotaca <= 10000){\n                                                    document.getElementById('retorno').innerHTML = ' ' +\n                                                        Number(resultCotaca * Number(document.getElementById('resetField1').value)).toFixed(2);\n                                                    setMessage(`A cotação escolhida alterou de: R$ ${cotacaoAux.toFixed(2)} <br/> para: R$ ${resultCotaca.toFixed(2)} . Clique novamente para confirmar a aposta!`);\n                                                } else {\n                                                    setMessage(`Algumas apostas foram alteradas, pode finalizar sua aposta!`);\n                                                }\n                                                handleClickOpenURL();\n\n\n                                            }\n                                            if(sessionStorage.getItem('login') == null || sessionStorage.getItem('login') == \"\") {\n                                                if (!valid1 && !valid2 && !valid3) {\n                                                    let qtd = localStorage.getItem('betsAll2').split(\"=\").length - 1;\n\n\n                                                    if (500 >= parseFloat(entrada)) {\n                                                        //salvarBilhete();\n                                                        localStorage.setItem(\"valorIn\", sessionStorage.getItem(\"valorIn\"));\n                                                        localStorage.setItem(\"retorno\", sessionStorage.getItem(\"retorno\"));\n                                                        let codigoPIn = Math.ceil(Math.random() * Math.pow(10,6));\n                                                        api.post('/api/addbilhetetemporario', {\n                                                            'codigoPin': codigoPIn,\n                                                            'bilhete': {...localStorage}\n                                                        })\n                                                            .then(res => {\n                                                                if(res.data){\n                                                                    noneBets();\n                                                                    clearOdds();\n                                                                    localStorage.clear();\n\n                                                                    document.getElementById(\"bilhete\").innerHTML =\n                                                                        \"<center><h1>\" + codigoPIn + \"</h1></center>\";\n                                                                }\n                                                                clearOdds();\n                                                            }).catch(error => {\n                                                            console.log(error)\n                                                        });\n\n                                                    } else {\n                                                        alert('Sem limite para apostar!');\n                                                    }\n\n                                                }\n                                            } else {\n                                                if (getClient() && !valid1 && !valid2 && !valid3) {\n                                                    let qtd = localStorage.getItem('betsAll2').split(\"=\").length - 1;\n                                                    let auxSaldo = qtd > 1 ? saldoGeral : saldoSimples;\n\n                                                    if (auxSaldo >= parseFloat(entrada)) {\n                                                        salvarBilhete();\n\n                                                        noneBets();\n                                                        clearOdds();\n                                                        geraBilhete();\n                                                        var top = window.screen.height - 300;\n                                                        top = top > 0 ? top/2 : 0;\n\n                                                        var left = window.screen.width - 400;\n                                                        left = left > 0 ? left/2 : 0;\n\n                                                        const WinPrint = window.open('', '_blank', 'width=800,height=900,scrollbars=0, top=' + top + ',left=' + left + '' );\n                                                        WinPrint.document.write('<button class=\"block2\" onclick=\"whatsapp()\" id=\"print1\"><b>WHATSAPP</b></button><br>' +\n                                                            '<button class=\"block1\" onclick=\"imprimir()\" id=\"print2\"><b>IMPRIMIR</b></button>' + document.getElementById(\"dialogBilhete\").innerHTML+'<style>' +\n                                                            'body {background-color: rgb(248, 236, 194); color: black;  font-size: 12px}' +\n                                                            'span {font-size: 12px}' +\n                                                            '.block1 {' +\n                                                            'display: block;' +\n                                                            'width: 100%;' +\n                                                            'border: none;' +\n                                                            'background-color: #3f51b5;' +\n                                                            'color: white;' +\n                                                            'padding: 14px 28px;' +\n                                                            'font-size: 26px;' +\n                                                            'cursor: pointer;' +\n                                                            'text-align: center;' +\n                                                            '}' +\n                                                            '.block2 {' +\n                                                            'display: block;' +\n                                                            'width: 100%;' +\n                                                            'border: none;' +\n                                                            'background-color: #04AA6D;' +\n                                                            'color: white;' +\n                                                            'padding: 14px 28px;' +\n                                                            'font-size: 26px;' +\n                                                            'cursor: pointer;' +\n                                                            'text-align: center;' +\n                                                            '}' +\n                                                            '</style>'+\n\n                                                            '<script>' +\n                                                            'function imprimir(){document.getElementById(\"print1\").style.display = \"none\";' +\n                                                            'document.getElementById(\"print2\").style.display = \"none\";' +\n                                                            'setTimeout(function () { window.print(); }, 500);window.onfocus = function () { ' +\n                                                            'setTimeout(function () { window.close(); }, 500); };' +\n                                                            '};' +\n                                                            'function whatsapp(){window.location.href=' +\n                                                            '\"whatsapp://send?text=Link+para+seu+bilhete%3a%0d%0a%0d%0' +\n                                                            'ahttps%3A%2F%2Fwww.sonhobets.com.br%2F%23%2FverificarBilhete%2F' + codigo + '\";}</script>');\n                                                    } else {\n                                                        alert('Sem limite para apostar!');\n                                                    }\n\n                                                }\n                                            }\n                                        } else {\n                                            setMessage('A cotação mínima é de R$ ' + parseFloat(sessionStorage.getItem('cotacaoAdminMin'))\n                                                .toFixed(2));\n                                            handleClickOpenURL();\n                                        }\n                                    } else {\n                                        setMessage('Por favor insira um valor de no mínimo R$ ' + sessionStorage.getItem('valorDeEntrada') + ',00');\n                                        handleClickOpenURL();\n                                    }\n                                    handleCloseLoading();\n                                }\n                            }\n\n\n                        } catch (e) {\n                            alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                            handleCloseLoading();\n                            console.log(e);\n                            valid1 = true;\n                            valid2 = true;\n                        }\n                    }).catch(error => {\n                    alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                    handleCloseLoading();\n                });\n\n\n            });\n\n\n        }, 0);\n        } else {\n            alert('Você selecionou ' + qtd + ' jogos, o máximo é ' + qtdJogos);\n        }\n\n    }\n\n\n    function onClickHandler() {\n\n        document.getElementById('resetField1').value = '';\n\n\n        if (1) {\n            document.getElementById('bilheteP').innerHTML = '';\n            const team = localStorage.getItem('click2');\n            document.getElementById(\"retorno\").innerHTML = '0.00';\n            try {\n                let betsGame = team.split(\"=\");\n\n\n                var date = new Date(Date.parse(betsGame[7].replace(\"Z\", \"+00:00\")));\n                var hourMinute =\n                    ((date.getHours() + \"\").length === 1\n                        ? \"0\" + date.getHours()\n                        : date.getHours()) +\n                    \":\" +\n                    ((date.getMinutes() + \"\").length === 1\n                        ? \"0\" + date.getMinutes()\n                        : date.getMinutes());\n\n                var monthDate =\n                    date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n                betsGame[7] = monthDate + \"  \" + hourMinute;\n\n                if (\n                    localStorage.getItem(betsGame.slice(-1)[0]) === betsGame[2] &&\n                    document\n                        .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                        .innerHTML.indexOf(\"/svg>\") === -1\n                ) {\n                    document.getElementById(\n                        betsGame[2] + betsGame.slice(-1)[0]\n                    ).style.background = \"\";\n                    localStorage.setItem(betsGame.slice(-1)[0], \"\");\n                    localStorage.setItem(betsGame.slice(-1)[0] + \"x\", \"\");\n                    localStorage.removeItem(betsGame.slice(-1)[0]);\n                    localStorage.removeItem(betsGame.slice(-1)[0] + \"x\");\n\n                    betsAll = localStorage.getItem(\"betsAll2\");\n                    betsAll = betsAll.replace(\n                        betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\",\n                        \"\"\n                    );\n                    localStorage.setItem(\"betsAll2\", betsAll);\n                    geraBilhete();\n                    cotacaoHandler();\n\n                } else if (\n                    document\n                        .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                        .innerHTML.indexOf(\"/svg>\") === -1\n                ) {\n\n                    document.getElementById(\n                        betsGame[2] + betsGame.slice(-1)[0]\n                    ).style.background = \"red\";\n                    if (localStorage.getItem(betsGame.slice(-1)[0])) {\n                        document.getElementById(\n                            localStorage.getItem(betsGame.slice(-1)[0]) + betsGame.slice(-1)[0]\n                        ).style.background = \"\";\n                    }\n                    localStorage.setItem(betsGame.slice(-1)[0] + \"x\", betsGame);\n                    betsAll = localStorage.getItem(\"betsAll2\");\n                    betsAll = betsAll.replace(\n                        betsGame.slice(-1)[0] +\n                        \"-\" +\n                        localStorage.getItem(betsGame.slice(-1)[0]) +\n                        \"=\",\n                        \"\"\n                    );\n                    localStorage.setItem(betsGame.slice(-1)[0], betsGame[2]);\n                    betsAll = betsAll + betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\";\n                    localStorage.setItem(\"betsAll2\", betsAll);\n                    geraBilhete();\n                    cotacaoHandler();\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    };\n\n    function getJogos(){\n        try {\n            let camp = [];\n            let camps = JSON.parse(sessionStorage.getItem(\"jogos\")).prejogo.campeonatos;\n            let cotacao = JSON.parse(sessionStorage.getItem(\"cotacao\")) == null ? '' :  JSON.parse(sessionStorage.getItem(\"cotacao\"));\n            document.getElementById('preJogos').innerHTML = '';\n           \n                camps.momentos.map((e) => {\n                    e.eventos.map((live) => {\n                        document.getElementById(\"load\").innerHTML = '';\n\n                        let idCasa = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ?\n                            (live.subeventos.length >= 3 ?\n                                ('VencedordoEncontro' +\n                                    live.subeventos[0].aposta +\n                                    live.subeventos[0].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                        let idEmpate = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ?\n                            (live.subeventos.length >= 3 ?\n                                ('VencedordoEncontro' +\n                                    live.subeventos[1].aposta +\n                                    live.subeventos[1].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                        let idFora = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ?\n                            (live.subeventos.length >= 3 ?\n                                ('VencedordoEncontro' +\n                                    live.subeventos[2].aposta +\n                                    live.subeventos[2].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                    let valorCasa = (parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                        && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html)\n\n                                    let valorEmpate = (parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                        && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html)\n\n                                    let valorFora = (parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                        && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                            : html) : html)\n\n                        let xcasa = Number.isInteger(parseInt(valorCasa)) == true ? parseFloat(valorCasa).toFixed(2) :\n                            (live.subeventos[0].cotacao / 100).toFixed(2);\n\n                        let casa = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                live.subeventos[0].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                            + live.subeventos[0].aposta + \"=\" +\n                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[0].aposta + live.subeventos[0].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                'VencedordoEncontro' + live.subeventos[0].aposta : '') + \"=\" +\n                            (live.subeventos.length >= 3 ? xcasa >\n                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xcasa : 0)\n                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                            + (camps.pais + ': ' + camps.nome) + \"=\" + new Date(live.data) + \"=\" +\n                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                        let xempate = Number.isInteger(parseInt(valorEmpate)) == true ? parseFloat(valorEmpate).toFixed(2) :\n                            (live.subeventos[1].cotacao / 100).toFixed(2);\n\n                        let empate = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                live.subeventos[1].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                            + live.subeventos[1].aposta + \"=\" +\n                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[1].aposta + live.subeventos[1].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                'VencedordoEncontro' + live.subeventos[1].aposta : '') + \"=\" +\n                            (live.subeventos.length >= 3 ? xempate >\n                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xempate : 0)\n                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                            + (camps.pais + ': ' + camps.nome) + \"=\" + new Date(live.data) + \"=\" +\n                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                        let xfora = Number.isInteger(parseInt(valorFora)) == true ? parseFloat(valorFora).toFixed(2) :\n                            (live.subeventos[2].cotacao / 100).toFixed(2);\n\n                        let fora = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                live.subeventos[2].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                            + live.subeventos[2].aposta + \"=\" +\n                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[2].aposta + live.subeventos[2].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                'VencedordoEncontro' + live.subeventos[2].aposta : '') + \"=\" +\n                            (live.subeventos.length >= 3 ? xfora >\n                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xfora : 0)\n                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                            + (camps.pais + ': ' + camps.nome) + \"=\" + new Date(live.data) + \"=\" +\n                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n\n\n                        let date = (new Date(live.data).getDate() < 10\n                                ? \"0\" + new Date(live.data).getDate()\n                                : new Date(live.data).getDate()) +\n                            \"/\" +\n                            (Number(new Date(live.data).getMonth()) + 1 < 10\n                                ? \"0\" +\n                                (Number(new Date(live.data).getMonth()) + 1)\n                                : Number(new Date(live.data).getMonth()) + 1) +\n                            \"/\" +\n                            new Date(live.data).getFullYear() +\n                            \" \" +\n                            (new Date(live.data).getHours() < 10\n                                ? \"0\" + new Date(live.data).getHours()\n                                : new Date(live.data).getHours()) +\n                            \":\" +\n                            (Number(new Date(live.data).getMinutes() + \"\") === 0\n                                ? \"00\"\n                                : Number(new Date(live.data).getMinutes() + \"\") >=\n                                10\n                                    ? new Date(live.data).getMinutes() + \"\"\n                                    : \"0\" + (new Date(live.data).getMinutes() + \"\"))\n                        if (width > 600) {\n                            document.getElementById('preJogos')\n                                .innerHTML += '<tr id=\"zebra\" >' +\n                                '<td class=\"times\">' + live.casa + ' X ' + live.fora +\n                                '<p>' + date + '</p>' +\n                                '</td>' +\n                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + casa + '\\')\">' +\n                                '<b class=\"button\" id=\"' + idCasa + '\">' + valorCasa + '</b></td>' +\n\n                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + empate + '\\')\">' +\n                                '<b class=\"button\" id=\"' + idEmpate + '\">' + valorEmpate + '</b></td>' +\n\n                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + fora + '\\')\">' +\n                                '<b class=\"button\" id=\"' + idFora + '\">' + valorFora + '</b></td>' +\n\n                                '<td id=\"ocultar\" ><a href=\"/#/maispre/' + live.id + '-' + live.data + '\"' +\n                                'class=\"buttonM\"><p style=\"font-size: 26px;\">' + \"+\" + '</p></a></td>' +\n                                '</tr>'\n                        } else {\n\n                            document.getElementById('preJogos')\n                                .innerHTML += '<fieldset style=\"border: 1px solid black\"><tr id=\"bets1\">' +\n                                '<td class=\"times\"><a style=\"text-decoration: none; color: black\" href=\"/#/maispre/' + live.id + '-' + live.data + '\"' +\n                                '>' + live.casa + '<br/>' + live.fora + '</a><br/>' +\n                                '<p>' + date.split(' ')[0] + '</p>' +\n                                '<p>' + date.split(' ')[1] + '</p>' +\n                                '</td>' +\n                                '<td id=\"bets3\">' +\n                                '<span id=\"' + idCasa + '\" class=\"button\" style=\"margin-left: 112px;\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + casa + '\\')\">' +\n                                '<b><p id=\"vcasa\">' + valorCasa + '</p></b></span>' +\n\n                                '<span id=\"' + idEmpate + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + empate + '\\')\">' +\n                                '<b><p id=\"vcasa\">' + valorEmpate + '</p></b></span>' +\n\n                                '<span id=\"' + idFora + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + fora + '\\')\">' +\n                                '<b><p id=\"vcasa\">' + valorFora + '</p></b></span>' +\n                                '</td>' +\n                                '</tr></fieldset>'\n                        }\n                    })\n                })\n\n\n                setTitulo([camps.pais, camps.nome]);\n\n\n            \n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async function getLoginAPI() {\n        document.getElementById('preJogos')\n                .innerHTML = '';\n        document.getElementById('load')\n                .innerHTML = load;\n\n\n        api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n            .then(res => {\n                try {\n                    if (res.data) {\n                        setSaldoSimples(res.data.bancas.saldoSimples);\n                        setSaldoGeral(res.data.bancas.saldoGeral);\n                        setNomeBanca(res.data.bancas.nome);\n                        setGerenteId(res.data.bancas.gerente);\n                        setBilhetes(res.data.bancas.comissaoPreJogo.split(';'));\n                        setBancaId(res.data.bancas.id);\n                        setApostasPreJogo(res.data.bancas.ativarApostasPreJogo);\n                        let ativaAposta = res.data.bancas.ativarApostasPreJogo;\n\n                        let c = {};\n                        api.get('/api/getcotacaoprejogo/' + res.data.bancas.gerente + '/' + res.data.bancas.nome).then(res => {\n\n                            try {\n\n                                res.data.cotacoes.map((o) => {\n                                    \n                                    c[o.tipoDeCotacao] = [o.status, o.porcentagem];\n                                })\n                                \n                            } catch (e) {\n                                c[res.data.cotacoes.tipoDeCotacao] = \n                                [res.data.cotacoes.status, res.data.cotacoes.porcentagem];\n                                \n                            }\n                            setCotacoes(c);\n                         sessionStorage.setItem(\"cotacao\", JSON.stringify(c));\n                         if (ativaAposta) {\n                            \n                            api.get('/api/getprejogo/'+campId).then(res => {\n                                sessionStorage.setItem(\"jogos\", JSON.stringify(res.data));\n                       \n                                getJogos();\n                                 \n                                \n                            }).catch(error => {\n                                console.log(error)\n                            });\n\n                        } else {\n                            document.getElementById('preJogos')\n                                .innerHTML = '<center>Apostas Pre-Jogo Desativadas. Fale com seu gerente!</center>';\n                        }\n                        }).catch(error => {\n                            console.log(error)\n                        });\n                        \n                    }\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n            console.log(error)\n        });\n\n    }\n\n    async function getLoginAPIoFF() {\n        document.getElementById('preJogos')\n                .innerHTML = '';\n        document.getElementById('load')\n                .innerHTML = load;\n   \n                try {\n                   \n        \n                            api.get('/api/getprejogo/'+campId).then(res => {\n                                sessionStorage.setItem(\"jogos\", JSON.stringify(res.data));\n                            \n                                getJogos();\n                                 \n                                \n                            }).catch(error => {\n                                console.log(error)\n                            });\n\n                    \n\n                } catch (e) {\n                    console.log(e);\n                }\n   \n\n    }\n\n\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        if(sessionStorage.getItem('login') == null || sessionStorage.getItem('login') == \"\"){\n\n            getLoginAPIoFF();\n        }\n\n\n        async function getClienteAPI() {\n            let nomes = [];\n            api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n\n                        if (res.data) {\n\n                            res.data.clientes.map((c) =>{\n                                nomes.push(c.nome);\n\n                            })\n                        }\n                    } catch (e) {\n\n                    }\n                    setClientes(nomes);\n\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n\n        //all();\n        if(sessionStorage.getItem('login') != null &&  sessionStorage.getItem('login') != \"\") {\n            getLoginAPI();\n            getClienteAPI();\n\n        }\n        geraBilhete();\n        setCampeonato([]);\n\n    }, []);\n\n    const fixedHeightPaper = clsx(classes.paper);\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={8}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={6} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n                                                            <div id='titulo'></div>\n                                                            <Typography variant={\"h5\"}>\n                                                                {titulo.length > 0 ? titulo[0] : ''}\n                                                            </Typography>\n\n                                                            <Typography variant=\"h6\" gutterBottom>\n                                                                {titulo.length > 0 ? titulo[1] : ''}\n                                                            </Typography>\n                                                            <Typography gutterBottom variant=\"subtitle1\">\n\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                        <TableContainer component={Paper}>\n\n                                            <Table stickyHeader aria-label=\"sticky table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <StyledTableCell align={\"center\"}\n                                                                         id='font'><b>JOGO</b><br/></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>CASA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>EMPATE</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>FORA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>MAIS</b></StyledTableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <div id=\"load\"></div>\n                                                <TableBody id='preJogos'>\n                                                    <LinearProgress/>\n                                                </TableBody>\n\n                                            </Table>\n\n                                        </TableContainer>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={9} lg={4} id='bl'>\n                            <div id='font'>\n                                <Paper className={fixedHeightPaper}>\n                                    <Typography variant=\"h6\" gutterBottom align=\"center\">\n                                        <b>PRÉ-JOGO</b>\n                                    </Typography>\n                                    <Divider/><br/>\n                                    <div id={\"bilhete\"}></div>\n                                    <Divider/>\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Typography align=\"center\" style={{\n                                        lineHeight: '120%',\n\n                                    }}\n                                                id={\"valuesBets\"}>\n                                        Cotação: R$ <b id={\"cotacao\"}></b><br/>\n                                        Possível Retorno:\n                                        R$ <b id={\"retorno\"}></b><br/>\n                                        Valor da Aposta:<br/><br/>\n                                    </Typography>\n                                    <center>\n                                        <div id={\"value\"}>\n                                            <TextField\n                                                fullWidth\n                                                id={\"resetField1\"}\n\n                                                label=\"Digite um Valor\"\n                                                type=\"text\"\n\n                                                onChange={valueBetsHandler}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                onInput={(e) => {\n                                                    e.target.value = e.target.value\n                                                }}\n                                                variant=\"filled\"\n                                            /></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <div id={\"clients\"}>\n                                        <Autocomplete\n                                            id=\"controllable-states-demo\"\n                                            value={client}\n                                            onChange={(event, newValue) => {\n                                                setClient(newValue);\n                                            }}\n                                            inputValue={inputValue}\n                                            onInputChange={(event, newInputValue) => {\n                                                setInputValue(newInputValue);\n                                            }}\n                                            options={clientes}\n                                            renderInput={(params) =>\n                                                <TextField\n                                                    {...params}\n\n                                                    label=\"Nome do Cliente\"\n                                                    variant=\"outlined\"/>}\n                                        /></div>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Button id={\"done\"}\n                                            onClick={validIn} variant=\"contained\" color=\"secondary\">\n                                        <b>FINALIZAR APOSTA</b>\n                                    </Button>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <center>\n                                        <div id={\"fieldClient\"}>\n                                            <TextField\n                                                id={\"resetField3\"}\n                                                label=\"Cadastrar Cliente\"\n                                                type=\"search\"\n                                                fullWidth\n                                                value={value}\n                                                onChange={addVeiryClient}\n                                                variant=\"outlined\"/></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <Button id={\"buttonClient\"}\n                                            variant=\"contained\"\n                                            onClick={addClient}\n                                            color=\"secondary\">\n                                        <b>CADASTRAR CLIENTE</b>\n                                    </Button>\n                                    <br style={{marginBottom: '10px'}}/>\n                                </Paper>\n                            </div>\n                        </Grid>\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <div>\n                    <ScrollUpButton/>\n                </div>\n                <div style={{display: 'none'}}>\n\n                    <Grid item xs={12} md={4} sm={12}>\n                        <div style={{\n                            width: 'calc(100% - 15%)',\n                            fontSize: 12,\n                            backgroundColor: 'rgb(248, 236, 194)',\n                            color: 'black',\n                            boxSizing: 'border-box'\n                        }} ref={componentRef} id=\"dialogBilhete\">\n                            <div id=\"header\"></div>\n                            <div id=\"bilheteP\"></div>\n                            <div id=\"footer\"></div>\n                        </div>\n\n                    </Grid>\n\n                </div>\n\n            </main>\n\n        </div>\n\n    );\n\n\n}\n","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useParams} from \"react-router\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useReactToPrint} from 'react-to-print';\nimport {api, cc} from '../Constantes/index';\nimport useWindowDimensions from '../Size/index';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport LockIcon from '@mui/icons-material/Lock';\nimport ReactDOMServer from \"react-dom/server\";\nimport Menu from '../Menu2/index';\n\nlet date = [];\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n\n    },\n}))(TableCell);\n\n\nexport default function Dashboard1(props) {\n    const codigo = cc.generate().split('-').slice(1).join('-');\n    let {campId} = useParams();\n    var betsAll = \"\";\n    const [message, setMessage] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [bilhetes, setBilhetes] = useState([]);\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [clientes, setClientes] = useState([]);\n    const [apostasPreJogo, setApostasPreJogo] = useState(true);\n    const [campeonato, setCampeonato] = useState([]);\n    const [entrada, setEntrada] = useState(0);\n    const {height, width} = useWindowDimensions();\n    const [inputValue, setInputValue] = React.useState('');\n    const [value, setValue] = React.useState(\"\");\n    const html = ReactDOMServer.renderToStaticMarkup(<LockIcon style={{fontSize: 14}}/>);\n    const load = ReactDOMServer.renderToStaticMarkup(<LinearProgress />);\n\n\n    const [titulo, setTitulo] = useState([]);\n    const [cotacoes, setCotacoes] = useState({});\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n        },\n        button: {\n            width: 10,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n\n    const handleClickOpenURL = () => {\n        setOpenURL(true);\n    };\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleClickOpenLoading = () => {\n        setOpenLoading(true);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    setTimeout(() => {\n        cotacaoHandler();\n    }, 1000);\n\n    let games = { ...localStorage };\n\n    for(let g in games) {\n        localStorage.setItem(g, games[g]);\n    }\n\n\n    function InitOdds() {\n\n        if (localStorage.getItem(\"betsAll2\") === null) {\n            localStorage.setItem(\"betsAll2\", \"\");\n            localStorage.setItem('displayBets2', 'none');\n        } else {\n            let bets = localStorage.getItem(\"betsAll2\");\n\n            for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n                try {\n\n                    if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                        document.getElementById(bets.split('=')[n].split('-')[1] +\n                            bets.split('=')[n].split('-')[0]).style.background = \"red\";\n\n                    }\n                } catch (e) {\n\n                }\n            }\n        }\n    }\n\n    function clearOdds() {\n        let bets = localStorage.getItem(\"betsAll2\");\n\n        for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n\n            try {\n\n\n                if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                    bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                    document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).style.background = \"\";\n\n\n                }\n\n            } catch (e) {\n\n            }\n        }\n    }\n\n\n    setInterval(() => {\n        if (localStorage.getItem('delete2') !== null) {\n            let team = localStorage.getItem('delete2');\n            document.getElementById(\"resetField1\").value = '';\n            document.getElementById(\"retorno\").innerHTML = '0.00';\n            try {\n                document.getElementById(team.split('-')[1] + team.split('-')[0]).style.background = \"\";\n            } catch (e) {\n                localStorage.setItem(team.split('-')[0], \"\");\n                localStorage.setItem(team.split('-')[0] + 'x', \"\");\n                localStorage.removeItem(team.split('-')[0]);\n                localStorage.removeItem(team.split('-')[0] + 'x');\n                betsAll = localStorage.getItem(\"betsAll2\");\n                betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n                localStorage.setItem(\"betsAll2\", betsAll);\n                document.getElementById(\"resetField1\").value = '';\n                geraBilhete();\n            }\n            localStorage.setItem(team.split('-')[0], \"\");\n            localStorage.setItem(team.split('-')[0] + 'x', \"\");\n            localStorage.removeItem(team.split('-')[0]);\n            localStorage.removeItem(team.split('-')[0] + 'x');\n            betsAll = localStorage.getItem(\"betsAll2\");\n            betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n            localStorage.setItem(\"betsAll2\", betsAll);\n            geraBilhete();\n            document.getElementById(\"resetField1\").value = '';\n        }\n        localStorage.removeItem('delete2');\n        if (localStorage.getItem('click2') != null && localStorage.getItem('click2') != '') {\n            onClickHandler();\n            localStorage.removeItem('click2');\n        }\n        InitOdds();\n        //console.log(localStorage.getItem('delete'));\n    }, 200);\n\n\n    function noneBets() {\n        localStorage.setItem('displayBets2', 'none');\n        document.getElementById('valuesBets').style.display = 'none';\n        document.getElementById('value').style.display = 'none';\n        document.getElementById('clients').style.display = 'none';\n        document.getElementById('done').style.display = 'none';\n        document.getElementById('fieldClient').style.display = 'none';\n        document.getElementById('buttonClient').style.display = 'none';\n        document.getElementById('resetField1').value = '';\n    }\n\n    function blockBets() {\n        localStorage.setItem('displayBets2', 'block');\n        document.getElementById('value').style.display = 'block';\n        document.getElementById('clients').style.display = 'block';\n        document.getElementById('done').style.display = 'block';\n        document.getElementById('fieldClient').style.display = 'block';\n        document.getElementById('buttonClient').style.display = 'block';\n        document.getElementById('valuesBets').style.display = 'block';\n\n    }\n\n\n    function geraBilhete() {\n\n        if (localStorage.getItem('betsAll2') == \"\") {\n            noneBets();\n        }\n\n\n        try {\n            document.getElementById(\"bilhete\").innerHTML = '';\n            localStorage.getItem('betsAll2').split('=').slice(0, -1).map((b) => {\n\n                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                let data = Number.isInteger(\n                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[0];\n                let bets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[1];\n                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                let date = \"delete2\";\n\n                document.getElementById(\"bilhete\").innerHTML += '<div>\\n' +\n                    '\\t\\n' +\n                    '    <div style=\"width: calc(100% - 20px); margin: 10px; padding: 10px; background-color: rgb(248, 236, 194); color: black; box-sizing: border-box;\">\\n' +\n                    '    <div style=\"font-family:\\'Roboto Condensed\\',sans-serif !important;\">\\n' +\n                    '        <span >' + bets + '</span>\\n' +\n                    '        <span onclick=\"localStorage.setItem(\\'' + date + '\\', \\'' + b + '\\')\"\\n' +\n                    ' id-item=\"1\" style=\"float:right; margin-top:-5px; color: black; width: 20px; cursor: pointer\"><b>X</b></span>\\n' +\n\n                    '    </div>\\n' +\n                    '<hr style=\"width: 100%; border: 0; border-bottom: 1px dashed #292323; margin-bottom: 10px\">\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>Futebol - ' + data + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + campeonato + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + times + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>' + typeBets + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px;\">Cotação: </span>' + '<b style=\"float: right;\">' + value + '</b>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '</div>'\n\n                blockBets();\n\n\n            });\n\n            cotacaoHandler();\n\n        } catch (e) {\n            // setBilhetes(\"\");\n        }\n        if(sessionStorage.getItem('login') == null ||  sessionStorage.getItem('login') == \"\") {\n\n            document.getElementById('clients').style.display = 'none';\n            document.getElementById('fieldClient').style.display = 'none';\n            document.getElementById('buttonClient').style.display = 'none';\n            document.getElementById('resetField1').value = '';\n        }\n    }\n\n\n\n    function salvarBilhete() {\n\n\n        let d = \"\";\n        let prejogo = localStorage.getItem('betsAll2');\n        let dx = new Date();\n        let dateHour = dx.getDate() + '/' + (parseInt(dx.getMonth()) + 1) + '/' + dx.getFullYear() + ' ' + dx.getHours() + ':' + dx.getMinutes() + ':' + dx.getSeconds();\n\n        document.getElementById('header').innerHTML = '\\n' +\n            '                    <div >\\n' +\n            '\\n' +\n            '                        <center><h2 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\">SONHOBETS</h2></center>\\n' +\n            '\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <center><h4 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\" class=\"H3\">' + ((localStorage.getItem('betsAll2').split(\"=\").length - 1) > 1 ? 'Aposta Multipla' : 'Aposta Simples') + '</h4></center>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block; text-align: left;\">DATA:</span> <span id=\"conteudo_txtDataBilhete\" style=\"display: inline-block\"> ' + dateHour + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">COLABORADOR:</span> <span style=\"display: inline-block\">' + nomeBanca + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">CLIENTE:</span> <span style=\"display: inline-block\">' + client + '</span><br>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">APOSTA</span></div>\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">COTAÇÃO</span></div>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n';\n\n        prejogo.split('=').slice(0, -1).map((b) => {\n\n            let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n            let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n            let data = Number.isInteger(\n                parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n            ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n            let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n            let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n\n\n            document.getElementById('bilheteP').innerHTML +=\n                '<div id=\"conteudo_divBilheteImpressao\">\\n' +\n                '<div>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block;  text-align: left;\">Futebol - ' + data + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + campeonato + '</span><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + times + '</span><br>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block; text-align: left;\">' + typeBets.split('--')[0] + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">' + typeBets.split('--')[1] + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + value + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Status:</span></div>\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + \"Aberto\" + '</span></div>\\n' +\n                '\\n' +\n                '                                    <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                '\\n' +\n                '                                </div>\\n'\n\n        });\n\n        document.getElementById('footer').innerHTML = '                            \\n' +\n            '                                \\n' +\n            '                            \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Quant. Jogos:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + (localStorage.getItem('betsAll2').split(\"=\").length - 1) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Cotação:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span  style=\"display: inline-block\">' + parseFloat(document.getElementById('cotacao').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '\\t\\t\\t\\t\\t\\t\\t</div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Total Apostado:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span id=\"conteudo_txtTotalApostado\" style=\"display: inline-block\">R$ ' + parseFloat(entrada).toFixed(2) + '</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Poss. Retorno:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">R$ ' + parseFloat(document.getElementById('retorno').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\"><span style=\"display: inline-block\">BILHETE</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\">\\n' +\n            '                                <h2 style=\"font-weight:bold\" class=\"H3\">' + codigo + '</h2>                  \\n' +\n            '                            </div>\\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <span>Ao realizar apostas na SONHOBETS, você concorda com todos os termos e regras do site. Boa Sorte!</span>\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                    </div>\\n' +\n            '                </div>';\n\n        api.get('/api/getdate')\n            .then(res => {\n                d = (res.data.date);\n\n                let comissaoValor = 0;\n                let qtd = parseFloat(localStorage.getItem('betsAll2').split(\"=\").length - 1);\n\n                for (let valores of bilhetes) {\n\n                    if (qtd >= parseFloat(valores.split(':')[0])) {\n                        comissaoValor = parseFloat(valores.split(':')[1]) / 100;\n\n                    }\n                }\n\n                api.post('/api/addbilhete',\n                    {\n                        \"codigo\": codigo,\n                        \"bancaId\": bancaId,\n                        \"gerenteId\": gerenteId,\n                        \"nomeCliente\": client,\n                        \"nomeBanca\": nomeBanca,\n                        \"dataDaAposta\": d,\n                        \"valorDeEntrada\": parseFloat(entrada),\n                        \"valorDeSaida\": parseFloat(document.getElementById('retorno').innerHTML),\n                        \"cotacao\": parseFloat(document.getElementById('cotacao').innerHTML),\n                        \"tipoDeJogo\": \"Pre-Jogo\",\n                        \"quantidadeJogos\": qtd,\n                        \"tipoSimplesouMultiplo\": qtd > 1 ? \"M\" : \"S\",\n                        \"comissao\": (parseFloat(entrada) * comissaoValor).toFixed(2),\n                        \"status\": \"Aberto\"\n\n                    })\n                    .then(res => {\n                        let prejogo = localStorage.getItem('betsAll2');\n                        try {\n                            prejogo.split('=').slice(0, -1).map((b) => {\n                                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                                let data = Number.isInteger(\n                                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n                                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                                console.log(b.split('-')[0], 111111)\n                                api.post('/api/addjogo',\n                                    {\n                                        \"codigoBilhete\": codigo,\n                                        \"dataDoJogo\": data,\n                                        \"nomeDoCampeonato\": campeonato,\n                                        \"nomeDosTimes\": times,\n                                        \"tipoDeCotacao\": typeBets,\n                                        \"cotacao\": parseFloat(value),\n                                        \"status\": \"Aberto\",\n                                        // \"idEvento\": b.split('-')[0],\n                                    })\n                                    .then(res => {\n                                        try {\n                                            if (res.data) {\n                                                localStorage.removeItem(b.split('-')[0] + 'x');\n                                                localStorage.removeItem(b.split('-')[0]);\n                                                clearOdds();\n                                                localStorage.setItem('betsAll2', localStorage.getItem('betsAll2').replace(b + '=', ''));\n                                                geraBilhete();\n                                                document.getElementById(\"retorno\").innerHTML = '0.00';\n                                            }\n                                        } catch (e) {\n                                            console.log(e);\n                                        }\n\n                                    }).catch(error => {\n                                    console.log(error);\n                                });\n\n                            });\n                            setEntrada(0);\n                            setClient(\"\");\n                            addVeiryClient(\"\");\n\n\n                        } catch (e) {\n\n                        }\n\n                    }).catch(error => {\n                    console.log(error);\n                });\n\n            }).catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    function cotacaoHandler() {\n        try {\n            var resultCotaca = 1;\n            var id = localStorage.getItem('betsAll2').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            } else {\n                resultCotaca = 0;\n            }\n\n            let cotacao = sessionStorage.getItem('cotacaoAdmin');\n\n            document.getElementById('cotacao').innerHTML = parseFloat(resultCotaca > Number(cotacao) ?\n                Number(cotacao) : resultCotaca).toFixed(2);\n        } catch (e) {\n            console.log(e);\n        }\n\n    }\n\n    // {(retorno*cotacaoValue).toFixed(2) > 10000.00 ? 10000.00 :\n    //     (retorno*cotacaoValue).toFixed(2)}\n\n    function valueBetsHandler(e) {\n        var value = e.target.value;\n\n        \n        let cotacao = Number(document.getElementById('cotacao').innerHTML);\n        if (1) {\n                setEntrada(value);\n\n                document.getElementById('retorno').innerHTML =\n                    ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                        ((cotacao * Number(value)).toFixed(2));\n\n                sessionStorage.setItem(\"retorno\", ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                    ((cotacao * Number(value)).toFixed(2)));\n\n\n        } else {\n            document.getElementById('retorno').innerHTML = '0.00';\n            setEntrada(0);\n            handleCloseURL();\n        }\n\n        sessionStorage.setItem('valorIn', value);\n\n\n    }\n\n    function addVeiryClient(e) {\n        setValue(e.target.value);\n\n    }\n\n    function addClient() {\n\n        if (value.length > 3) {\n            if (getClient() == false) {\n                api.post('/api/addcliente', {\n                    'nome': value,\n                    'banca': sessionStorage.getItem('login'),\n                    'gerenteId': sessionStorage.getItem('gerenteId'),\n                    'nomeBanca': sessionStorage.getItem('nomeBanca')\n                })\n                    .then(res => {\n                        try {\n                            let nomes = [];\n                            if (res.data) {\n                                if(res.data.clientes == false){\n                                    handleClickOpenURL();\n                                    setMessage(`Já possui um cliente com esse nome!`);\n                                } else {\n                                    handleClickOpenURL();\n                                    setMessage(`Cliente cadastrado com sucesso!`);\n                                    api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                                        .then(res => {\n                                            try {\n                                                if (res.data) {\n                                                    res.data.clientes.map((c) => {\n                                                        nomes.push(c.nome);\n                                                    });\n                                                }\n                                            } catch (e) {\n\n                                            }\n                                            setClientes((nomes));\n                                        }).catch(error => {\n                                        console.log(error);\n                                    });\n                                }\n                            }\n                        } catch (e) {\n\n                        }\n                        setValue(\"\");\n                    }).catch(error => {\n                    console.log(error);\n                });\n            } else {\n                setMessage(`Cliente já existe nessa banca!`);\n                handleClickOpenURL();\n            }\n        } else {\n            setMessage(`O nome deve conter mais de 3 letras!`);\n            handleClickOpenURL();\n        }\n    }\n\n\n    function getClient() {\n        let r = false;\n        if(sessionStorage.getItem('login') != null && sessionStorage.getItem('login') != \"\") {\n            clientes.map((f) => {\n                if (f == client) {\n                    r = true;\n                }\n            });\n        } else {\n            r = true;\n        }\n        return r;\n    }\n\n    function verifyClientHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setClient(auxClient);\n\n    }\n\n\n    function validIn(){\n\n        let valorMax = sessionStorage.getItem('valorDeSaida');                                                          let valorMin = sessionStorage.getItem('valorDeEntrada');                                                \n        if (parseFloat(entrada) >= valorMin && parseFloat(entrada) <= valorMax) {                                               betsDone();                             \n        } else if (parseFloat(entrada) < valorMin) {\n\n        document.getElementById('retorno').innerHTML = '0.00';\n                setMessage(\"O valor mínimo permitido<br/> por aposta é de R$ \" + parseFloat(valorMin).toFixed(2)\n);                                                                handleClickOpenURL();\n        } else {                                                    setMessage(\"O valor máximo permitido<br/> por aposta é de R$ \" + parseFloat(valorMax).toFixed(2));\n          handleClickOpenURL();                                 }                                                   }\n\n\n    function betsDone() {\n        let qtd = localStorage.getItem('betsAll2').split(\"=\").length-1;\n        let qtdJogos = sessionStorage.getItem(\"qtdJogos\");\n        if(qtd <= qtdJogos) {\n        handleClickOpenLoading();\n\n\n        setTimeout(function () {\n\n            let valid1 = false;\n            let valid2 = true;\n            let valid3 = false;\n            let oddValue = false;\n            let teams = [];\n            let cotacaoAux = 1;\n            let cotAux = parseFloat(document.getElementById('cotacao').innerHTML);\n            let betsAll = localStorage.getItem(\"betsAll2\").split(\"=\");\n            var id = localStorage.getItem('betsAll2').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    cotacaoAux *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            }\n            betsAll = betsAll.slice(0, betsAll.length - 1);\n            let i = 0;\n            betsAll.map((bets) => {\n\n                let auxBets = localStorage.getItem(bets.split('-')[0] + \"x\").split(',');\n                let id = auxBets.slice(-1)[0];\n                let opcao = auxBets[0].split(':')[0];\n                let key = auxBets[0].split(':')[1];\n\n\n                api.get('/api/getmaispre/' + id)\n                    .then(res => {\n\n                        try {\n\n\n                            i++;\n\n\n                            if (res.data) {\n                                res.data.mais.modalidades.map((m) => {\n                                    m.cotacoes.map((c) => {\n                                        if (c.subeventos != null) {\n                                            c.subeventos.map((e) => {\n                                                let aux = (m.titulo + \"--\" + ' (' + e.nome + ')')\n                                                if (m.titulo + \"--\" + ((m.titulo != 'Vencedor do Encontro') ?\n                                                        (e.titulo + ' (' + e.nome + ')') : e.nome) == auxBets[1] ||\n                                                    aux == auxBets[1]) {\n                                                    let cotacoes = JSON.parse(sessionStorage.getItem(\"cotacoes\"));\n                                                    try{\n                                                        oddValue = true;\n                                                        valid2 = false;\n                                                        let cot =  (Number(e.cotacao / 100) +\n                                                            (Number(e.cotacao / 100) *\n                                                                (cotacoes[m.titulo][1] / 100))).toFixed(2);\n                                                        if (Number(auxBets[4]) == 15 &&\n                                                            Number(auxBets[4]) > cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        } else if (Number(auxBets[4]) != cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        }\n                                                    }catch (e) {\n\n                                                    }\n                                                }\n                                            })\n                                        }\n                                    })\n                                })\n\n\n                                if (betsAll.length == i) {\n\n\n                                    if (Number(document.getElementById('retorno').innerHTML) > 0) {\n                                        if (cotacaoAux > parseFloat(sessionStorage.getItem('cotacaoAdminMin'))) {\n                                            if (getClient() == false) {\n                                                setMessage(`Por favor adicione um cliente válido!`);\n                                                handleClickOpenURL();\n                                            } else if (valid2) {\n                                                setMessage(`Algumas apostas foram suspenas, aguarde um momento e confirme sua aposta!`);\n                                                handleClickOpenURL();\n                                            } else if (valid1) {\n\n                                                var resultCotaca = 1;\n                                                var id = localStorage.getItem('betsAll2').split('=');\n\n                                                if (id !== null && id[0] !== '') {\n                                                    for (let n in id.slice(0, id.length - 1)) {\n                                                        resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                                                    }\n                                                } else {\n                                                    resultCotaca = 0;\n                                                }\n                                                let r = parseFloat(document.getElementById('retorno').innerHTML);\n                                                if(resultCotaca != r && resultCotaca <= 10000){\n                                                    document.getElementById('retorno').innerHTML = ' ' +\n                                                        Number(resultCotaca * Number(document.getElementById('resetField1').value)).toFixed(2);\n                                                    setMessage(`A cotação escolhida alterou de: R$ ${cotacaoAux.toFixed(2)} <br/> para: R$ ${resultCotaca.toFixed(2)} . Clique novamente para confirmar a aposta!`);\n                                                } else {\n                                                    setMessage(`Algumas apostas foram alteradas, pode finalizar sua aposta!`);\n                                                }\n                                                handleClickOpenURL();\n\n\n                                            }\n                                            if(sessionStorage.getItem('login') == null || sessionStorage.getItem('login') == \"\") {\n                                                if (!valid1 && !valid2 && !valid3) {\n                                                    let qtd = localStorage.getItem('betsAll2').split(\"=\").length - 1;\n\n\n                                                    if (500 >= parseFloat(entrada)) {\n                                                        //salvarBilhete();\n                                                        localStorage.setItem(\"valorIn\", sessionStorage.getItem(\"valorIn\"));\n                                                        localStorage.setItem(\"retorno\", sessionStorage.getItem(\"retorno\"));\n                                                        let codigoPIn = Math.ceil(Math.random() * Math.pow(10,6));\n                                                        api.post('/api/addbilhetetemporario', {\n                                                            'codigoPin': codigoPIn,\n                                                            'bilhete': {...localStorage}\n                                                        })\n                                                            .then(res => {\n                                                                if(res.data){\n                                                                    noneBets();\n                                                                    clearOdds();\n                                                                    localStorage.clear();\n\n                                                                    document.getElementById(\"bilhete\").innerHTML =\n                                                                        \"<center><h1>\" + codigoPIn + \"</h1></center>\";\n                                                                }\n                                                                clearOdds();\n                                                            }).catch(error => {\n                                                            console.log(error)\n                                                        });\n\n                                                    } else {\n                                                        alert('Sem limite para apostar!');\n                                                    }\n\n                                                }\n                                            } else {\n                                                if (getClient() && !valid1 && !valid2 && !valid3) {\n                                                    let qtd = localStorage.getItem('betsAll2').split(\"=\").length - 1;\n                                                    let auxSaldo = qtd > 1 ? saldoGeral : saldoSimples;\n\n                                                    if (auxSaldo >= parseFloat(entrada)) {\n                                                        salvarBilhete();\n\n                                                        noneBets();\n                                                        clearOdds();\n                                                        geraBilhete();\n                                                        var top = window.screen.height - 300;\n                                                        top = top > 0 ? top/2 : 0;\n\n                                                        var left = window.screen.width - 400;\n                                                        left = left > 0 ? left/2 : 0;\n\n                                                        const WinPrint = window.open('', '_blank', 'width=800,height=900,scrollbars=0, top=' + top + ',left=' + left + '' );\n                                                        WinPrint.document.write('<button class=\"block2\" onclick=\"whatsapp()\" id=\"print1\"><b>WHATSAPP</b></button><br>' +\n                                                            '<button class=\"block1\" onclick=\"imprimir()\" id=\"print2\"><b>IMPRIMIR</b></button>' + document.getElementById(\"dialogBilhete\").innerHTML+'<style>' +\n                                                            'body {background-color: rgb(248, 236, 194); color: black;  font-size: 12px}' +\n                                                            'span {font-size: 12px}' +\n                                                            '.block1 {' +\n                                                            'display: block;' +\n                                                            'width: 100%;' +\n                                                            'border: none;' +\n                                                            'background-color: #3f51b5;' +\n                                                            'color: white;' +\n                                                            'padding: 14px 28px;' +\n                                                            'font-size: 26px;' +\n                                                            'cursor: pointer;' +\n                                                            'text-align: center;' +\n                                                            '}' +\n                                                            '.block2 {' +\n                                                            'display: block;' +\n                                                            'width: 100%;' +\n                                                            'border: none;' +\n                                                            'background-color: #04AA6D;' +\n                                                            'color: white;' +\n                                                            'padding: 14px 28px;' +\n                                                            'font-size: 26px;' +\n                                                            'cursor: pointer;' +\n                                                            'text-align: center;' +\n                                                            '}' +\n                                                            '</style>'+\n\n                                                            '<script>' +\n                                                            'function imprimir(){document.getElementById(\"print1\").style.display = \"none\";' +\n                                                            'document.getElementById(\"print2\").style.display = \"none\";' +\n                                                            'setTimeout(function () { window.print(); }, 500);window.onfocus = function () { ' +\n                                                            'setTimeout(function () { window.close(); }, 500); };' +\n                                                            '};' +\n                                                            'function whatsapp(){window.location.href=' +\n                                                            '\"whatsapp://send?text=Link+para+seu+bilhete%3a%0d%0a%0d%0' +\n                                                            'ahttps%3A%2F%2Fwww.sonhobets.com.br%2F%23%2FverificarBilhete%2F' + codigo + '\";}</script>');\n                                                    } else {\n                                                        alert('Sem limite para apostar!');\n                                                    }\n\n                                                }\n                                            }\n                                        } else {\n                                            setMessage('A cotação mínima é de R$ ' + parseFloat(sessionStorage.getItem('cotacaoAdminMin'))\n                                                .toFixed(2));\n                                            handleClickOpenURL();\n                                        }\n                                    } else {\n                                        setMessage('Por favor insira um valor de no mínimo R$ ' + sessionStorage.getItem('valorDeEntrada') + ',00');\n                                        handleClickOpenURL();\n                                    }\n                                    handleCloseLoading();\n                                }\n                            }\n\n\n                        } catch (e) {\n                            alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                            handleCloseLoading();\n                            console.log(e);\n                            valid1 = true;\n                            valid2 = true;\n                        }\n                    }).catch(error => {\n                    alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                    handleCloseLoading();\n                });\n\n\n            });\n\n\n        }, 0);\n        } else {\n            alert('Você selecionou ' + qtd + ' jogos, o máximo é ' + qtdJogos);\n        }\n\n    }\n\n\n    function onClickHandler() {\n        document.getElementById('resetField1').value = '';\n\n\n        if (1) {\n            document.getElementById('bilheteP').innerHTML = '';\n            const team = localStorage.getItem('click2');\n            document.getElementById(\"retorno\").innerHTML = '0.00';\n            try {\n                let betsGame = team.split(\"=\");\n\n\n                var date = new Date(Date.parse(betsGame[7].replace(\"Z\", \"+00:00\")));\n                var hourMinute =\n                    ((date.getHours() + \"\").length === 1\n                        ? \"0\" + date.getHours()\n                        : date.getHours()) +\n                    \":\" +\n                    ((date.getMinutes() + \"\").length === 1\n                        ? \"0\" + date.getMinutes()\n                        : date.getMinutes());\n\n                var monthDate =\n                    date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n                betsGame[7] = monthDate + \"  \" + hourMinute;\n\n                if (\n                    localStorage.getItem(betsGame.slice(-1)[0]) === betsGame[2] &&\n                    document\n                        .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                        .innerHTML.indexOf(\"/svg>\") === -1\n                ) {\n                    document.getElementById(\n                        betsGame[2] + betsGame.slice(-1)[0]\n                    ).style.background = \"\";\n                    localStorage.setItem(betsGame.slice(-1)[0], \"\");\n                    localStorage.setItem(betsGame.slice(-1)[0] + \"x\", \"\");\n                    localStorage.removeItem(betsGame.slice(-1)[0]);\n                    localStorage.removeItem(betsGame.slice(-1)[0] + \"x\");\n\n                    betsAll = localStorage.getItem(\"betsAll2\");\n                    betsAll = betsAll.replace(\n                        betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\",\n                        \"\"\n                    );\n                    localStorage.setItem(\"betsAll2\", betsAll);\n                    geraBilhete();\n                    cotacaoHandler();\n\n                } else if (\n                    document\n                        .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                        .innerHTML.indexOf(\"/svg>\") === -1\n                ) {\n\n                    document.getElementById(\n                        betsGame[2] + betsGame.slice(-1)[0]\n                    ).style.background = \"red\";\n                    if (localStorage.getItem(betsGame.slice(-1)[0])) {\n                        document.getElementById(\n                            localStorage.getItem(betsGame.slice(-1)[0]) + betsGame.slice(-1)[0]\n                        ).style.background = \"\";\n                    }\n                    localStorage.setItem(betsGame.slice(-1)[0] + \"x\", betsGame);\n                    betsAll = localStorage.getItem(\"betsAll2\");\n                    betsAll = betsAll.replace(\n                        betsGame.slice(-1)[0] +\n                        \"-\" +\n                        localStorage.getItem(betsGame.slice(-1)[0]) +\n                        \"=\",\n                        \"\"\n                    );\n                    localStorage.setItem(betsGame.slice(-1)[0], betsGame[2]);\n                    betsAll = betsAll + betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\";\n                    localStorage.setItem(\"betsAll2\", betsAll);\n                    geraBilhete();\n                    cotacaoHandler();\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n    };\n\n    function getJogos(){\n        try {\n            let camp = [];\n            let camps = JSON.parse(sessionStorage.getItem(\"jogos\")).prejogo.campeonatos;\n            let cotacao = JSON.parse(sessionStorage.getItem(\"cotacao\")) == null ? '' :  JSON.parse(sessionStorage.getItem(\"cotacao\"));\n            document.getElementById('preJogos').innerHTML = '';\n           \n                camps.momentos.map((e) => {\n                    e.eventos.map((live) => {\n                        document.getElementById(\"load\").innerHTML = '';\n\n                        let idCasa = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ?\n                            (live.subeventos.length >= 3 ?\n                                ('VencedordoEncontro' +\n                                    live.subeventos[0].aposta +\n                                    live.subeventos[0].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                        let idEmpate = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ?\n                            (live.subeventos.length >= 3 ?\n                                ('VencedordoEncontro' +\n                                    live.subeventos[1].aposta +\n                                    live.subeventos[1].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                        let idFora = (parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ?\n                            (live.subeventos.length >= 3 ?\n                                ('VencedordoEncontro' +\n                                    live.subeventos[2].aposta +\n                                    live.subeventos[2].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '');\n\n                                    let valorCasa = (parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                        && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[0].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html)\n\n                                    let valorEmpate = (parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                        && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[1].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html)\n\n                                    let valorFora = (parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (cotacao['Vencedor do Encontro'] != undefined && cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                        && (cotacao['Vencedor do Encontro'] != undefined ? cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                parseFloat(cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[2].cotacao / 100) * (cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                            : html) : html)\n\n                        let xcasa = Number.isInteger(parseInt(valorCasa)) == true ? parseFloat(valorCasa).toFixed(2) :\n                            (live.subeventos[0].cotacao / 100).toFixed(2);\n\n                        let casa = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                live.subeventos[0].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                            + live.subeventos[0].aposta + \"=\" +\n                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[0].aposta + live.subeventos[0].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                'VencedordoEncontro' + live.subeventos[0].aposta : '') + \"=\" +\n                            (live.subeventos.length >= 3 ? xcasa >\n                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xcasa : 0)\n                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                            + (camps.pais + ': ' + camps.nome) + \"=\" + new Date(live.data) + \"=\" +\n                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                        let xempate = Number.isInteger(parseInt(valorEmpate)) == true ? parseFloat(valorEmpate).toFixed(2) :\n                            (live.subeventos[1].cotacao / 100).toFixed(2);\n\n                        let empate = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                live.subeventos[1].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                            + live.subeventos[1].aposta + \"=\" +\n                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[1].aposta + live.subeventos[1].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                'VencedordoEncontro' + live.subeventos[1].aposta : '') + \"=\" +\n                            (live.subeventos.length >= 3 ? xempate >\n                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xempate : 0)\n                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                            + (camps.pais + ': ' + camps.nome) + \"=\" + new Date(live.data) + \"=\" +\n                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n                        let xfora = Number.isInteger(parseInt(valorFora)) == true ? parseFloat(valorFora).toFixed(2) :\n                            (live.subeventos[2].cotacao / 100).toFixed(2);\n\n                        let fora = ('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                live.subeventos[2].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                            + live.subeventos[2].aposta + \"=\" +\n                            (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[2].aposta + live.subeventos[2].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                            + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                'VencedordoEncontro' + live.subeventos[2].aposta : '') + \"=\" +\n                            (live.subeventos.length >= 3 ? xfora >\n                            parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : xfora : 0)\n                            + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                            + (camps.pais + ': ' + camps.nome) + \"=\" + new Date(live.data) + \"=\" +\n                            \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')\n\n\n\n                        let date = (new Date(live.data).getDate() < 10\n                                ? \"0\" + new Date(live.data).getDate()\n                                : new Date(live.data).getDate()) +\n                            \"/\" +\n                            (Number(new Date(live.data).getMonth()) + 1 < 10\n                                ? \"0\" +\n                                (Number(new Date(live.data).getMonth()) + 1)\n                                : Number(new Date(live.data).getMonth()) + 1) +\n                            \"/\" +\n                            new Date(live.data).getFullYear() +\n                            \" \" +\n                            (new Date(live.data).getHours() < 10\n                                ? \"0\" + new Date(live.data).getHours()\n                                : new Date(live.data).getHours()) +\n                            \":\" +\n                            (Number(new Date(live.data).getMinutes() + \"\") === 0\n                                ? \"00\"\n                                : Number(new Date(live.data).getMinutes() + \"\") >=\n                                10\n                                    ? new Date(live.data).getMinutes() + \"\"\n                                    : \"0\" + (new Date(live.data).getMinutes() + \"\"))\n                        if (width > 600) {\n                            document.getElementById('preJogos')\n                                .innerHTML += '<tr id=\"zebra\" >' +\n                                '<td class=\"times\">' + live.casa + ' X ' + live.fora +\n                                '<p>' + date + '</p>' +\n                                '</td>' +\n                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + casa + '\\')\">' +\n                                '<b class=\"button\" id=\"' + idCasa + '\">' + valorCasa + '</b></td>' +\n\n                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + empate + '\\')\">' +\n                                '<b class=\"button\" id=\"' + idEmpate + '\">' + valorEmpate + '</b></td>' +\n\n                                '<td id=\"ocultar\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + fora + '\\')\">' +\n                                '<b class=\"button\" id=\"' + idFora + '\">' + valorFora + '</b></td>' +\n\n                                '<td id=\"ocultar\" ><a href=\"/#/maispre/' + live.id + '-' + live.data + '\"' +\n                                'class=\"buttonM\"><p style=\"font-size: 26px;\">' + \"+\" + '</p></a></td>' +\n                                '</tr>'\n                        } else {\n\n                            document.getElementById('preJogos')\n                                .innerHTML += '<fieldset style=\"border: 1px solid black\"><tr id=\"bets1\">' +\n                                '<td class=\"times\"><a style=\"text-decoration: none; color: black\" href=\"/#/maispre/' + live.id + '-' + live.data + '\"' +\n                                '>' + live.casa + '<br/>' + live.fora + '</a><br/>' +\n                                '<p>' + date.split(' ')[0] + '</p>' +\n                                '<p>' + date.split(' ')[1] + '</p>' +\n                                '</td>' +\n                                '<td id=\"bets3\">' +\n                                '<span id=\"' + idCasa + '\" class=\"button\" style=\"margin-left: 112px;\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + casa + '\\')\">' +\n                                '<b><p id=\"vcasa\">' + valorCasa + '</p></b></span>' +\n\n                                '<span id=\"' + idEmpate + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + empate + '\\')\">' +\n                                '<b><p id=\"vcasa\">' + valorEmpate + '</p></b></span>' +\n\n                                '<span id=\"' + idFora + '\" class=\"button\" onclick=\"localStorage.setItem(\\'' + 'click2' + '\\', \\'' + fora + '\\')\">' +\n                                '<b><p id=\"vcasa\">' + valorFora + '</p></b></span>' +\n                                '</td>' +\n                                '</tr></fieldset>'\n                        }\n                    })\n                })\n\n\n                setTitulo([camps.pais, camps.nome]);\n\n\n            \n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    async function getLoginAPI() {\n        document.getElementById('preJogos')\n                .innerHTML = '';\n        document.getElementById('load')\n                .innerHTML = load;\n\n\n        api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n            .then(res => {\n                try {\n                    if (res.data) {\n                        setSaldoSimples(res.data.bancas.saldoSimples);\n                        setSaldoGeral(res.data.bancas.saldoGeral);\n                        setNomeBanca(res.data.bancas.nome);\n                        setGerenteId(res.data.bancas.gerente);\n                        setBilhetes(res.data.bancas.comissaoPreJogo.split(';'));\n                        setBancaId(res.data.bancas.id);\n                        setApostasPreJogo(res.data.bancas.ativarApostasPreJogo);\n                        let ativaAposta = res.data.bancas.ativarApostasPreJogo;\n\n                        let c = {};\n                        api.get('/api/getcotacaoprejogo/' + res.data.bancas.gerente + '/' + res.data.bancas.nome).then(res => {\n\n                            try {\n\n                                res.data.cotacoes.map((o) => {\n                                    \n                                    c[o.tipoDeCotacao] = [o.status, o.porcentagem];\n                                })\n                                \n                            } catch (e) {\n                                c[res.data.cotacoes.tipoDeCotacao] = \n                                [res.data.cotacoes.status, res.data.cotacoes.porcentagem];\n                                \n                            }\n                            setCotacoes(c);\n                         sessionStorage.setItem(\"cotacao\", JSON.stringify(c));\n                         if (ativaAposta) {\n                            \n                            api.get('/api/getprejogo/'+campId).then(res => {\n                                sessionStorage.setItem(\"jogos\", JSON.stringify(res.data));\n                       \n                                getJogos();\n                                 \n                                \n                            }).catch(error => {\n                                console.log(error)\n                            });\n\n                        } else {\n                            document.getElementById('preJogos')\n                                .innerHTML = '<center>Apostas Pre-Jogo Desativadas. Fale com seu gerente!</center>';\n                        }\n                        }).catch(error => {\n                            console.log(error)\n                        });\n                        \n                    }\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n            console.log(error)\n        });\n\n    }\n\n    async function getLoginAPIoFF() {\n        document.getElementById('preJogos')\n                .innerHTML = '';\n        document.getElementById('load')\n                .innerHTML = load;\n   \n                try {\n                   \n        \n                            api.get('/api/getprejogo/'+campId).then(res => {\n                                sessionStorage.setItem(\"jogos\", JSON.stringify(res.data));\n                                getJogos();\n                                 \n                                \n                            }).catch(error => {\n                                console.log(error)\n                            });\n\n                    \n\n                } catch (e) {\n                    console.log(e);\n                }\n   \n\n    }\n\n\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        if(sessionStorage.getItem('login') == null || sessionStorage.getItem('login') == \"\"){\n\n            getLoginAPIoFF();\n        }\n\n\n        async function getClienteAPI() {\n            let nomes = [];\n            api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n\n                        if (res.data) {\n\n                            res.data.clientes.map((c) =>{\n                                nomes.push(c.nome);\n\n                            })\n                        }\n                    } catch (e) {\n\n                    }\n                    setClientes(nomes);\n\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n\n        //all();\n        if(sessionStorage.getItem('login') != null &&  sessionStorage.getItem('login') != \"\") {\n            getLoginAPI();\n            getClienteAPI();\n\n        }\n        geraBilhete();\n        setCampeonato([]);\n\n    }, []);\n\n    const fixedHeightPaper = clsx(classes.paper);\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={8}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={6} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n                                                            <div id='titulo'></div>\n                                                            <Typography variant={\"h5\"}>\n                                                                {titulo.length > 0 ? titulo[0] : ''}\n                                                            </Typography>\n\n                                                            <Typography variant=\"h6\" gutterBottom>\n                                                                {titulo.length > 0 ? titulo[1] : ''}\n                                                            </Typography>\n                                                            <Typography gutterBottom variant=\"subtitle1\">\n\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                        <TableContainer component={Paper}>\n\n                                            <Table stickyHeader aria-label=\"sticky table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <StyledTableCell align={\"center\"}\n                                                                         id='font'><b>JOGO</b><br/></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>CASA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>EMPATE</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>FORA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                                                         id='ocultar'><b>MAIS</b></StyledTableCell>\n                                                    </TableRow>\n                                                </TableHead>\n                                                <div id=\"load\"></div>\n                                                <TableBody id='preJogos'>\n                                                    <LinearProgress/>\n                                                </TableBody>\n\n                                            </Table>\n\n                                        </TableContainer>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={9} lg={4} id='bl'>\n                            <div id='font'>\n                                <Paper className={fixedHeightPaper}>\n                                    <Typography variant=\"h6\" gutterBottom align=\"center\">\n                                        <b>PRÉ-JOGO</b>\n                                    </Typography>\n                                    <Divider/><br/>\n                                    <div id={\"bilhete\"}></div>\n                                    <Divider/>\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Typography align=\"center\" style={{\n                                        lineHeight: '120%',\n\n                                    }}\n                                                id={\"valuesBets\"}>\n                                        Cotação: R$ <b id={\"cotacao\"}></b><br/>\n                                        Possível Retorno:\n                                        R$ <b id={\"retorno\"}></b><br/>\n                                        Valor da Aposta:<br/><br/>\n                                    </Typography>\n                                    <center>\n                                        <div id={\"value\"}>\n                                            <TextField\n                                                fullWidth\n                                                id={\"resetField1\"}\n\n                                                label=\"Digite um Valor\"\n                                                type=\"text\"\n\n                                                onChange={valueBetsHandler}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                onInput={(e) => {\n                                                    e.target.value = e.target.value\n                                                }}\n                                                variant=\"filled\"\n                                            /></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <div id={\"clients\"}>\n                                        <Autocomplete\n                                            id=\"controllable-states-demo\"\n                                            value={client}\n                                            onChange={(event, newValue) => {\n                                                setClient(newValue);\n                                            }}\n                                            inputValue={inputValue}\n                                            onInputChange={(event, newInputValue) => {\n                                                setInputValue(newInputValue);\n                                            }}\n                                            options={clientes}\n                                            renderInput={(params) =>\n                                                <TextField\n                                                    {...params}\n\n                                                    label=\"Nome do Cliente\"\n                                                    variant=\"outlined\"/>}\n                                        /></div>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Button id={\"done\"}\n                                            onClick={validIn} variant=\"contained\" color=\"secondary\">\n                                        <b>FINALIZAR APOSTA</b>\n                                    </Button>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <center>\n                                        <div id={\"fieldClient\"}>\n                                            <TextField\n                                                id={\"resetField3\"}\n                                                label=\"Cadastrar Cliente\"\n                                                type=\"search\"\n                                                fullWidth\n                                                value={value}\n                                                onChange={addVeiryClient}\n                                                variant=\"outlined\"/></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <Button id={\"buttonClient\"}\n                                            variant=\"contained\"\n                                            onClick={addClient}\n                                            color=\"secondary\">\n                                        <b>CADASTRAR CLIENTE</b>\n                                    </Button>\n                                    <br style={{marginBottom: '10px'}}/>\n                                </Paper>\n                            </div>\n                        </Grid>\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <div>\n                    <ScrollUpButton/>\n                </div>\n                <div style={{display: 'none'}}>\n\n                    <Grid item xs={12} md={4} sm={12}>\n                        <div style={{\n                            width: 'calc(100% - 15%)',\n                            fontSize: 12,\n                            backgroundColor: 'rgb(248, 236, 194)',\n                            color: 'black',\n                            boxSizing: 'border-box'\n                        }} ref={componentRef} id=\"dialogBilhete\">\n                            <div id=\"header\"></div>\n                            <div id=\"bilheteP\"></div>\n                            <div id=\"footer\"></div>\n                        </div>\n\n                    </Grid>\n\n                </div>\n\n            </main>\n\n        </div>\n\n    );\n\n\n}\n","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {useParams} from \"react-router\";\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useReactToPrint} from 'react-to-print';\nimport {api, cc} from '../Constantes/index';\nimport Menu from '../Menu/index';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n        padding: 5,\n    },\n}))(TableCell);\n\n\nexport default function Dashboard(props) {\n    const codigo = cc.generate().split('-').slice(1).join('-');\n    let history = useHistory();\n    let {id} = useParams();\n    var betsAll = \"\";\n    const [message, setMessage] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [clientes, setClientes] = useState([]);\n    const [bilhetes, setBilhetes] = useState([]);\n    const [entrada, setEntrada] = useState([]);\n    const [nomeTime, setNomeTime] = useState('');\n    const [cotacao, setCotacao] = useState([]);\n    const [cotacaoJogos, setCotacaoJogos] = useState([]);\n    const [apostasAoVivo, setApostasAoVivo] = useState(true);\n    const [inputValue, setInputValue] = React.useState('');\n    const [value, setValue] = React.useState(\"\");\n\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n        },\n        button: {\n            width: 10,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n\n    const handleClickOpenURL = () => {\n        setOpenURL(true);\n    };\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleClickOpenLoading = () => {\n        setOpenLoading(true);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n\n    function InitOdds() {\n\n        if (localStorage.getItem(\"betsAll\") === null) {\n            localStorage.setItem(\"betsAll\", \"\");\n            localStorage.setItem('displayBets', 'none');\n        } else {\n            let bets = localStorage.getItem(\"betsAll\");\n            try{\n                if(localStorage.getItem(\"retorno\") != null && localStorage.getItem(\"retorno\") != \"\"){\n                    document.getElementById('retorno').innerHTML = localStorage.getItem(\"retorno\");\n                }\n            } catch (e) {\n\n            }\n            for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n                try {\n\n                    if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                        document.getElementById(bets.split('=')[n].split('-')[1] +\n                            bets.split('=')[n].split('-')[0]).style.background = \"red\";\n\n                    }\n                } catch (e) {\n\n                }\n            }\n        }\n    }\n\n    function clearOdds() {\n        let bets = localStorage.getItem(\"betsAll\");\n\n        for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n\n            try {\n\n\n                if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                    bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                    document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).style.background = \"\";\n\n\n                }\n\n            } catch (e) {\n\n            }\n        }\n    }\n\n    let initInterval = setInterval(() => {\n        if (localStorage.getItem('delete') !== null) {\n            let team = localStorage.getItem('delete');\n            try {\n                document.getElementById(team.split('-')[1] + team.split('-')[0]).style.background = \"\";\n            } catch (e) {\n                localStorage.setItem(team.split('-')[0], \"\");\n                localStorage.setItem(team.split('-')[0] + 'x', \"\");\n                localStorage.removeItem(team.split('-')[0]);\n                localStorage.removeItem(team.split('-')[0] + 'x');\n                betsAll = localStorage.getItem(\"betsAll\");\n                betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n                localStorage.setItem(\"betsAll\", betsAll);\n                geraBilhete();\n            }\n            localStorage.setItem(team.split('-')[0], \"\");\n            localStorage.setItem(team.split('-')[0] + 'x', \"\");\n            localStorage.removeItem(team.split('-')[0]);\n            localStorage.removeItem(team.split('-')[0] + 'x');\n            betsAll = localStorage.getItem(\"betsAll\");\n            betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n            localStorage.setItem(\"betsAll\", betsAll);\n            geraBilhete();\n        }\n        localStorage.removeItem('delete');\n        InitOdds();\n\n        //console.log(localStorage.getItem('delete'));\n    }, 1000);\n\n    function noneBets() {\n        localStorage.setItem('displayBets', 'none');\n        document.getElementById('valuesBets').style.display = 'none';\n        document.getElementById('value').style.display = 'none';\n        document.getElementById('clients').style.display = 'none';\n        document.getElementById('done').style.display = 'none';\n        document.getElementById('fieldClient').style.display = 'none';\n        document.getElementById('buttonClient').style.display = 'none';\n        document.getElementById('resetField1').value = '';\n\n    }\n\n    function blockBets() {\n        localStorage.setItem('displayBets', 'block');\n        document.getElementById('value').style.display = 'block';\n        document.getElementById('clients').style.display = 'block';\n        document.getElementById('done').style.display = 'block';\n        document.getElementById('fieldClient').style.display = 'block';\n        document.getElementById('buttonClient').style.display = 'block';\n        document.getElementById('valuesBets').style.display = 'block';\n    }\n\n    function geraBilhete() {\n        if (localStorage.getItem('betsAll') == \"\") {\n            noneBets();\n        }\n\n        try {\n            document.getElementById(\"bilhete\").innerHTML = '';\n            localStorage.getItem('betsAll').split('=').slice(0, -1).map((b) => {\n                console.log(b + '---');\n                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                let data = Number.isInteger(\n                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[0];\n                let bets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[1];\n                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                let date = \"delete\";\n\n                document.getElementById(\"bilhete\").innerHTML += '<div>\\n' +\n                    '\\t\\n' +\n                    '    <div style=\"width: calc(100% - 20px); margin: 10px; padding: 10px; background-color: rgb(248, 236, 194); color: black; box-sizing: border-box;\">\\n' +\n                    '    <div style=\"font-family:\\'Roboto Condensed\\',sans-serif !important;\">\\n' +\n                    '        <span >' + bets + '</span>\\n' +\n                    '        <span onclick=\"localStorage.setItem(\\'' + date + '\\', \\'' + b + '\\')\"\\n' +\n                    ' id-item=\"1\" style=\"float:right; margin-top:-5px; color: black; width: 20px; cursor: pointer\"><b>X</b></span>\\n' +\n\n                    '    </div>\\n' +\n                    '<hr style=\"width: 100%; border: 0; border-bottom: 1px dashed #292323; margin-bottom: 10px\">\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>Futebol - ' + data + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + campeonato + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + times + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>' + typeBets + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px;\">Cotação: </span>' + '<b style=\"float: right;\">' + value + '</b>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '</div>'\n\n                blockBets();\n\n\n            });\n\n            cotacaoHandler();\n\n        } catch (e) {\n            // setBilhetes(\"\");\n        }\n    }\n\n\n    function salvarBilhete() {\n\n\n        let d = \"\";\n        let prejogo = localStorage.getItem('betsAll');\n        let dx = new Date();\n        let dateHour = dx.getDate() + '/' + (parseInt(dx.getMonth()) + 1) + '/' + dx.getFullYear() + ' ' + dx.getHours() + ':' + dx.getMinutes() + ':' + dx.getSeconds();\n\n        document.getElementById('header').innerHTML = '\\n' +\n            '                    <div >\\n' +\n            '\\n' +\n            '                        <center><h2 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\">SONHOBETS</h2></center>\\n' +\n            '\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <center><h4 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\" class=\"H3\">' + ((localStorage.getItem('betsAll').split(\"=\").length - 1) > 1 ? 'Aposta Multipla' : 'Aposta Simples') + '</h4></center>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block; text-align: left;\">DATA:</span> <span id=\"conteudo_txtDataBilhete\" style=\"display: inline-block\"> ' + dateHour + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">COLABORADOR:</span> <span style=\"display: inline-block\">' + nomeBanca + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">CLIENTE:</span> <span style=\"display: inline-block\">' + client + '</span><br>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">APOSTA</span></div>\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">COTAÇÃO</span></div>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n';\n\n        prejogo.split('=').slice(0, -1).map((b) => {\n            let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n            let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n            let data = Number.isInteger(\n                parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n            ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n            let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n            let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n\n            document.getElementById('bilheteP').innerHTML +=\n                '<div id=\"conteudo_divBilheteImpressao\">\\n' +\n                '<div>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block; text-align: left;\">Futebol - ' + data + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + campeonato + '</span><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + times + '</span><br>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block; text-align: left;\">' + typeBets.split('--')[0] + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">' + typeBets.split('--')[1] + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + value + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Status:</span></div>\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + \"Aberto\" + '</span></div>\\n' +\n                '\\n' +\n                '                                    <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                '\\n' +\n                '                                </div>\\n'\n\n        });\n\n        document.getElementById('footer').innerHTML = '                            \\n' +\n            '                                \\n' +\n            '                            \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Quant. Jogos:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + (localStorage.getItem('betsAll').split(\"=\").length - 1) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Cotação:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span  style=\"display: inline-block\">' + parseFloat(document.getElementById('cotacao').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '\\t\\t\\t\\t\\t\\t\\t</div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Total Apostado:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span id=\"conteudo_txtTotalApostado\" style=\"display: inline-block\">R$ ' + parseFloat(entrada).toFixed(2) + '</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Poss. Retorno:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">R$ ' + parseFloat(document.getElementById('retorno').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\"><span style=\"display: inline-block\">BILHETE</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\">\\n' +\n            '                                <h2 style=\"font-weight:bold\" class=\"H3\">' + codigo + '</h2>                  \\n' +\n            '                            </div>\\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <span>Ao realizar apostas na SONHOBETS, você concorda com todos os termos e regras do site. Boa Sorte!</span>\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                    </div>\\n' +\n            '                </div>';\n\n        api.get('/api/getdate')\n            .then(res => {\n                d = (res.data.date);\n\n                let comissaoValor = 0;\n                let qtd = parseFloat(localStorage.getItem('betsAll').split(\"=\").length - 1);\n\n                for (let valores of bilhetes) {\n\n                    if (qtd >= parseFloat(valores.split(':')[0])) {\n                        comissaoValor = parseFloat(valores.split(':')[1]) / 100;\n\n                    }\n                }\n\n\n                api.post('/api/addbilhete',\n                    {\n                        \"codigo\": codigo,\n                        \"bancaId\": bancaId,\n                        \"gerenteId\": gerenteId,\n                        \"nomeCliente\": client,\n                        \"nomeBanca\": nomeBanca,\n                        \"dataDaAposta\": d,\n                        \"valorDeEntrada\": parseFloat(entrada),\n                        \"valorDeSaida\": parseFloat(document.getElementById('retorno').innerHTML),\n                        \"cotacao\": parseFloat(document.getElementById('cotacao').innerHTML),\n                        \"tipoDeJogo\": \"Ao Vivo\",\n                        \"quantidadeJogos\": qtd,\n                        \"tipoSimplesouMultiplo\": qtd > 1 ? \"M\" : \"S\",\n                        \"comissao\": (parseFloat(entrada) * comissaoValor).toFixed(2),\n                        \"status\": \"Aberto\"\n\n                    })\n                    .then(res => {\n                        let prejogo = localStorage.getItem('betsAll');\n                        try {\n                            prejogo.split('=').slice(0, -1).map((b) => {\n                                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                                let data = Number.isInteger(\n                                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n                                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                                api.post('/api/addjogo',\n                                    {\n                                        \"codigoBilhete\": codigo,\n                                        \"dataDoJogo\": data,\n                                        \"nomeDoCampeonato\": campeonato,\n                                        \"nomeDosTimes\": times,\n                                        \"tipoDeCotacao\": typeBets,\n                                        \"cotacao\": parseFloat(value),\n                                        \"status\": \"Aberto\",\n                                        // \"idEvento\": b.split('-')[0],\n                                    })\n                                    .then(res => {\n                                        try {\n                                            if (res.data) {\n                                                localStorage.removeItem(b.split('-')[0] + 'x');\n                                                localStorage.removeItem(b.split('-')[0]);\n                                                clearOdds();\n                                                localStorage.setItem('betsAll', localStorage.getItem('betsAll').replace(b + '=', ''));\n                                                geraBilhete();\n                                                document.getElementById(\"retorno\").innerHTML = '0.00';\n                                            }\n                                        } catch (e) {\n\n                                        }\n\n                                    }).catch(error => {\n                                    console.log(error);\n                                });\n\n                            });\n                            setEntrada(0);\n                            localStorage.setItem(\"retorno\", \"\");\n                            setClient(\"\");\n                            addVeiryClient(\"\");\n\n                        } catch (e) {\n\n                        }\n\n                    }).catch(error => {\n                    console.log(error);\n                });\n            }).catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    function cotacaoHandler() {\n        try {\n            var resultCotaca = 1;\n            var id = localStorage.getItem('betsAll').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            } else {\n                resultCotaca = 0;\n            }\n\n            let cotacao = sessionStorage.getItem('cotacaoAdmin');\n            document.getElementById('cotacao').innerHTML = parseFloat(resultCotaca > Number(cotacao) ?\n                Number(cotacao) : resultCotaca).toFixed(2);\n        } catch (e) {\n\n        }\n\n    }\n\n    // {(retorno*cotacaoValue).toFixed(2) > 10000.00 ? 10000.00 :\n    //     (retorno*cotacaoValue).toFixed(2)}\n\n    function valueBetsHandler(e) {\n        var value = e.target.value;\n        let valorMax = sessionStorage.getItem('valorDeSaida');\n        let valorMin = sessionStorage.getItem('valorDeEntrada');\n        let cotacao = Number(document.getElementById('cotacao').innerHTML);\n        if (1) {\n\n            \n                setEntrada(value);\n\n                document.getElementById('retorno').innerHTML =\n                    ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                        ((cotacao * Number(value)).toFixed(2));\n\n                sessionStorage.setItem(\"retorno\", ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                    ((cotacao * Number(value)).toFixed(2)));\n\n\n        } else {\n            document.getElementById('retorno').innerHTML = '0.00';\n            setEntrada(0);\n            handleCloseURL();\n        }\n\n        sessionStorage.setItem('valorIn', value);\n\n    }\n\n    function addVeiryClient(e) {\n        setValue(e.target.value);\n\n    }\n\n    function addClient() {\n        if (value.length > 3) {\n            if (getClient() == false) {\n                api.post('/api/addcliente', {\n                    'nome': value,\n                    'banca': sessionStorage.getItem('login'),\n                    'gerenteId': sessionStorage.getItem('gerenteId'),\n                    'nomeBanca': sessionStorage.getItem('nomeBanca')\n                })\n                    .then(res => {\n                        try {\n                            let nomes = [];\n                            if (res.data) {\n                                if(res.data.clientes == false){\n                                    handleClickOpenURL();\n                                    setMessage(`Já possui um cliente com esse nome!`);\n                                } else {\n                                    handleClickOpenURL();\n                                    setMessage(`Cliente cadastrado com sucesso!`);\n                                    api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                                        .then(res => {\n                                            try {\n                                                if (res.data) {\n                                                    res.data.clientes.map((c) => {\n                                                        nomes.push(c.nome);\n                                                    });\n                                                }\n                                            } catch (e) {\n\n                                            }\n                                            setClientes((nomes));\n                                        }).catch(error => {\n                                        console.log(error);\n                                    });\n                                }\n                            }\n                        } catch (e) {\n\n                        }\n                        setValue(\"\");\n                    }).catch(error => {\n                    console.log(error);\n                });\n            } else {\n                setMessage(`Cliente já existe nessa banca!`);\n                handleClickOpenURL();\n            }\n        } else {\n            setMessage(`O nome deve conter mais de 3 letras!`);\n            handleClickOpenURL();\n        }\n    }\n\n\n    function getClient() {\n        let r = false;\n        clientes.map((f) => {\n            console.log(f);\n            if (f == client) {\n                r = true;\n            }\n        });\n        return r;\n    }\n\n    function verifyClientHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setClient(auxClient);\n\n    }\n\n\n    function validIn(){\n\n        let valorMax = sessionStorage.getItem('valorDeSaida');                                                          let valorMin = sessionStorage.getItem('valorDeEntrada');                                                \n        if (parseFloat(entrada) >= valorMin && parseFloat(entrada) <= valorMax) {                                               betsDone();                             \n        } else if (parseFloat(entrada) < valorMin) {\n\n         document.getElementById('retorno').innerHTML = '0.00';\n                setMessage(\"O valor mínimo permitido<br/> por aposta é de R$ \" + parseFloat(valorMin).toFixed(2)\n);                                                                handleClickOpenURL();\n        } else {                                                    setMessage(\"O valor máximo permitido<br/> por aposta é de R$ \" + parseFloat(valorMax).toFixed(2));\n          handleClickOpenURL();                                 }                                                   }\n\n\n    function betsDone() {\n        let qtd = localStorage.getItem('betsAll2').split(\"=\").length-1;\n        let qtdJogos = sessionStorage.getItem(\"qtdJogos\");\n        if(qtd <= qtdJogos) {\n        handleClickOpenLoading();\n\n\n        setTimeout(function () {\n\n            let valid1 = false;\n            let valid2 = true;\n            let valid3 = false;\n            let oddValue = false;\n            let teams = [];\n            let cotacaoAux = 1;\n            let cotAux = parseFloat(document.getElementById('cotacao').innerHTML);\n            let betsAll = localStorage.getItem(\"betsAll\").split(\"=\");\n            var id = localStorage.getItem('betsAll').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    cotacaoAux *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            }\n            betsAll = betsAll.slice(0, betsAll.length - 1);\n            let i = 0;\n            betsAll.map((bets) => {\n\n                let auxBets = localStorage.getItem(bets.split('-')[0] + \"x\").split(',');\n                let id = auxBets.slice(-1)[0];\n                let opcao = auxBets[0].split(':')[0];\n                let key = auxBets[0].split(':')[1];\n\n\n                api.get('/api/getmaison/' + id)\n                    .then(res => {\n\n                        let valores = new Set();\n                        let cotacoes = {};\n\n\n                        try {\n                            let getlive = res.data.mais\n                            if(parseInt(getlive.tempoDecorridoMin) > 75){\n                                getlive = {}\n                            }\n\n\n                            i++;\n\n\n                            if (res.data) {\n                                getlive.modalidades.map((m) => {\n                                    m.cotacoes.map((c) => {\n                                        if (c.subeventos != null) {\n                                            c.subeventos.map((e) => {\n                                                if (m.titulo + \"--\" + ((m.titulo != 'Vencedor do Encontro') ?\n                                                    (e.titulo + ' (' + e.nome + ')').replace(nomeTime[0], '') : e.nome).replace(nomeTime[0], '') == auxBets[1]) {\n\n\n                                                    try{\n                                                        oddValue = true;\n                                                        valid2 = false;\n                                                        let cot =  (Number(e.cotacao / 100) +\n                                                            (Number(e.cotacao / 100) *\n                                                                (cotacoes[m.titulo][1] / 100))).toFixed(2);\n                                                        if (Number(auxBets[4]) == 15 &&\n                                                            Number(auxBets[4]) > cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        } else if (Number(auxBets[4]) != cot) {\n                                                            valid1 = true;\n                                                            auxBets[4] = cot;\n                                                            localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                auxBets.join(','));\n                                                            geraBilhete();\n                                                        }\n                                                    }catch (e) {\n\n                                                    }\n                                                }\n                                            })\n                                        }\n                                    })\n                                })\n\n\n                                if (betsAll.length == i) {\n\n\n                                    if (Number(document.getElementById('retorno').innerHTML) > 0) {\n                                        if (cotacaoAux > parseFloat(sessionStorage.getItem('cotacaoAdminMin'))) {\n                                            if (getClient() == false) {\n                                                setMessage(`Por favor adicione um cliente válido!`);\n                                                handleClickOpenURL();\n                                            } else if (valid2) {\n                                                setMessage(`Algumas apostas foram suspenas, aguarde um momento e confirme sua aposta!`);\n                                                handleClickOpenURL();\n                                            } else if (valid1) {\n\n                                                var resultCotaca = 1;\n                                                var id = localStorage.getItem('betsAll').split('=');\n\n                                                if (id !== null && id[0] !== '') {\n                                                    for (let n in id.slice(0, id.length - 1)) {\n                                                        resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                                                    }\n                                                } else {\n                                                    resultCotaca = 0;\n                                                }\n                                                let r = parseFloat(document.getElementById('retorno').innerHTML);\n                                                if(resultCotaca != r && resultCotaca <= 10000){\n                                                    document.getElementById('retorno').innerHTML = ' ' +\n                                                        Number(resultCotaca * Number(document.getElementById('resetField1').value)).toFixed(2);\n                                                    setMessage(`A cotação escolhida alterou de: R$ ${cotacaoAux.toFixed(2)} <br/> para: R$ ${resultCotaca.toFixed(2)} . Clique novamente para confirmar a aposta!`);\n                                                } else {\n                                                    setMessage(`Algumas apostas foram alteradas, pode finalizar sua aposta!`);\n                                                }\n                                                handleClickOpenURL();\n\n\n                                            }\n                                            if (getClient() && !valid1 && !valid2 && !valid3) {\n                                                let qtd = localStorage.getItem('betsAll').split(\"=\").length - 1;\n                                                let auxSaldo = qtd > 1 ? saldoGeral : saldoSimples;\n\n                                                if (auxSaldo >= parseFloat(entrada)) {\n                                                    salvarBilhete();\n\n                                                    noneBets();\n                                                    clearOdds();\n                                                    geraBilhete();\n                                                    var top = window.screen.height - 300;\n                                                    top = top > 0 ? top/2 : 0;\n\n                                                    var left = window.screen.width - 400;\n                                                    left = left > 0 ? left/2 : 0;\n\n                                                    const WinPrint = window.open('', '_blank', 'width=800,height=900,scrollbars=0, top=' + top + ',left=' + left + '' );\n                                                    WinPrint.document.write('<button class=\"block2\" onclick=\"whatsapp()\" id=\"print1\"><b>WHATSAPP</b></button><br>' +\n                                                        '<button class=\"block1\" onclick=\"imprimir()\" id=\"print2\"><b>IMPRIMIR</b></button>' + document.getElementById(\"dialogBilhete\").innerHTML+'<style>' +\n                                                        'body {background-color: rgb(248, 236, 194); color: black;  font-size: 12px}' +\n                                                        'span {font-size: 12px}' +\n                                                        '.block1 {' +\n                                                        'display: block;' +\n                                                        'width: 100%;' +\n                                                        'border: none;' +\n                                                        'background-color: #3f51b5;' +\n                                                        'color: white;' +\n                                                        'padding: 14px 28px;' +\n                                                        'font-size: 26px;' +\n                                                        'cursor: pointer;' +\n                                                        'text-align: center;' +\n                                                        '}' +\n                                                        '.block2 {' +\n                                                        'display: block;' +\n                                                        'width: 100%;' +\n                                                        'border: none;' +\n                                                        'background-color: #04AA6D;' +\n                                                        'color: white;' +\n                                                        'padding: 14px 28px;' +\n                                                        'font-size: 26px;' +\n                                                        'cursor: pointer;' +\n                                                        'text-align: center;' +\n                                                        '}' +\n                                                        '</style>'+\n\n                                                        '<script>' +\n                                                        'function imprimir(){document.getElementById(\"print1\").style.display = \"none\";' +\n                                                        'document.getElementById(\"print2\").style.display = \"none\";' +\n                                                        'setTimeout(function () { window.print(); }, 500);window.onfocus = function () { ' +\n                                                        'setTimeout(function () { window.close(); }, 500); };' +\n                                                        '};' +\n                                                        'function whatsapp(){window.location.href=' +\n                                                        '\"whatsapp://send?text=Link+para+seu+bilhete%3a%0d%0a%0d%0' +\n                                                        'ahttps%3A%2F%2Fwww.sonhobets.com.br%2F%23%2FverificarBilhete%2F' + codigo + '\";}</script>');\n                                                } else {\n                                                    alert('Sem limite para apostar!');\n                                                }\n\n\n                                            }\n                                        } else {\n                                            setMessage('A cotação mínima é de R$ ' + parseFloat(sessionStorage.getItem('cotacaoAdminMin'))\n                                                .toFixed(2));\n                                            handleClickOpenURL();\n                                        }\n                                    } else {\n                                        setMessage('Por favor insira um valor de no mínimo R$ ' + sessionStorage.getItem('valorDeEntrada') + ',00');\n                                        handleClickOpenURL();\n                                    }\n                                    handleCloseLoading();\n                                }\n                            }\n\n\n                        } catch (e) {\n                            alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                            handleCloseLoading();\n                            console.log(e);\n                            valid1 = true;\n                            valid2 = true;\n                        }\n                    }).catch(error => {\n                    alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                    handleCloseLoading();\n                });\n\n\n            });\n\n\n        }, 0);\n        } else {\n            alert('Você selecionou ' + qtd + ' jogos, o máximo é ' + qtdJogos);\n        }\n    }\n\n\n    const onClickHandler = (e) => {\n        document.getElementById('resetField1').value = '';\n        if(sessionStorage.getItem('login') != null && sessionStorage.getItem('login') != \"\") {\n\n            if (apostasAoVivo == true) {\n                if (1) {\n                    sessionStorage.setItem('minutos', new Date().getMinutes());\n                    document.getElementById('bilheteP').innerHTML = '';\n                    const team = e.target.getAttribute(\"data-item\");\n                    document.getElementById(\"retorno\").innerHTML = '0.00';\n                    try {\n                        let betsGame = team.split(\"=\");\n                        if (betsGame[4] != 0) {\n                            console.log(betsGame);\n                            console.log(betsGame[2] + betsGame.slice(-1)[0]);\n\n                            console.log(betsGame);\n                            var date = new Date(Date.parse(betsGame[7].replace(\"Z\", \"+00:00\")));\n                            var hourMinute =\n                                ((date.getHours() + \"\").length === 1\n                                    ? \"0\" + date.getHours()\n                                    : date.getHours()) +\n                                \":\" +\n                                ((date.getMinutes() + \"\").length === 1\n                                    ? \"0\" + date.getMinutes()\n                                    : date.getMinutes());\n\n                            var monthDate =\n                                date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n                            betsGame[7] = monthDate + \"  \" + hourMinute;\n\n                            if (\n                                localStorage.getItem(betsGame.slice(-1)[0]) === betsGame[2] &&\n                                document\n                                    .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                                    .innerHTML.indexOf(\"/svg>\") === -1\n                            ) {\n                                document.getElementById(\n                                    betsGame[2] + betsGame.slice(-1)[0]\n                                ).style.background = \"\";\n                                localStorage.setItem(betsGame.slice(-1)[0], \"\");\n                                localStorage.setItem(betsGame.slice(-1)[0] + \"x\", \"\");\n                                localStorage.removeItem(betsGame.slice(-1)[0]);\n                                localStorage.removeItem(betsGame.slice(-1)[0] + \"x\");\n\n                                betsAll = localStorage.getItem(\"betsAll\");\n                                betsAll = betsAll.replace(\n                                    betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\",\n                                    \"\"\n                                );\n                                localStorage.setItem(\"betsAll\", betsAll);\n                                geraBilhete();\n                                cotacaoHandler();\n\n                            } else if (\n                                document\n                                    .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                                    .innerHTML.indexOf(\"/svg>\") === -1\n                            ) {\n\n                                document.getElementById(\n                                    betsGame[2] + betsGame.slice(-1)[0]\n                                ).style.background = \"red\";\n                                if (localStorage.getItem(betsGame.slice(-1)[0])) {\n                                    document.getElementById(\n                                        localStorage.getItem(betsGame.slice(-1)[0]) + betsGame.slice(-1)[0]\n                                    ).style.background = \"\";\n                                }\n                                localStorage.setItem(betsGame.slice(-1)[0] + \"x\", betsGame);\n                                betsAll = localStorage.getItem(\"betsAll\");\n                                betsAll = betsAll.replace(\n                                    betsGame.slice(-1)[0] +\n                                    \"-\" +\n                                    localStorage.getItem(betsGame.slice(-1)[0]) +\n                                    \"=\",\n                                    \"\"\n                                );\n                                localStorage.setItem(betsGame.slice(-1)[0], betsGame[2]);\n                                betsAll = betsAll + betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\";\n                                localStorage.setItem(\"betsAll\", betsAll);\n                                geraBilhete();\n                                cotacaoHandler();\n                            }\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }\n            }\n        }\n    };\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        let cancel = true;\n\n\n        async function getMaisAPI() {\n            if (Number(new Date().getMinutes() - Number(sessionStorage.getItem('minutos'))) >= 10) {\n                history.push('/banca');\n                sessionStorage.setItem('minutos', new Date().getMinutes());\n            }\n            api.get('/api/getmaison/' + id)\n                .then(res => {\n                    let l = [];\n                    let data = 0;\n\n                    // console.log(res.data);\n                    try {\n                        let mais = res.data.mais.modalidades.slice();\n                        let tempo = res.data.mais.tempoDecorridoMin\n                        if(parseInt(tempo) > 75){\n                            mais = {}\n                        }\n                        if(mais[2] != undefined && mais[2].titulo == 'Resultado Certo'){\n                            let l = [];\n                            mais[2].cotacoes.map((f) =>{\n\n                                f.subeventos.map((s) =>{\n\n                                    if(l.indexOf(s.nome) != -1){\n\n                                        s.nome = s.nome.split('-')[1]+'-'+s.nome.split('-')[0]\n                                    }\n                                    l.push(s.nome);\n\n                                })\n\n                            })\n                        }\n                        mais.map((m) => {\n                            l.push(m)\n                            if (m.dataEvento != undefined && data == 0) {\n                                data = m.dataEvento;\n                            }\n                        });\n\n                        setNomeTime([res.data.mais.nomeEvento,\n                            res.data.mais.idEvento, res.data.mais.pais,\n                            res.data.mais.campeonato, res.data.mais.tempoDecorridoMin,\n                            res.data.mais.placar, res.data.mais.periodo, data]);\n                        document.getElementById('mais').style.display = 'block';\n\n                        setCotacaoJogos(l);\n                    } catch (e) {\n                        document.getElementById('mais').style.display = 'none';\n                        console.log(e);\n                    }\n                }).catch(error => {\n                //console.log(error);\n            });\n\n        }\n\n\n        async function getLoginAPI() {\n\n            api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            let c = {};\n                            setSaldoSimples(res.data.bancas.saldoSimples);\n                            setSaldoGeral(res.data.bancas.saldoGeral);\n                            setNomeBanca(res.data.bancas.nome);\n                            setGerenteId(res.data.bancas.gerente);\n                            setBilhetes(res.data.bancas.comissaoPreJogo.split(';'));\n                            setBancaId(res.data.bancas.id);\n                            setApostasAoVivo(res.data.bancas.ativarApostasAoVivos);\n                            api.get('/api/getlive').then(res => {\n\n                                try {\n                                    res.data.cotacao.map((o) => {\n                                        c[o.tipoDeCotacao] = [o.status, o.porcentagem];\n                                    })\n                                    setCotacao(c);\n                                } catch (e) {\n                                    console.log(e);\n                                }\n                            }).catch(error => {\n                                console.log(error)\n                            });\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        async function getClienteAPI() {\n            let nomes = [];\n            api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n\n                        if (res.data) {\n\n                            res.data.clientes.map((c) =>{\n                                nomes.push(c.nome);\n\n                            })\n                        }\n                    } catch (e) {\n\n                    }\n                    setClientes(nomes);\n\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n\n        if (cancel) {\n            if(sessionStorage.getItem('login') != null && sessionStorage.getItem('login') != \"\") {\n                getLoginAPI();\n                getClienteAPI();\n            }\n            getMaisAPI();\n            geraBilhete();\n        }\n\n        setTimeout(() => {\n            getMaisAPI();\n        }, 1000);\n\n        let maisAovivo = setInterval(() => {\n            getMaisAPI();\n        }, 10000);\n\n\n        return () => {\n            // clean up\n            clearInterval(maisAovivo);\n            clearInterval(initInterval);\n            initInterval = null;\n            maisAovivo = null;\n            cancel = false;\n        };\n\n    }, []);\n\n\n    const fixedHeightPaper = clsx(classes.paper);\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={8}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={6} item id='mais'>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n                                                            <Typography variant=\"h4\" gutterBottom>\n                                                                {nomeTime[2]}\n                                                            </Typography>\n                                                            <Typography variant=\"h5\" gutterBottom>\n                                                                {nomeTime[0]}<br/>\n                                                                {nomeTime[5]}\n                                                            </Typography>\n                                                            <Typography gutterBottom variant=\"subtitle1\">\n                                                                {nomeTime[6]} - {nomeTime[4]}¨ min<br/>\n                                                                {nomeTime[3]}\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                        {cotacaoJogos.length > 0 ? cotacaoJogos.map((nome) => (\n\n\n                                            <TableContainer component={Paper}>\n\n\n                                                <Table>\n\n\n                                                    <TableHead>\n                                                        {cotacaoJogos.length != undefined && cotacaoJogos.length > 0 ?\n                                                            <TableRow>\n                                                                <StyledTableCell align={\"left\"}\n                                                                                 id='font'><b>{nome.titulo}</b></StyledTableCell>\n                                                                <StyledTableCell align=\"right\" id='font'\n                                                                                 style={{width: '10%'}}><b>COTAÇÃO</b></StyledTableCell>\n                                                            </TableRow> : ''}\n                                                    </TableHead>\n\n                                                    <TableBody>\n\n\n                                                        {nome.cotacoes.length != undefined && nome.cotacoes.length > 0 ? nome.cotacoes.map((bet) => (\n\n                                                            (bet.subeventos != null ? bet.subeventos.map((n) => (\n\n                                                                ('+3 +4 +5 +6 +7 -3 -4 -5 -6 -7'.indexOf(n.nome) == -1 ?\n                                                                    <tr>\n\n                                                                        <StyledTableCell id='font'>\n                                                                            <b >{((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') :\n                                                                                 n.nome.replace(nomeTime[0], ''))}</b>\n                                                                        </StyledTableCell>\n\n                                                                        <td align=\"right\" id='font'>\n                                                                           <span onClick={onClickHandler}\n\n                                                                                 variant=\"contained\" color={\"primary\"} class=\"buttonPlus\"\n                                                                                 id={(parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ?\n                                                                                     ((nome.titulo + ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], '')))\n                                                                                         .replace(/[^0-9a-z]/gi, '')+n.idOpcao+nomeTime[1]):'')}\n\n                                                                                 data-item={nome.titulo + ':' +   ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], '')) + '=' + nome.titulo + \"--\" +\n                                                                                     ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], '')) + \"=\" +\n                                                                                     ((nome.titulo+((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], ''))).replace(/[^0-9a-z]/gi, '')+n.idOpcao) +\n                                                                                     \"=\" + nomeTime[1] + \"-\" + (nome.titulo+((nome.titulo != 'Vencedor do Encontro')  ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], ''))).replace(/[^0-9a-z]/gi, '') + \"=\" +\n                                                                                     (\n                                                                                         (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                             (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                             n.cotacao > 0\n                                                                                             &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                                 (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                         ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                                     parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                         (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                                 : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) < parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                                                             (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                                 (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                                 n.cotacao > 0\n                                                                                                 &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                                     (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                             ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                                         parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                             (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                                     : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) : parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2)) + \"=\" + nomeTime[0].replace(/,/g, '') +\n                                                                                     \"=\" + nomeTime[3].replace(/ - /g, ': ') + \"=\" + new Date(parseInt(nomeTime[7])) + \"=\" + \"Aberto\" + \"=\" + nomeTime[1]}>\n\n                                                                        <b  data-item={nome.titulo + ':' +   ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome) + '=' + nome.titulo + \"--\" +\n                                                                            ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome) + \"=\" +\n                                                                            ((nome.titulo+((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome)).replace(/[^0-9a-z]/gi, '')+n.idOpcao) +\n                                                                            \"=\" + nomeTime[1] + \"-\" + (nome.titulo+((nome.titulo != 'Vencedor do Encontro')  ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome)).replace(/[^0-9a-z]/gi, '') + \"=\" +\n                                                                            (\n                                                                                (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                    (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                    n.cotacao > 0\n                                                                                    &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                        (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                            parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                        : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) < parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                                                    (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                        (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                        n.cotacao > 0\n                                                                                        &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                            (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                    ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                                parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                    (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                            : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) : parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2)) + \"=\" + nomeTime[0].replace(/,/g, '') +\n                                                                            \"=\" + nomeTime[3].replace(/ - /g, ': ') + \"=\" + new Date(parseInt(nomeTime[7])) + \"=\" + \"Aberto\" + \"=\" + nomeTime[1]}>\n\n                                                                            {(parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                n.cotacao > 0\n                                                                                &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                    (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                            ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                        parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                            (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                    : <LockIcon style={{fontSize: 15}}/>) : <LockIcon style={{fontSize: 15}}/>)}</b>\n                                                                    </span>\n                                                                        </td>\n\n                                                                    </tr> : '')\n                                                            )) : '')\n                                                        )) : <LinearProgress/>}\n\n\n                                                    </TableBody>\n\n                                                </Table>\n                                            </TableContainer>\n\n                                        )) : <LinearProgress/>}\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={9} lg={4} id='bl'>\n                            <div id='font'>\n                                <Paper className={fixedHeightPaper}>\n                                    <Typography variant=\"h6\" gutterBottom align=\"center\">\n                                        <b>AO VIVO</b>\n                                    </Typography>\n                                    <Divider/><br/>\n                                    <div id={\"bilhete\"}></div>\n                                    <Divider/>\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Typography align=\"center\" style={{\n                                        lineHeight: '120%',\n\n                                    }}\n                                                id={\"valuesBets\"}>\n                                        Cotação: R$ <b id={\"cotacao\"}></b><br/>\n                                        Possível Retorno:\n                                        R$ <b id={\"retorno\"}>0.00</b><br/>\n                                        Valor da Aposta:<br/><br/>\n                                    </Typography>\n                                    <center>\n                                        <div id={\"value\"}>\n                                            <TextField\n                                                fullWidth\n                                                id={\"resetField1\"}\n                                                label=\"Digite um Valor\"\n                                                type=\"text\"\n\n                                                onChange={valueBetsHandler}\n                                                InputLabelProps={{\n                                                    shrink: true,\n                                                }}\n                                                onInput={(e) => {\n                                                    e.target.value = e.target.value\n                                                }}\n                                                variant=\"filled\"\n                                            /></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <div id={\"clients\"}>\n                                        <Autocomplete\n                                            id=\"controllable-states-demo\"\n                                            value={client}\n                                            onChange={(event, newValue) => {\n                                                setClient(newValue);\n                                            }}\n                                            inputValue={inputValue}\n                                            onInputChange={(event, newInputValue) => {\n                                                setInputValue(newInputValue);\n                                            }}\n                                            options={clientes}\n                                            renderInput={(params) =>\n                                                <TextField\n                                                    {...params}\n\n                                                    label=\"Nome do Cliente\"\n                                                    variant=\"outlined\"/>}\n                                        /></div>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Button id={\"done\"}\n                                            onClick={validIn} variant=\"contained\" color=\"secondary\">\n                                        <b>FINALIZAR APOSTA</b>\n                                    </Button>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <center>\n                                        <div id={\"fieldClient\"}>\n                                            <TextField\n                                                id={\"resetField3\"}\n                                                value={value}\n                                                label=\"Cadastrar Cliente\"\n                                                type=\"search\"\n                                                fullWidth\n                                                onChange={addVeiryClient}\n                                                variant=\"outlined\"/></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <Button id={\"buttonClient\"}\n                                            variant=\"contained\"\n                                            onClick={addClient}\n                                            color=\"secondary\">\n                                        <b>CADASTRAR CLIENTE</b>\n                                    </Button>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                </Paper>\n                            </div>\n                        </Grid>\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <div>\n                    <ScrollUpButton/>\n                </div>\n                <div style={{display: 'none'}}>\n\n                    <Grid item xs={12} md={4} sm={12}>\n                        <div style={{\n                            width: 'calc(100% - 15%)',\n                            fontSize: 12,\n                            backgroundColor: 'rgb(248, 236, 194)',\n                            color: 'black',\n                            boxSizing: 'border-box'\n                        }} ref={componentRef} id=\"dialogBilhete\">\n                            <div id=\"header\"></div>\n                            <div id=\"bilheteP\"></div>\n                            <div id=\"footer\"></div>\n                        </div>\n\n                    </Grid>\n\n                </div>\n            </main>\n        </div>\n    );\n\n}\n","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useRef, useState} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport {useParams} from \"react-router\";\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {useReactToPrint} from 'react-to-print';\nimport {api, cc} from '../Constantes/index';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Menu from '../Menu/index';\nimport LockIcon from \"@mui/icons-material/Lock\";\n\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n        padding: 5,\n    },\n}))(TableCell);\n\n\nexport default function Dashboard(props) {\n    let history = useHistory();\n    let {id} = useParams();\n    let idCamp = id.split('-')[0];\n    let horario = id.split('-')[1];\n    const codigo = cc.generate().split('-').slice(1).join('-');\n    var betsAll = \"\";\n    const [bilhetes, setBilhetes] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [client, setClient] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [entrada, setEntrada] = useState(0);\n    const [clientes, setClientes] = useState([]);\n    const [nomeTime, setNomeTime] = useState('');\n    const [cotacao, setCotacao] = useState([]);\n    const [cotacaoJogos, setCotacaoJogos] = useState([]);\n    const [apostasPreJogo, setApostasPreJogo] = useState(true);\n    const [inputValue, setInputValue] = React.useState('');\n    const [value, setValue] = React.useState(\"\");\n\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n\n        },\n        button: {\n            width: 10,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n\n    const handleClickOpenURL = () => {\n        setOpenURL(true);\n    };\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleClickOpenLoading = () => {\n        setOpenLoading(true);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    setTimeout(() => {\n        cotacaoHandler();\n    }, 1000);\n\n    // var events = ['click', 'keypress'];\n    // events.forEach(function(event) {\n    //     window.addEventListener(event, setActive);\n    // });\n    // function setActive(){\n    //     history.push('/');\n    // }\n\n\n    function InitOdds() {\n\n        if (localStorage.getItem(\"betsAll2\") === null) {\n            localStorage.setItem(\"betsAll2\", \"\");\n            localStorage.setItem('displayBets2', 'none');\n        } else {\n            let bets = localStorage.getItem(\"betsAll2\");\n            try{\n                if(localStorage.getItem(\"retorno\") != null && localStorage.getItem(\"retorno\") != \"\"){\n                    document.getElementById('retorno').innerHTML = localStorage.getItem(\"retorno\");\n                }\n            } catch (e) {\n\n            }\n            for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n                try {\n\n                    if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                        document.getElementById(bets.split('=')[n].split('-')[1] +\n                            bets.split('=')[n].split('-')[0]).style.background = \"red\";\n\n                    }\n                } catch (e) {\n\n                }\n            }\n        }\n    }\n\n    function clearOdds() {\n        let bets = localStorage.getItem(\"betsAll2\");\n\n        for (var n in bets.split('=').slice(0, bets.split('=').length - 1)) {\n\n            try {\n\n\n                if (document.getElementById(bets.split('=')[n].split('-')[1] +\n                    bets.split('=')[n].split('-')[0]).innerHTML.indexOf('/svg>') === -1) {\n\n                    document.getElementById(bets.split('=')[n].split('-')[1] +\n                        bets.split('=')[n].split('-')[0]).style.background = \"\";\n\n\n                }\n\n            } catch (e) {\n\n            }\n        }\n    }\n\n    setInterval(() => {\n        if (localStorage.getItem('delete2') !== null) {\n            let team = localStorage.getItem('delete2');\n            try {\n                document.getElementById(team.split('-')[1] + team.split('-')[0]).style.background = \"\";\n            } catch (e) {\n                localStorage.setItem(team.split('-')[0], \"\");\n                localStorage.setItem(team.split('-')[0] + 'x', \"\");\n                localStorage.removeItem(team.split('-')[0]);\n                localStorage.removeItem(team.split('-')[0] + 'x');\n                betsAll = localStorage.getItem(\"betsAll2\");\n                betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n                localStorage.setItem(\"betsAll2\", betsAll);\n                geraBilhete();\n            }\n            localStorage.setItem(team.split('-')[0], \"\");\n            localStorage.setItem(team.split('-')[0] + 'x', \"\");\n            localStorage.removeItem(team.split('-')[0]);\n            localStorage.removeItem(team.split('-')[0] + 'x');\n            betsAll = localStorage.getItem(\"betsAll2\");\n            betsAll = betsAll.replace(team.split('-')[0] + \"-\" + team.split('-')[1] + \"=\", \"\");\n            localStorage.setItem(\"betsAll2\", betsAll);\n            geraBilhete();\n        }\n        localStorage.removeItem('delete2');\n        InitOdds();\n        //console.log(localStorage.getItem('delete'));\n    }, 1000);\n\n\n    function noneBets() {\n        localStorage.setItem('displayBets2', 'none');\n        document.getElementById('valuesBets').style.display = 'none';\n        document.getElementById('value').style.display = 'none';\n        document.getElementById('clients').style.display = 'none';\n        document.getElementById('done').style.display = 'none';\n        document.getElementById('fieldClient').style.display = 'none';\n        document.getElementById('buttonClient').style.display = 'none';\n        document.getElementById('resetField1').value = '';\n    }\n\n    function blockBets() {\n        localStorage.setItem('displayBets2', 'block');\n        document.getElementById('value').style.display = 'block';\n        document.getElementById('clients').style.display = 'block';\n        document.getElementById('done').style.display = 'block';\n        document.getElementById('fieldClient').style.display = 'block';\n        document.getElementById('buttonClient').style.display = 'block';\n        document.getElementById('valuesBets').style.display = 'block';\n    }\n\n\n    function geraBilhete() {\n        if (localStorage.getItem('betsAll2') == \"\") {\n            noneBets();\n        }\n\n        try {\n            document.getElementById(\"bilhete\").innerHTML = '';\n            document.getElementById(\"bilhete\").innerHTML = '';\n            if(sessionStorage.getItem(\"pin\") != \"\" && sessionStorage.getItem(\"pin\") != null) {\n                document.getElementById(\"resetField1\").value = sessionStorage.getItem(\"valorIn\");\n                setEntrada(sessionStorage.getItem(\"valorIn\"));\n                document.getElementById(\"retorno\").innerHTML = sessionStorage.getItem(\"retorno\");\n                sessionStorage.setItem(\"pin\", \"\");\n            }\n            localStorage.getItem('betsAll2').split('=').slice(0, -1).map((b) => {\n                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                let data = Number.isInteger(\n                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[0];\n                let bets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1].split('--')[1];\n                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                let date = \"delete2\";\n\n\n                document.getElementById(\"bilhete\").innerHTML += '<div>\\n' +\n                    '\\t\\n' +\n                    '    <div style=\"width: calc(100% - 20px); margin: 10px; padding: 10px; background-color: rgb(248, 236, 194); color: black; box-sizing: border-box;\">\\n' +\n                    '    <div style=\"font-family:\\'Roboto Condensed\\',sans-serif !important;\">\\n' +\n                    '        <span >' + bets + '</span>\\n' +\n                    '        <span onclick=\"localStorage.setItem(\\'' + date + '\\', \\'' + b + '\\')\"\\n' +\n                    ' id-item=\"1\" style=\"float:right; margin-top:-5px; color: black; width: 20px; cursor: pointer\"><b>X</b></span>\\n' +\n\n                    '    </div>\\n' +\n                    '<hr style=\"width: 100%; border: 0; border-bottom: 1px dashed #292323; margin-bottom: 10px\">\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>Futebol - ' + data + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + campeonato + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\">' + times + '</span>\\n' +\n                    '    <span style=\"margin-left: 5px; display: block;\"><b>' + typeBets + '</b></span>\\n' +\n                    '    <span style=\"margin-left: 5px;\">Cotação: </span>' + '<b style=\"float: right;\">' + value + '</b>\\n' +\n                    '</div>\\n' +\n                    '\\n' +\n                    '</div>'\n\n                blockBets();\n\n\n            });\n\n            cotacaoHandler();\n\n        } catch (e) {\n            // setBilhetes(\"\");\n        }\n        if(sessionStorage.getItem('login') == null ||  sessionStorage.getItem('login') == \"\") {\n\n            document.getElementById('clients').style.display = 'none';\n            document.getElementById('fieldClient').style.display = 'none';\n            document.getElementById('buttonClient').style.display = 'none';\n            document.getElementById('resetField1').value = '';\n        }\n    }\n\n\n    function salvarBilhete() {\n\n\n        let d = \"\";\n        let prejogo = localStorage.getItem('betsAll2');\n        let dx = new Date();\n        let dateHour = dx.getDate() + '/' + (parseInt(dx.getMonth()) + 1) + '/' + dx.getFullYear() + ' ' + dx.getHours() + ':' + dx.getMinutes() + ':' + dx.getSeconds();\n\n        document.getElementById('header').innerHTML = '\\n' +\n            '                    <div >\\n' +\n            '\\n' +\n            '                        <center><h2 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\">SONHOBETS</h2></center>\\n' +\n            '\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <center><h4 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\" class=\"H3\">' + ((localStorage.getItem('betsAll2').split(\"=\").length - 1) > 1 ? 'Aposta Multipla' : 'Aposta Simples') + '</h4></center>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block; text-align: left;\">DATA:</span> <span id=\"conteudo_txtDataBilhete\" style=\"display: inline-block\"> ' + dateHour + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">COLABORADOR:</span> <span style=\"display: inline-block\">' + nomeBanca + '</span><br>\\n' +\n            '\\n' +\n            '                        <span style=\"display: inline-block\">CLIENTE:</span> <span style=\"display: inline-block\">' + client + '</span><br>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">APOSTA</span></div>\\n' +\n            '\\n' +\n            '                        <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">COTAÇÃO</span></div>\\n' +\n            '\\n' +\n            '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '\\n';\n\n        prejogo.split('=').slice(0, -1).map((b) => {\n            let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n            let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n            let data = Number.isInteger(\n                parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n            ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n            let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n            let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n\n            document.getElementById('bilheteP').innerHTML +=\n                '<div id=\"conteudo_divBilheteImpressao\">\\n' +\n                '<div>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block; text-align: left;\">Futebol - ' + data + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block; text-align: left;\">' + campeonato + '</span><br>\\n' +\n                '\\n' +\n                '                                    <span style=\"display: inline-block;  text-align: left;\">' + times + '</span><br>\\n' +\n                '\\n' +\n                '                                    <b><span style=\"display: inline-block;  text-align: left;\">' + typeBets.split('--')[0] + '</span></b><br>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">' + typeBets.split('--')[1] + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + value + '</span></div>\\n' +\n                '\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Status:</span></div>\\n' +\n                '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + \"Aberto\" + '</span></div>\\n' +\n                '\\n' +\n                '                                    <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                '\\n' +\n                '                                </div>\\n'\n\n        });\n\n        document.getElementById('footer').innerHTML = '                            \\n' +\n            '                                \\n' +\n            '                            \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Quant. de Jogos:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + (localStorage.getItem('betsAll2').split(\"=\").length - 1) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Cotação:</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span  style=\"display: inline-block\">' + parseFloat(document.getElementById('cotacao').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '\\t\\t\\t\\t\\t\\t\\t</div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Total Apostado:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span id=\"conteudo_txtTotalApostado\" style=\"display: inline-block\">R$ ' + parseFloat(entrada).toFixed(2) + '</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Poss. Retorno:</span></div>\\n' +\n            '\\n' +\n            '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">R$ ' + parseFloat(document.getElementById('retorno').innerHTML).toFixed(2) + '</span></div>\\n' +\n            '                            \\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\"><span style=\"display: inline-block\">BILHETE</span></div>\\n' +\n            '                            <div style=\"display: inline-block; width: 100%; text-align: center;\">\\n' +\n            '                                <h2 style=\"font-weight:bold\" class=\"H3\">' + codigo + '</h2>                  \\n' +\n            '                            </div>\\n' +\n            '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                        \\n' +\n            '\\n' +\n            '                        <div>\\n' +\n            '                            <span>Ao realizar apostas na SONHOBETS, você concorda com todos os termos e regras do site. Boa Sorte!</span>\\n' +\n            '                        </div>\\n' +\n            '\\n' +\n            '                    </div>\\n' +\n            '                </div>';\n\n        api.get('/api/getdate')\n            .then(res => {\n                d = (res.data.date);\n\n                let comissaoValor = 0;\n                let qtd = parseFloat(localStorage.getItem('betsAll2').split(\"=\").length - 1);\n\n                for (let valores of bilhetes) {\n\n                    if (qtd >= parseFloat(valores.split(':')[0])) {\n                        comissaoValor = parseFloat(valores.split(':')[1]) / 100;\n\n                    }\n                }\n\n\n                api.post('/api/addbilhete',\n                    {\n                        \"codigo\": codigo,\n                        \"bancaId\": bancaId,\n                        \"gerenteId\": gerenteId,\n                        \"nomeCliente\": client,\n                        \"nomeBanca\": nomeBanca,\n                        \"dataDaAposta\": d,\n                        \"valorDeEntrada\": parseFloat(entrada),\n                        \"valorDeSaida\": parseFloat(document.getElementById('retorno').innerHTML),\n                        \"cotacao\": parseFloat(document.getElementById('cotacao').innerHTML),\n                        \"tipoDeJogo\": \"Pre-Jogo\",\n                        \"quantidadeJogos\": qtd,\n                        \"tipoSimplesouMultiplo\": qtd > 1 ? \"M\" : \"S\",\n                        \"comissao\": (parseFloat(entrada) * comissaoValor).toFixed(2),\n                        \"status\": \"Aberto\"\n\n                    })\n                    .then(res => {\n                        let prejogo = localStorage.getItem('betsAll2');\n                        try {\n                            prejogo.split('=').slice(0, -1).map((b) => {\n                                let campeonato = localStorage.getItem(b.split('-')[0] + 'x').split(',')[6];\n                                let times = localStorage.getItem(b.split('-')[0] + 'x').split(',')[5].replace('-', 'x');\n                                let data = Number.isInteger(\n                                    parseInt(localStorage.getItem(b.split('-')[0] + 'x').split(',')[7][0])\n                                ) ? localStorage.getItem(b.split('-')[0] + 'x').split(',')[7] :\n                                    localStorage.getItem(b.split('-')[0] + 'x').split(',')[8];\n                                let typeBets = localStorage.getItem(b.split('-')[0] + 'x').split(',')[1]\n                                let value = localStorage.getItem(b.split('-')[0] + 'x').split(',')[4];\n                                api.post('/api/addjogo',\n                                    {\n                                        \"codigoBilhete\": codigo,\n                                        \"dataDoJogo\": data,\n                                        \"nomeDoCampeonato\": campeonato,\n                                        \"nomeDosTimes\": times,\n                                        \"tipoDeCotacao\": typeBets,\n                                        \"cotacao\": parseFloat(value),\n                                        \"status\": \"Aberto\",\n                                        // \"idEvento\": b.split('-')[0],\n                                    })\n                                    .then(res => {\n                                        try {\n                                            if (res.data) {\n                                                localStorage.removeItem(b.split('-')[0] + 'x');\n                                                localStorage.removeItem(b.split('-')[0]);\n                                                clearOdds();\n                                                localStorage.setItem('betsAll2', localStorage.getItem('betsAll2').replace(b + '=', ''));\n                                                geraBilhete();\n                                                document.getElementById(\"retorno\").innerHTML = '0.00';\n                                            }\n                                        } catch (e) {\n\n                                        }\n\n                                    }).catch(error => {\n                                    console.log(error);\n                                });\n\n                            });\n                            setEntrada(0);\n                            localStorage.setItem(\"retorno\", \"\");\n                            setClient(\"\");\n                            addVeiryClient(\"\");\n\n                        } catch (e) {\n\n                        }\n\n                    }).catch(error => {\n                    console.log(error);\n                });\n            }).catch(error => {\n            console.log(error);\n        });\n\n    }\n\n    function cotacaoHandler() {\n        try {\n            var resultCotaca = 1;\n            var id = localStorage.getItem('betsAll2').split('=');\n\n            if (id !== null && id[0] !== '') {\n                for (let n in id.slice(0, id.length - 1)) {\n                    resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                }\n            } else {\n                resultCotaca = 0;\n            }\n\n            let cotacao = sessionStorage.getItem('cotacaoAdmin');\n            document.getElementById('cotacao').innerHTML = parseFloat(resultCotaca > Number(cotacao) ?\n                Number(cotacao) : resultCotaca).toFixed(2);\n        } catch (e) {\n\n        }\n\n    }\n\n    // {(retorno*cotacaoValue).toFixed(2) > 10000.00 ? 10000.00 :\n    //     (retorno*cotacaoValue).toFixed(2)}\n\n    function valueBetsHandler(e) {\n        var value = e.target.value;\n        \n        let cotacao = Number(document.getElementById('cotacao').innerHTML);\n        if (1) {\n\n                setEntrada(value);\n\n                document.getElementById('retorno').innerHTML =\n                    ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                        ((cotacao * Number(value)).toFixed(2));\n\n                sessionStorage.setItem(\"retorno\", ((cotacao * Number(value)).toFixed(2)) > parseFloat(\"10000\") ? parseFloat(\"10000\").toFixed(2) :\n                    ((cotacao * Number(value)).toFixed(2)));\n\n\n\n        } else {\n            document.getElementById('retorno').innerHTML = '0.00';\n            setEntrada(0);\n            sessionStorage.removeItem(\"retorno\")\n            handleCloseURL();\n        }\n\n        sessionStorage.setItem('valorIn', value);\n\n    }\n\n    function addVeiryClient(e) {\n        setValue(e.target.value);\n    }\n\n    function addClient() {\n\n        if (value.length > 3) {\n            if (getClient() == false) {\n                api.post('/api/addcliente', {\n                    'nome': value,\n                    'banca': sessionStorage.getItem('login'),\n                    'gerenteId': sessionStorage.getItem('gerenteId'),\n                    'nomeBanca': sessionStorage.getItem('nomeBanca')\n                })\n                    .then(res => {\n                        try {\n                            let nomes = [];\n                            if (res.data) {\n\n                                if(res.data.clientes == false){\n                                    handleClickOpenURL();\n                                    setMessage(`Já possui um cliente com esse nome!`);\n                                } else {\n                                    handleClickOpenURL();\n                                    setMessage(`Cliente cadastrado com sucesso!`);\n\n\n                                    api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                                        .then(res => {\n                                            try {\n                                                if (res.data) {\n                                                    res.data.clientes.map((c) => {\n                                                        nomes.push(c.nome);\n                                                    });\n                                                }\n                                            } catch (e) {\n\n                                            }\n                                            setClientes((nomes));\n                                        }).catch(error => {\n                                        console.log(error);\n                                    });\n                                }\n                            }\n                        } catch (e) {\n\n                        }\n                        setValue(\"\");\n                    }).catch(error => {\n                    console.log(error);\n                });\n            } else {\n                setMessage(`Cliente já existe nessa banca!`);\n                handleClickOpenURL();\n            }\n        } else {\n            setMessage(`O nome deve conter mais de 3 letras!`);\n            handleClickOpenURL();\n        }\n    }\n\n\n    function getClient() {\n        let r = false;\n        if(sessionStorage.getItem('login') != null && sessionStorage.getItem('login') != \"\") {\n            clientes.map((f) => {\n                console.log(f);\n                if (f == client) {\n                    r = true;\n                }\n            });\n        } else {\n            r = true;\n        }\n        return r;\n    }\n\n    function verifyClientHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setClient(auxClient);\n\n    }\n\n  \n    function validIn(){\n\n        let valorMax = sessionStorage.getItem('valorDeSaida');                                                          let valorMin = sessionStorage.getItem('valorDeEntrada');                                                \n        if (parseFloat(entrada) >= valorMin && parseFloat(entrada) <= valorMax) {                                               betsDone();                             \n        } else if (parseFloat(entrada) < valorMin) {\n\n                document.getElementById('retorno').innerHTML = '0.00';\n                setMessage(\"O valor mínimo permitido<br/> por aposta é de R$ \" + parseFloat(valorMin).toFixed(2)\n);                                                                handleClickOpenURL();\n        } else {                                                    setMessage(\"O valor máximo permitido<br/> por aposta é de R$ \" + parseFloat(valorMax).toFixed(2));\n          handleClickOpenURL();                                 }                                                   }\n\n\n    function betsDone() {\n        let qtd = localStorage.getItem('betsAll2').split(\"=\").length-1;\n        let qtdJogos = sessionStorage.getItem(\"qtdJogos\");\n        if(qtd <= qtdJogos) {\n            handleClickOpenLoading();\n\n\n            setTimeout(function () {\n\n                let valid1 = false;\n                let valid2 = true;\n                let valid3 = false;\n                let oddValue = false;\n                let teams = [];\n                let cotacaoAux = 1;\n                let cotAux = parseFloat(document.getElementById('cotacao').innerHTML);\n                let betsAll = localStorage.getItem(\"betsAll2\").split(\"=\");\n                var id = localStorage.getItem('betsAll2').split('=');\n\n                if (id !== null && id[0] !== '') {\n                    for (let n in id.slice(0, id.length - 1)) {\n                        cotacaoAux *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                    }\n                }\n                betsAll = betsAll.slice(0, betsAll.length - 1);\n                let i = 0;\n                betsAll.map((bets) => {\n\n                    let auxBets = localStorage.getItem(bets.split('-')[0] + \"x\").split(',');\n                    let id = auxBets.slice(-1)[0];\n                    let opcao = auxBets[0].split(':')[0];\n                    let key = auxBets[0].split(':')[1];\n\n\n                    api.get('/api/getmaispre/' + id)\n                        .then(res => {\n\n                            let valores = new Set();\n                            let cotacoes = {};\n\n\n                            try {\n\n\n                                i++;\n\n\n                                if (res.data) {\n                                    res.data.mais.modalidades.map((m) => {\n                                        m.cotacoes.map((c) => {\n                                            if (c.subeventos != null) {\n                                                c.subeventos.map((e) => {\n\n                                                    if (m.titulo + \"--\" + ((m.titulo != 'Vencedor do Encontro') ?\n                                                        (e.titulo + ' (' + e.nome + ')').replace(nomeTime[0], '') :\n                                                         e.nome.replace(nomeTime[0], '')) == auxBets[1]) {\n                                                        let cotacoes = JSON.parse(sessionStorage.getItem(\"cotacoes\"));\n                                                        try{\n                                                            oddValue = true;\n                                                            valid2 = false;\n                                                            let cot =  (Number(e.cotacao / 100) +\n                                                                (Number(e.cotacao / 100) *\n                                                                    (cotacoes[m.titulo][1] / 100))).toFixed(2);\n                                                            if (Number(auxBets[4]) == 15 &&\n                                                                Number(auxBets[4]) > cot) {\n                                                                valid1 = true;\n                                                                auxBets[4] = cot;\n                                                                localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                    auxBets.join(','));\n                                                                geraBilhete();\n                                                            } else if (Number(auxBets[4]) != cot) {\n                                                                valid1 = true;\n                                                                auxBets[4] = cot;\n                                                                localStorage.setItem((bets.split('-')[0] + \"x\"),\n                                                                    auxBets.join(','));\n                                                                geraBilhete();\n                                                            }\n                                                        }catch (e) {\n\n                                                        }\n                                                    }\n                                                })\n                                            }\n                                        })\n                                    })\n\n\n                                    if (betsAll.length == i) {\n\n\n                                        if (Number(document.getElementById('retorno').innerHTML) > 0) {\n                                            if (cotacaoAux > parseFloat(sessionStorage.getItem('cotacaoAdminMin'))) {\n                                                if (getClient() == false) {\n                                                    setMessage(`Por favor adicione um cliente válido!`);\n                                                    handleClickOpenURL();\n                                                } else if (valid2) {\n                                                    setMessage(`Algumas apostas foram suspenas, aguarde um momento e confirme sua aposta!`);\n                                                    handleClickOpenURL();\n                                                } else if (valid1) {\n\n                                                    var resultCotaca = 1;\n                                                    var id = localStorage.getItem('betsAll2').split('=');\n\n                                                    if (id !== null && id[0] !== '') {\n                                                        for (let n in id.slice(0, id.length - 1)) {\n                                                            resultCotaca *= parseFloat(localStorage.getItem(id[n].split('-')[0] + 'x').split(',')[4]);\n\n                                                        }\n\n                                                    } else {\n                                                        resultCotaca = 0;\n                                                    }\n                                                    let r = parseFloat(document.getElementById('retorno').innerHTML);\n                                                    if(resultCotaca != r && resultCotaca <= 10000){\n                                                        document.getElementById('retorno').innerHTML = ' ' +\n                                                            Number(resultCotaca * Number(document.getElementById('resetField1').value)).toFixed(2);\n                                                        setMessage(`A cotação escolhida alterou de: R$ ${cotacaoAux.toFixed(2)} <br/> para: R$ ${resultCotaca.toFixed(2)} . Clique novamente para confirmar a aposta!`);\n                                                    } else {\n                                                        setMessage(`Algumas apostas foram alteradas, pode finalizar sua aposta!`);\n                                                    }\n\n\n\n\n                                                    handleClickOpenURL();\n\n\n                                                }\n                                                if (sessionStorage.getItem('login') == null || sessionStorage.getItem('login') == \"\") {\n                                                    if (!valid1 && !valid2 && !valid3) {\n                                                        let qtd = localStorage.getItem('betsAll2').split(\"=\").length - 1;\n\n\n                                                        if (500 >= parseFloat(entrada)) {\n                                                            //salvarBilhete();\n                                                            localStorage.setItem(\"valorIn\", sessionStorage.getItem(\"valorIn\"));\n                                                            localStorage.setItem(\"retorno\", sessionStorage.getItem(\"retorno\"));\n                                                            let codigoPIn = Math.ceil(Math.random() * Math.pow(10, 6));\n                                                            api.post('/api/addbilhetetemporario', {\n                                                                'codigoPin': codigoPIn,\n                                                                'bilhete': {...localStorage}\n                                                            })\n                                                                .then(res => {\n                                                                    if (res.data) {\n                                                                        noneBets();\n                                                                        clearOdds();\n\n                                                                        localStorage.clear();\n\n                                                                        document.getElementById(\"bilhete\").innerHTML =\n                                                                            \"<center><h1>\" + codigoPIn + \"</h1></center>\";\n                                                                    }\n                                                                    clearOdds();\n                                                                }).catch(error => {\n                                                                console.log(error)\n                                                            });\n\n                                                        } else {\n                                                            alert('Sem limite para apostar!');\n                                                        }\n\n                                                    }\n                                                } else {\n                                                    if (getClient() && !valid1 && !valid2 && !valid3) {\n                                                        let qtd = localStorage.getItem('betsAll2').split(\"=\").length - 1;\n                                                        let auxSaldo = qtd > 1 ? saldoGeral : saldoSimples;\n\n                                                        if (auxSaldo >= parseFloat(entrada)) {\n                                                            salvarBilhete();\n\n                                                            noneBets();\n                                                            clearOdds();\n                                                            geraBilhete();\n                                                            var top = window.screen.height - 300;\n                                                            top = top > 0 ? top/2 : 0;\n\n                                                            var left = window.screen.width - 400;\n                                                            left = left > 0 ? left/2 : 0;\n\n                                                            const WinPrint = window.open('', '_blank', 'width=800,height=900,scrollbars=0, top=' + top + ',left=' + left + '' );\n                                                            WinPrint.document.write('<button class=\"block2\" onclick=\"whatsapp()\" id=\"print1\"><b>WHATSAPP</b></button><br>' +\n                                                                '<button class=\"block1\" onclick=\"imprimir()\" id=\"print2\"><b>IMPRIMIR</b></button>' + document.getElementById(\"dialogBilhete\").innerHTML+'<style>' +\n                                                                'body {background-color: rgb(248, 236, 194); color: black;  font-size: 12px}' +\n                                                                'span {font-size: 12px}' +\n                                                                '.block1 {' +\n                                                                'display: block;' +\n                                                                'width: 100%;' +\n                                                                'border: none;' +\n                                                                'background-color: #3f51b5;' +\n                                                                'color: white;' +\n                                                                'padding: 14px 28px;' +\n                                                                'font-size: 26px;' +\n                                                                'cursor: pointer;' +\n                                                                'text-align: center;' +\n                                                                '}' +\n                                                                '.block2 {' +\n                                                                'display: block;' +\n                                                                'width: 100%;' +\n                                                                'border: none;' +\n                                                                'background-color: #04AA6D;' +\n                                                                'color: white;' +\n                                                                'padding: 14px 28px;' +\n                                                                'font-size: 26px;' +\n                                                                'cursor: pointer;' +\n                                                                'text-align: center;' +\n                                                                '}' +\n                                                                '</style>'+\n\n                                                                '<script>' +\n                                                                'function imprimir(){document.getElementById(\"print1\").style.display = \"none\";' +\n                                                                'document.getElementById(\"print2\").style.display = \"none\";' +\n                                                                'setTimeout(function () { window.print(); }, 500);window.onfocus = function () { ' +\n                                                                'setTimeout(function () { window.close(); }, 500); };' +\n                                                                '};' +\n                                                                'function whatsapp(){window.location.href=' +\n                                                                '\"whatsapp://send?text=Link+para+seu+bilhete%3a%0d%0a%0d%0' +\n                                                                'ahttps%3A%2F%2Fwww.sonhobets.com.br%2F%23%2FverificarBilhete%2F' + codigo + '\";}</script>');\n\n                                                        } else {\n                                                            alert('Sem limite para apostar!');\n                                                        }\n\n                                                    }\n                                                }\n                                            } else {\n                                                setMessage('A cotação mínima é de R$ ' + parseFloat(sessionStorage.getItem('cotacaoAdminMin'))\n                                                    .toFixed(2));\n                                                handleClickOpenURL();\n                                            }\n                                        } else {\n                                            setMessage('Por favor insira um valor de no mínimo R$ ' + sessionStorage.getItem('valorDeEntrada') + ',00');\n                                            handleClickOpenURL();\n                                        }\n                                        handleCloseLoading();\n                                    }\n                                }\n\n\n                            } catch (e) {\n                                alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                                handleCloseLoading();\n                                console.log(e);\n                                valid1 = true;\n                                valid2 = true;\n                            }\n                        }).catch(error => {\n                        alert('O seguinte jogo indisponível: ' + auxBets[5]);\n                        handleCloseLoading();\n                    });\n\n\n                });\n\n\n            }, 0);\n        } else {\n            alert('Você selecionou ' + qtd + ' jogos, o máximo é ' + qtdJogos);\n        }\n    }\n\n\n    const onClickHandler = (e) => {\n        document.getElementById('resetField1').value = '';\n\n        if (apostasPreJogo == true) {\n\n\n            if (1) {\n                document.getElementById('bilheteP').innerHTML = '';\n                const team = e.target.getAttribute(\"data-item\");\n                document.getElementById(\"retorno\").innerHTML = '0.00';\n                try {\n                    let betsGame = team.split(\"=\");\n                    if (betsGame[4] != 0) {\n\n                        \n\n                        console.log(betsGame);\n                        var date = new Date(Date.parse(betsGame[7].replace(\"Z\", \"+00:00\")));\n                        var hourMinute =\n                            ((date.getHours() + \"\").length === 1\n                                ? \"0\" + date.getHours()\n                                : date.getHours()) +\n                            \":\" +\n                            ((date.getMinutes() + \"\").length === 1\n                                ? \"0\" + date.getMinutes()\n                                : date.getMinutes());\n\n                        var monthDate =\n                            date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n                        betsGame[7] = monthDate + \"  \" + hourMinute;\n                        if (\n                            localStorage.getItem(betsGame.slice(-1)[0]) === betsGame[2] &&\n                            document\n                                .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                                .innerHTML.indexOf(\"/svg>\") === -1\n                        ) {\n                            document.getElementById(\n                                betsGame[2] + betsGame.slice(-1)[0]\n                            ).style.background = \"\";\n                            localStorage.setItem(betsGame.slice(-1)[0], \"\");\n                            localStorage.setItem(betsGame.slice(-1)[0] + \"x\", \"\");\n                            localStorage.removeItem(betsGame.slice(-1)[0]);\n                            localStorage.removeItem(betsGame.slice(-1)[0] + \"x\");\n\n                            betsAll = localStorage.getItem(\"betsAll2\");\n                            betsAll = betsAll.replace(\n                                betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\",\n                                \"\"\n                            );\n                            localStorage.setItem(\"betsAll2\", betsAll);\n                            geraBilhete();\n                            cotacaoHandler();\n\n                        } else if (\n                            document\n                                .getElementById(betsGame[2] + betsGame.slice(-1)[0])\n                                .innerHTML.indexOf(\"/svg>\") === -1\n                        ) {\n\n                            document.getElementById(\n                                betsGame[2] + betsGame.slice(-1)[0]\n                            ).style.background = \"red\";\n                            if (localStorage.getItem(betsGame.slice(-1)[0])) {\n                                document.getElementById(\n                                    localStorage.getItem(betsGame.slice(-1)[0]) + betsGame.slice(-1)[0]\n                                ).style.background = \"\";\n                            }\n\n                            localStorage.setItem(betsGame.slice(-1)[0] + \"x\", betsGame);\n                            console.log(localStorage.getItem(betsGame.slice(-1)[0] + \"x\"));\n                            betsAll = localStorage.getItem(\"betsAll2\");\n                            betsAll = betsAll.replace(\n                                betsGame.slice(-1)[0] +\n                                \"-\" +\n                                localStorage.getItem(betsGame.slice(-1)[0]) +\n                                \"=\",\n                                \"\"\n                            );\n                            localStorage.setItem(betsGame.slice(-1)[0], betsGame[2]);\n                            betsAll = betsAll + betsGame.slice(-1)[0] + \"-\" + betsGame[2] + \"=\";\n                            localStorage.setItem(\"betsAll2\", betsAll);\n                            geraBilhete();\n                            cotacaoHandler();\n                        }\n                    }\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        }\n    };\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n\n        async function getLoginAPI() {\n\n            api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            let c = {};\n                            setSaldoSimples(res.data.bancas.saldoSimples);\n                            setSaldoGeral(res.data.bancas.saldoGeral);\n                            setNomeBanca(res.data.bancas.nome);\n                            setGerenteId(res.data.bancas.gerente);\n                            setBilhetes(res.data.bancas.comissaoPreJogo.split(';'));\n                            setBancaId(res.data.bancas.id);\n                            setApostasPreJogo(res.data.bancas.ativarApostasPreJogo);\n\n                            api.get('/api/getcotacaoprejogo/' + res.data.bancas.gerente + '/' + res.data.bancas.nome).then(res => {\n\n                                try {\n                                    res.data.cotacoes.map((o) => {\n                                        c[o.tipoDeCotacao] = [o.status, o.porcentagem];\n                                    })  \n                                    setCotacao(c);\n                                    if(sessionStorage.getItem('login') == null ||\n                                        sessionStorage.getItem('login') == \"\") {\n                                        setCotacao({});\n                                    }\n                                } catch (e) {\n                                    c[res.data.cotacoes.tipoDeCotacao] = \n                                    [res.data.cotacoes.status, res.data.cotacoes.porcentagem];\n                                    setCotacao(c);\n                                }\n                                sessionStorage.setItem(\"cotacao\", JSON.stringify(c));\n                                \n                            }).catch(error => {\n                                console.log(error)\n                            });\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        async function getClienteAPI() {\n            let nomes = [];\n            api.get('/api/getclientes/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n\n                        if (res.data) {\n\n                            res.data.clientes.map((c) =>{\n                                nomes.push(c.nome);\n\n                            })\n                        }\n                    } catch (e) {\n\n                    }\n                    setClientes(nomes);\n\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n\n        async function getMaisAPI() {\n\n            api.get('/api/getmaispre/' + idCamp)\n                .then(res => {\n                    document.getElementById('retorno').innerHTML = '';\n                    let l = [];\n\n\n                    try {\n                        let mais = res.data.mais.modalidades.slice();\n\n                        mais.map((m) => {\n                            l.push(m)\n                        });\n                        setNomeTime([res.data.mais.nomeEvento,\n                            res.data.mais.idEvento, res.data.mais.pais,\n                            res.data.mais.campeonato]);\n\n                        setCotacaoJogos(l);\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n        if(sessionStorage.getItem('login') != null &&  sessionStorage.getItem('login') != \"\") {\n            getLoginAPI();\n            getClienteAPI();\n        }\n        getMaisAPI();\n\n        geraBilhete();\n\n\n    }, []);\n\n\n    const fixedHeightPaper = clsx(classes.paper);\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={8}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={6} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n                                                            <Typography variant=\"h4\" gutterBottom>\n                                                                {nomeTime[2]}\n                                                            </Typography>\n                                                            <Typography variant=\"h5\" gutterBottom>\n                                                                {nomeTime[0]}\n                                                            </Typography>\n                                                            <Typography gutterBottom variant=\"subtitle1\">\n                                                                {nomeTime[3]}\n                                                            </Typography>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n                                        {cotacaoJogos.length > 0 ? cotacaoJogos.map((nome) => (\n\n                                            <TableContainer component={Paper}>\n\n\n                                                <Table id=\"preJogos\">\n\n\n                                                    <TableHead>\n                                                        {cotacaoJogos.length != undefined && cotacaoJogos.length > 0 ?\n                                                            <TableRow>\n                                                                <StyledTableCell align={\"left\"}\n                                                                                 id='font'><b>{nome.titulo}</b></StyledTableCell>\n                                                                <StyledTableCell align=\"right\" id='font'\n                                                                                 style={{width: '10%'}}><b>COTAÇÃO</b></StyledTableCell>\n                                                            </TableRow> : ''}\n                                                    </TableHead>\n\n                                                    <TableBody>\n\n\n                                                        {nome.cotacoes.length != undefined && nome.cotacoes.length > 0 ? nome.cotacoes.map((bet) => (\n                                                            (bet.subeventos != null ? bet.subeventos.map((n) => (\n\n                                                                    ( '+3 +4 +5 +6 +7 -3 -4 -5 -6 -7'.indexOf(n.nome) == -1 ? <tr  >\n\n                                                                        <StyledTableCell id='font'>\n                                                                            <b >{((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], ''))}</b>\n                                                                        </StyledTableCell>\n\n                                                                        <td align=\"right\" id='font'>\n                                                                           <span onClick={onClickHandler}\n\n                                                                                 variant=\"contained\" color={\"primary\"} class=\"buttonPlus\"\n                                                                                 id={(parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ?\n                                                                        ((nome.titulo + ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                            (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], '')))\n                                                                                     .replace(/[^0-9a-z]/gi, '')+n.idOpcao+nomeTime[1]):'')}\n\n                                                                                 data-item={nome.titulo + ':' +   ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], '')) + '=' + nome.titulo + \"--\" +\n                                                                                     ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                     (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], '')) + \"=\" +\n                                                                                     ((nome.titulo+((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], ''))).replace(/[^0-9a-z]/gi, '')+n.idOpcao) +\n                                                                                     \"=\" + nomeTime[1] + \"-\" + (nome.titulo+((nome.titulo != 'Vencedor do Encontro')  ?\n                                                                                         (bet.titulo + ' (' + n.nome + ')').replace(nomeTime[0], '') : n.nome.replace(nomeTime[0], ''))).replace(/[^0-9a-z]/gi, '') + \"=\" +\n                                                                                     (\n                                                                                         (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                             (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                             n.cotacao > 0\n                                                                                             &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                                 (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                         ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                                     parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                         (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                                 : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) < parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                                                             (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                                 (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                                 n.cotacao > 0\n                                                                                                 &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                                     (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                             ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                                         parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                             (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                                     : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) : parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2)) + \"=\" + nomeTime[0].replace(/,/g, '') +\n                                                                                     \"=\" + nomeTime[3].replace(/ - /g, ': ') + \"=\" + new Date(parseInt(horario)) + \"=\" + \"Aberto\" + \"=\" + nomeTime[1]}>\n\n                                                                        <b  data-item={nome.titulo + ':' +   ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome) + '=' + nome.titulo + \"--\" +\n                                                                            ((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome) + \"=\" +\n                                                                            ((nome.titulo+((nome.titulo != 'Vencedor do Encontro') ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome)).replace(/[^0-9a-z]/gi, '')+n.idOpcao) +\n                                                                            \"=\" + nomeTime[1] + \"-\" + (nome.titulo+((nome.titulo != 'Vencedor do Encontro')  ?\n                                                                                (bet.titulo + ' (' + n.nome + ')') : n.nome)).replace(/[^0-9a-z]/gi, '') + \"=\" +\n                                                                            (\n                                                                                (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                    (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                    n.cotacao > 0\n                                                                                    &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                        (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                            parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                        : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) < parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                                                                    (parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                        (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                        n.cotacao > 0\n                                                                                        &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                            (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                                    ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                                parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                                    (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                            : <span style={{color:\"red\"}}>0</span>) : <span style={{color:\"red\"}}>0</span>) : parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2)) + \"=\" + nomeTime[0].replace(/,/g, '') +\n                                                                            \"=\" + nomeTime[3].replace(/ - /g, ': ') + \"=\" + new Date(parseInt(horario)) + \"=\" + \"Aberto\" + \"=\" + nomeTime[1]}>\n\n                                                                            {(parseFloat(sessionStorage.getItem('cotaMin')) < (n.cotacao/100).toFixed(2) ? (cotacao[nome.titulo] != undefined && cotacao[nome.titulo] < 0 ?\n                                                                                (((n.cotacao/100).toFixed(2)) - ((((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100))*-1)) :\n                                                                                n.cotacao > 0\n                                                                                &&  (cotacao[nome.titulo] != undefined ? cotacao[nome.titulo][0] : true) == true ?\n                                                                                    (parseFloat(((n.cotacao/100).toFixed(2)) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                                            ? sessionStorage.getItem('cotaMax') : ((n.cotacao/100).toFixed(2))) +\n                                                                                        parseFloat(cotacao[nome.titulo] != undefined ?\n                                                                                            (((n.cotacao/100).toFixed(2)) * (cotacao[nome.titulo][1]/100)) : 0)).toFixed(2)\n                                                                                    : <LockIcon style={{fontSize: 15}}/>) : <LockIcon style={{fontSize: 15}}/>)}</b>\n                                                                    </span>\n                                                                        </td>\n\n                                                                    </tr> : '')\n                                                            )) : '')\n                                                        )) : <LinearProgress/>}\n\n\n                                                    </TableBody>\n\n                                                </Table>\n                                            </TableContainer>\n\n                                        )) : <LinearProgress/>}\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={9} lg={4} id='bl'>\n                            <div id='font'>\n                                <Paper className={fixedHeightPaper}>\n                                    <Typography variant=\"h6\" gutterBottom align=\"center\">\n                                        <b>PRÉ-JOGO</b>\n                                    </Typography>\n                                    <Divider/><br/>\n                                    <div id={\"bilhete\"}></div>\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <Typography align=\"center\" style={{\n                                        lineHeight: '120%',\n\n                                    }}\n                                                id={\"valuesBets\"}>\n                                        Cotação: R$ <b id={\"cotacao\"}></b><br/>\n                                        Possível Retorno:\n                                        R$ <b id={\"retorno\"}>0.00</b><br/>\n                                        Valor da Aposta:<br/><br/>\n                                    </Typography>\n                                    <center>\n                                        <div id={\"value\"}>\n                                                <TextField\n                                                    fullWidth\n                                                    id={\"resetField1\"}\n\n                                                    label=\"Digite um Valor\"\n                                                    type=\"text\"\n\n                                                    onChange={valueBetsHandler}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                    }}\n                                                    onInput={(e) => {\n                                                        e.target.value = e.target.value\n                                                    }}\n\n                                                    variant=\"filled\"\n                                                /></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <div id={\"clients\"}>\n                                        <Autocomplete\n                                            id=\"controllable-states-demo\"\n                                            value={client}\n                                            onChange={(event, newValue) => {\n                                                setClient(newValue);\n                                            }}\n                                            inputValue={inputValue}\n                                            onInputChange={(event, newInputValue) => {\n                                                setInputValue(newInputValue);\n                                            }}\n                                            options={clientes}\n                                            renderInput={(params) =>\n                                                <TextField\n                                                    {...params}\n\n                                                    label=\"Nome do Cliente\"\n                                                    variant=\"outlined\"/>}\n                                        /></div>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <Button id={\"done\"}\n                                            onClick={validIn} variant=\"contained\" color=\"secondary\">\n                                        <b>FINALIZAR APOSTA</b>\n                                    </Button>\n\n\n                                    <br style={{marginBottom: '10px'}}/>\n                                    <center>\n                                        <div id={\"fieldClient\"}>\n                                            <TextField\n                                                id={\"resetField3\"}\n                                                label=\"Cadastrar Cliente\"\n                                                type=\"search\"\n                                                fullWidth\n                                                value={value}\n                                                onChange={addVeiryClient}\n                                                variant=\"outlined\"/></div>\n                                    </center>\n\n                                    <br style={{marginBottom: '10px'}}/>\n\n                                    <Button id={\"buttonClient\"}\n                                            variant=\"contained\"\n                                            onClick={addClient}\n                                            color=\"secondary\">\n                                        <b>CADASTRAR CLIENTE</b>\n                                    </Button>\n                                    <br style={{marginBottom: '10px'}}/>\n                                </Paper>\n                            </div>\n                        </Grid>\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <div>\n                    <ScrollUpButton/>\n                </div>\n                <div style={{display: 'none'}}>\n\n                    <Grid item xs={12} md={4} sm={12}>\n                        <div style={{\n                            width: 'calc(100% - 15%)',\n                            fontSize: 12,\n                            backgroundColor: 'rgb(248, 236, 194)',\n                            color: 'black',\n                            boxSizing: 'border-box'\n                        }} ref={componentRef} id=\"dialogBilhete\">\n                            <div id=\"header\"></div>\n                            <div id=\"bilheteP\"></div>\n                            <div id=\"footer\"></div>\n                        </div>\n\n                    </Grid>\n\n                </div>\n            </main>\n        </div>\n    );\n\n\n\n}\n","import Table from \"@material-ui/core/Table\";\nimport {memo, useMemo} from \"react\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from \"@material-ui/core/Paper\";\nimport LockIcon from '@mui/icons-material/Lock';\nimport {images} from \"../../Constantes/index\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport useWindowDimensions from '../../Size/index';\n\n\n\nconst html = <LockIcon style={{fontSize: 14}}/>;\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n        padding: 5,\n    },\n    body: {\n        fontSize: 12,\n        \n\n    },\n}))(TableCell);\n\nconst StyledTableCell2 = withStyles((theme) => ({\n    head: {\n        backgroundColor: 'red',\n        color: theme.palette.common.white,\n        padding: 5,\n    },\n    body: {\n        fontSize: 12,\n\n\n    },\n}))(TableCell);\n\n\nconst Jogos = memo(function Jogos(props) {\n\n    const {width} = useWindowDimensions();\n\n    return (\n        <TableContainer component={Paper} >\n                                      \n                                      \n            {props.campeonato.length != 0 ? props.campeonato.prejogo.map((c) => (\n\n            c.momentos.map((j) => ( \n                <Table stickyHeader aria-label=\"sticky table\" >\n                {width < 600 && c.countrys != '' ? <TableHead >\n                    <TableRow>\n                        <StyledTableCell\n                                            id='font'><b><img src={images[c.pais]} style={{marginRight: 3}} width='30' height='22' />{c.pais}</b><br/></StyledTableCell>\n                        <StyledTableCell align={\"center\"} style={{width: 5}}\n                                            ><b>1</b></StyledTableCell>\n                        <StyledTableCell align={\"center\"} style={{width: 5}}\n                                            ><b>X</b></StyledTableCell>\n                        <StyledTableCell align={\"center\"} style={{width: 5}}\n                                            ><b>2</b></StyledTableCell>\n                             \n                        \n                    </TableRow>\n                </TableHead> : width < 600 ? <TableHead >\n                    <TableRow>\n                        <StyledTableCell2\n                            id='font'><b>{c.nome}</b><br/></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 5}}\n                        ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 5}}\n                        ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 5}}\n                        ><b></b></StyledTableCell2>\n\n\n                    </TableRow>\n                </TableHead> : c.countrys != '' ? <TableHead>\n                    <TableRow>\n                        <StyledTableCell\n                                            id='font'><b><img src={images[c.pais]} style={{marginRight: 3}} width='30' height='22' />{c.pais}</b><br/></StyledTableCell>\n                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                            ><b>CASA</b></StyledTableCell>\n                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                            ><b>EMPATE</b></StyledTableCell>\n                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                            ><b>FORA</b></StyledTableCell>\n                        <StyledTableCell align={\"center\"} style={{width: 15}}\n                                            ><b>MAIS</b></StyledTableCell>\n                    </TableRow> \n                </TableHead> : <TableHead >\n                    <TableRow>\n                        <StyledTableCell2\n                                            id='font'><b>{c.nome}</b><br/></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 15}}\n                                            ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 15}}\n                                            ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 15}}\n                                            ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 15}}\n                                            ><b></b></StyledTableCell2>\n                    </TableRow> \n                </TableHead>}\n\n                {c.countrys != '' && width > 600 ?  <TableHead >\n                    <TableRow>\n                        <StyledTableCell2\n                                            id='font' ><b>{c.nome}</b><br/></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} \n                                            ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 15}}\n                                            ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 15}}\n                                            ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 15}}\n                                            ><b></b></StyledTableCell2>\n                    </TableRow> \n                </TableHead> : ''}\n\n                {c.countrys != '' && width < 600 ?  <TableHead >\n                    <TableRow>\n                        <StyledTableCell2\n                            id='font'><b>{c.nome}</b><br/></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 5}}\n                        ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 5}}\n                        ><b></b></StyledTableCell2>\n                        <StyledTableCell2 align={\"center\"} style={{width: 5}}\n                        ><b></b></StyledTableCell2>\n\n\n                    </TableRow>\n                </TableHead> : ''}\n                \n                \n             \n                <TableBody>\n                \n       \n                {j.eventos.map((live, k) => (\n                <TableRow id=\"zebra\" key={k}> \n                <td class=\"times\">  <a style={{textDecoration: 'none', color: 'black'}}\n                href={\"/#/maispre/\" + live.id + '-' + live.data}>\n                {live.casa} X {live.fora}\n                </a>\n                <p>  {((new Date(live.data).getDate() < 10\n            ? \"0\" + new Date(live.data).getDate()\n            : new Date(live.data).getDate()) +\n            \"/\" +\n            (Number(new Date(live.data).getMonth()) + 1 < 10\n                ? \"0\" +\n                (Number(new Date(live.data).getMonth()) + 1)\n                : Number(new Date(live.data).getMonth()) + 1) +\n            \"/\" +\n            new Date(live.data).getFullYear() +\n            \" \" +\n            (new Date(live.data).getHours() < 10\n                ? \"0\" + new Date(live.data).getHours()\n                : new Date(live.data).getHours()) +\n            \":\" +\n            (Number(new Date(live.data).getMinutes() + \"\") === 0\n                ? \"00\"\n                : Number(new Date(live.data).getMinutes() + \"\") >=\n                10\n                ? new Date(live.data).getMinutes() + \"\"\n                : \"0\" + (new Date(live.data).getMinutes() + \"\")))}  </p> \n                </td>\n                <td > \n                <b class=\"button\" onClick={props.onClickHandler} data-item={('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                        live.subeventos[0].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                    + live.subeventos[0].aposta + \"=\" +\n                                    (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[0].aposta + live.subeventos[0].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                    + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                        'VencedordoEncontro' + live.subeventos[0].aposta : '') + \"=\" +\n                                    (live.subeventos.length >= 3 ? (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                        ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                        live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                            (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                    ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                    : html) : html)) :\n                                    (live.subeventos[0].cotacao / 100).toFixed(2)) >\n                                    parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                        : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                            ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                            live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                                (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                        ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                        : html) : html)) :\n                                    (live.subeventos[0].cotacao / 100).toFixed(2)) : 0)\n                                    + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                    + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                    \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')}\n\n\n                                    \n                 id={(parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ?\n                (live.subeventos.length >= 3 ?\n                ('VencedordoEncontro' +\n                live.subeventos[0].aposta +\n                live.subeventos[0].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '')}> \n                <span id=\"vcasa\" data-item={('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                        live.subeventos[0].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                    + live.subeventos[0].aposta + \"=\" +\n                                    (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[0].aposta + live.subeventos[0].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                    + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                        'VencedordoEncontro' + live.subeventos[0].aposta : '') + \"=\" +\n                                    (live.subeventos.length >= 3 ? (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                        ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                        live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                            (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                    ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                    : html) : html)) :\n                                    (live.subeventos[0].cotacao / 100).toFixed(2)) >\n                                    parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                        : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                            ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                            live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                                (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                        ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                        : html) : html)) :\n                                    (live.subeventos[0].cotacao / 100).toFixed(2)) : 0)\n                                    + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                    + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                    \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')}>\n                {(parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[0].cotacao / 100) ?\n                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[0].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined &&\n                props.cotacao['Vencedor do Encontro'] < 0 ?\n                    ((live.subeventos[0].cotacao / 100) - (((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                    live.subeventos.length >= 3 && live.subeventos[0].cotacao > 0\n                    && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                        (parseFloat((live.subeventos[0].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[0].cotacao / 100)) +\n                            parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                ((live.subeventos[0].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                : html) : html)}</span>  </b></td> \n\n                <td >\n                <b class=\"button\" onClick={props.onClickHandler} data-item={('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                        live.subeventos[1].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                    + live.subeventos[1].aposta + \"=\" +\n                                    (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[1].aposta + live.subeventos[1].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                    + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                        'VencedordoEncontro' + live.subeventos[1].aposta : '') + \"=\" +\n                                    (live.subeventos.length >= 3 ? (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                        ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                        live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                            (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                    ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                    : html) : html)) :\n                                    (live.subeventos[1].cotacao / 100).toFixed(2)) >\n                                    parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                        : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                            ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                            live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                                (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                        ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                        : html) : html)) :\n                                    (live.subeventos[1].cotacao / 100).toFixed(2)) : 0)\n                                    + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                    + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                    \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')}\n\n                id={(parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ?\n                (live.subeventos.length >= 3 ?\n                ('VencedordoEncontro' +\n                live.subeventos[1].aposta +\n                live.subeventos[1].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '')}>  \n                <span id=\"vcasa\" data-item={('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                        live.subeventos[1].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                    + live.subeventos[1].aposta + \"=\" +\n                                    (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[1].aposta + live.subeventos[1].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                    + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                        'VencedordoEncontro' + live.subeventos[1].aposta : '') + \"=\" +\n                                    (live.subeventos.length >= 3 ? (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                        ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                        live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                            (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                    ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                    : html) : html)) :\n                                    (live.subeventos[1].cotacao / 100).toFixed(2)) >\n                                    parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                        : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                            ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                            live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                                (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                        ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                                        : html) : html)) :\n                                    (live.subeventos[1].cotacao / 100).toFixed(2)) : 0)\n                                    + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                    + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                    \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')}>\n                {(parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[1].cotacao / 100) ?\n                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[1].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                    ((live.subeventos[1].cotacao / 100) - (((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                    live.subeventos.length >= 3 && live.subeventos[1].cotacao > 0\n                    && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                        (parseFloat((live.subeventos[1].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[1].cotacao / 100)) +\n                            parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                ((live.subeventos[1].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                : html) : html)}</span>  </b></td>\n\n                <td > \n                <b class=\"button\" onClick={props.onClickHandler} data-item={('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                        live.subeventos[2].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                    + live.subeventos[2].aposta + \"=\" +\n                                    (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[2].aposta + live.subeventos[2].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                    + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                        'VencedordoEncontro' + live.subeventos[2].aposta : '') + \"=\" +\n                                    (live.subeventos.length >= 3 ? (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                            : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                            parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                            parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                                && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                    (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                            ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                        parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                            ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html)) :\n                                    (live.subeventos[2].cotacao / 100).toFixed(2)) >\n                                    parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                    ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                    live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                                    && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                        (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                            parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                        : html) : html)) :\n                                        (live.subeventos[2].cotacao / 100).toFixed(2)) : 0)\n                                    + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                    + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                    \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')}\n\n                 id={(parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ?\n                (live.subeventos.length >= 3 ?\n                ('VencedordoEncontro' +\n                live.subeventos[2].aposta +\n                live.subeventos[2].idOpcao + live.id).replace(/[^0-9a-z]/gi, '') : '') : '')}> \n                <span id=\"vcasa\" data-item={('Vencedor do Encontro:' + (live.subeventos.length >= 3 ?\n                                        live.subeventos[2].aposta : '') + \"=\" + \"Vencedor do Encontro--\"\n                                    + live.subeventos[2].aposta + \"=\" +\n                                    (live.subeventos.length >= 3 ? ('VencedordoEncontro' + live.subeventos[2].aposta + live.subeventos[2].idOpcao).replace(/[^0-9a-z]/gi, '') : '')\n                                    + \"=\" + live.id + \"-\" + (live.subeventos.length >= 3 ?\n                                        'VencedordoEncontro' + live.subeventos[2].aposta : '') + \"=\" +\n                                    (live.subeventos.length >= 3 ? (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                    parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                    parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                        ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                        live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                        && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                            (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                    ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                    ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                            : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                            parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                            parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                                && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                    (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                            ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                        parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                            ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                    : html) : html)) :\n                                    (live.subeventos[2].cotacao / 100).toFixed(2)) >\n                                    parseFloat(sessionStorage.getItem('cotaMax')) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) : (Number.isInteger(parseInt((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                        parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                        parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                            ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                            live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                            && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                        ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                    parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                        ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                : html) : html))) == true ? parseFloat((parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                                                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                                                parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                                                    ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                                                    live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                                                    && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                                                        (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                                                ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                                                            parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                                                ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                                                        : html) : html)) :\n                                        (live.subeventos[2].cotacao / 100).toFixed(2)) : 0)\n                                    + \"=\" + (live.casa + ' x ' + live.fora) + \"=\"\n                                    + (c.pais + ': ' + c.nome) + \"=\" + new Date(live.data) + \"=\" +\n                                    \"Aberto\" + \"=\" + 'Vencedor do Encontro' + \"=\" + live.id).replace(/'/g, '')}>\n                {(parseFloat(sessionStorage.getItem('cotaMax')) < parseFloat(live.subeventos[2].cotacao / 100) ?\n                parseFloat(sessionStorage.getItem('cotaMax')).toFixed(2) :\n                parseFloat(sessionStorage.getItem('cotaMin')) <= (live.subeventos[2].cotacao / 100) ? (props.cotacao['Vencedor do Encontro'] != undefined && props.cotacao['Vencedor do Encontro'] < 0 ?\n                    ((live.subeventos[2].cotacao / 100) - (((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) * -1)) :\n                    live.subeventos.length >= 3 && live.subeventos[2].cotacao > 0\n                    && (props.cotacao['Vencedor do Encontro'] != undefined ? props.cotacao['Vencedor do Encontro'][0] : true) == true ?\n                        (parseFloat((live.subeventos[2].cotacao / 100) > parseFloat(sessionStorage.getItem('cotaMax'))\n                                ? parseFloat(sessionStorage.getItem('cotaMax')) : (live.subeventos[2].cotacao / 100)) +\n                            parseFloat(props.cotacao['Vencedor do Encontro'] != undefined ?\n                                ((live.subeventos[2].cotacao / 100) * (props.cotacao['Vencedor do Encontro'][1] / 100)) : 0)).toFixed(2)\n                        : html) : html)}</span> </b></td> \n\n                <td id=\"ocultar\" ><a href={\"/#/maispre/\" + live.id + '-' + live.data}\n                class=\"buttonM\"><p style={{fontSize: 26}}> + </p></a></td>\n                </TableRow>))}</TableBody></Table>)))) : <h2 style={{textAlign: 'center'}}>Carregando...</h2>}\n                \n            \n            \n        </TableContainer>\n    );\n});\n\nexport default Jogos;","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport Menu from '../Menu/index';\n\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport default function Dashboard(props) {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [dateAfter, setDateAfter] = useState('');\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [count, setCount] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n    const [totalEntrada, setTotalEntrada] = useState(0);\n    const [entradasAbertas, setEntradasAbertas] = useState(0);\n    const [saidas, setSaidas] = useState(0);\n    const [comissoes, setComissoes] = useState(0);\n    const [total, setTotal] = useState(0);\n    // let dataAux = [];\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    }))(TableRow);\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n\n    const classes = useStyles();\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n\n    useEffect(() => {\n\n\n        let unmounted = false;\n\n\n\n\n        async function getLoginAPI() {\n\n            api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            setSaldoSimples(res.data.bancas.saldoSimples);\n                            setSaldoGeral(res.data.bancas.saldoGeral);\n                            setNomeBanca(res.data.bancas.nome);\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        async function getBilhetesAPI() {\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n            api.get('/api/getbilhetes/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            let total = res.data.bilhetes.totalEntrada.toFixed(2) -\n                                res.data.bilhetes.saidas.toFixed(2) -\n                                res.data.bilhetes.comissoes.toFixed(2);\n\n                            setTotalEntrada(res.data.bilhetes.totalEntrada.toFixed(2));\n                            setEntradasAbertas(res.data.bilhetes.entradasAberto.toFixed(2));\n                            setSaidas(res.data.bilhetes.saidas.toFixed(2));\n                            setComissoes(res.data.bilhetes.comissoes.toFixed(2));\n                            setTotal(res.data.bilhetes.total.toFixed(2));\n\n\n                        }\n                        document.getElementById(\"re\").style.display = \"block\";\n                        document.getElementById(\"load\").style.display = \"none\";\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n\n\n        getBilhetesAPI();\n        getLoginAPI();\n        setDataAux([])\n\n        return () => {\n            unmounted = true;\n        };\n\n\n    }, []);\n\n\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <div id=\"load\" style={{textAlign: 'center'}}>Carregando...</div>\n                                        </Paper>\n                                        <div id=\"re\">\n                                            <TableContainer component={Paper}>\n\n                                                <Table stickyHeader aria-label=\"sticky table\">\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>BANCA</b></StyledTableCell>\n                                                            <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                                ENTRADAS</b></StyledTableCell>\n                                                            <StyledTableCell align={\"center\"}><b>ENTRADAS EM\n                                                                ABERTO</b></StyledTableCell>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                            <StyledTableCell align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                        </TableRow>\n                                                    </TableHead>\n\n                                                    <TableBody>\n\n                                                        <StyledTableRow>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    {nomeBanca}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"entradas\">\n                                                                    R$ {totalEntrada}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"abertos\">\n                                                                    R$ {entradasAbertas}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"ganhos\">\n                                                                    R$ {saidas}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"comissao\">\n                                                                    R$ {comissoes}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                {total < 0 ?\n                                                                <Typography variant=\"h5\" style={{color: 'red'}}>\n                                                                    R$ {total}\n                                                                </Typography> :\n                                                                    <Typography variant=\"h5\" style={{color: 'green'}}>\n                                                                        R$ {total}\n                                                                    </Typography>}\n                                                            </StyledTableCell>\n                                                        </StyledTableRow>\n\n                                                    </TableBody>\n                                                </Table>\n                                            </TableContainer></div>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {Link, useHistory} from 'react-router-dom';\nimport {useParams} from \"react-router\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport Menu from '../Menu/index';\nimport {DataGrid, GridToolbar, ptBR} from '@mui/x-data-grid';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport CancelIcon from '@material-ui/icons/Cancel';\n\nlet tab;\nlet date = [];\nconst themeG = createTheme(\n    {\n        palette: {\n            primary: {main: '#1976d2'},\n        },\n    },\n    ptBR,\n);\n\n\nexport default function Dashboard(props) {\n\n    let history = useHistory();\n    const {window} = props;\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [openNav, setOpenNav] = useState(false);\n    const [openNavA, setOpenNavA] = useState(\"\");\n    const [ids, setIds] = useState([]);\n    const [openNavB, setOpenNavB] = useState(\"\");\n    const [bilhetes, setBilhetes] = useState(\"\");\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [dataB, setDataB] = useState([]);\n    const [comissao, setComissao] = useState([]);\n    const [dataAux, setAux] = useState([]);\n    const [count, setCount] = useState([]);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [dateAfter, setDateAfter] = useState('');\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n\n    // const columns = [\"CUPOM\", \"CLIENTE\", \"DATA\", \"SITUAÇÃO\", \"ENTRADA\", \"COMISSÕES\", \"COTAÇÃO\", \"RETORNO\",\n    //     \"TIPO\", \"APOSTA\"];\n\t\n    function setStatusBilhete(codigoBilhete) {\n        api.get('/api/getdate').then(res => {\n            let valid = true;\n            try {\n                sessionStorage.setItem('date', res.data.date);\n            api.get('/api/getjogo/' + codigoBilhete)\n            .then(res => {\n                try {                                                       \n                    if (res.data) {                                             \n                        res.data.jogo.map((b) => {\n                            let d1 = new Date(b.dataDoJogo.split(' ')[0].split('/')[1] + '/' +\n                            b.dataDoJogo.split(' ')[0].split('/')[0] + '/' +\n                            b.dataDoJogo.split(' ')[0].split('/')[2] + \" \" + b.dataDoJogo.split('  ')[1] );\n                            console.log(d1)\n\n                            let d2 = new Date(sessionStorage.getItem('date').split(' ')[0].split('/')[1] + '/' +\n                                sessionStorage.getItem('date').split(' ')[0].split('/')[0] + '/' +\n                                sessionStorage.getItem('date').split(' ')[0].split('/')[2] + \" \" +\n                                sessionStorage.getItem('date').split(' ')[1]);\n\n     \n\n                            let minutes = Math.floor((d2 - d1) / 1000 / 60);\n             \n                            if(minutes >= 0){\n                                valid = false;\n                            }\n                        });\n                        if(valid){\n                            api.put('/api/updatebilhete/' + codigoBilhete,  { status: 'Cancelado'})\n                                .then(res => {\n                                    try {                                                       \n                                        if (res.data) {                                             \n                                            history.go(0);                                      \n                                        }                                                   \n                                    } catch (e) {                                                                                                  \n\n                                    }\n                                }).catch(error => {                                     \n                                    console.log(error)\n                            }); \n                        } else {\n                            alert(\"Alguns jogos já começaram!\")\n                        }\n                                                          \n                    }                                                   \n                } catch (e) {                                                                                                  \n                    console.log(e)\n                }\n            }).catch(error => {                                     \n                console.log(error)\n        });   \n    \n            } catch (e) {\n                console.log(e);\n            }\n        }).catch(error => {\n            console.log(error)\n        });\n                                                                              \n          \n    }\n\n    let s = {'Perdeu': 'red', 'Ganhou': 'green', 'Cancelado': 'gold', 'Aberto': 'blue'}\n    const columns = [\n        {\n            field: 'Cupom', headerName: 'Cupom', width: 120, align: 'center',\n            renderCell: (params) => (<Button variant=\"contained\" color=\"primary\"\n                                             component={Link} to={'/bilhete/' + params.value}>{params.value}</Button>)\n        },\n\n        {\n            field: 'Cliente', headerName: 'Cliente', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Data', headerName: 'Data', width: 140, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Situacao', headerName: 'Situação', width: 115, align: 'center',\n            renderCell: (params) => (<Button variant=\"contained\" style={{background: s[params.value], width: 115}}>\n                <p style={{color: 'white'}}>{params.value}</p></Button>)\n        },\n\n        {\n            field: 'Entrada', headerName: 'Entrada', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Comissao', headerName: 'Comissão', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Cotacao', headerName: 'Cotação', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Retorno', headerName: 'Retorno', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Tipo', headerName: 'Tipo', width: 70, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Aposta', headerName: 'Aposta', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\t\n\t    {    \n         \n            field: 'Cancelar', headerName: 'Cancelar', width: 100, align: 'center',                                         \n            renderCell: (params) => (params.value != 0 ? <Button onClick={() => \n            setStatusBilhete(params.value)}     \n            variant=\"contained\" color=\"secondary\">                         \n                \n            <CancelIcon/></Button> : \n            <Button disabled variant=\"contained\" color=\"secondary\"> <CancelIcon/></Button>)         \n        },\n\n    ];\n\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n    const classes = useStyles();\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n\n    function custom_sort(a, b) {\n        let d1 = new Date(a.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n            a.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n            a.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + a.dataDaAposta.split(' ')[1]);\n\n        let d2 = new Date(b.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n            b.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n            b.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + b.dataDaAposta.split(' ')[1]);\n\n        return d1.getTime() - d2.getTime();\n    }\n\n\n\n\n    useEffect(() => {\n\n\n\n        let unmounted = false;\n\n\n        async function getLoginAPI() {\n\n            api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            setSaldoSimples(res.data.bancas.saldoSimples);\n                            setSaldoGeral(res.data.bancas.saldoGeral);\n                            setNomeBanca(res.data.bancas.nome);\n                            setGerenteId(res.data.bancas.gerente);\n                            setComissao(res.data.bancas.comissaoPreJogo.split(';'));\n                            setBancaId(res.data.bancas.id);\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        async function getBilhetesAPI() {\n\n            api.get('/api/getbilhetesb/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    let l = [];\n                    let ax = [];\n\n                    try {\n                        let bh = res.data.bilhetes.slice();\n                        bh.sort(custom_sort);\n                        if (res.data) {\n                            setBilhetes(res.data);\n                            bh.map((b) => {\n                                let d1 = new Date(b.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n                                    b.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n                                    b.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + b.dataDaAposta.split(' ')[1]);\n\n                                let d2 = new Date(sessionStorage.getItem('date').split(' ')[0].split('/')[1] + '/' +\n                                    sessionStorage.getItem('date').split(' ')[0].split('/')[0] + '/' +\n                                    sessionStorage.getItem('date').split(' ')[0].split('/')[2] + \" \" +\n                                    sessionStorage.getItem('date').split(' ')[1]);\n\n                                var difference = d2.getTime() - d1.getTime();\n\n\t\t\t\t                let minutes = Math.floor((d2 - d1) / 1000 / 60);\n\n\n\n                                    l.push({\n                                        id: b.id,\n                                        Banca: b.nomeBanca,\n                                        Cupom: b.codigo,\n                                        Cliente: b.nomeCliente,\n                                        Data: b.dataDaAposta,\n                                        Situacao: b.status,\n                                        Entrada: b.valorDeEntrada.toFixed(2),\n                                        Comissao: b.comissao.toFixed(2),\n                                        Cotacao: b.cotacao.toFixed(2),\n                                        Retorno: b.valorDeSaida.toFixed(2),\n                                        Tipo: b.tipoSimplesouMultiplo,\n                                        Aposta: b.tipoDeJogo,\n                                        Cancelar: minutes <= Number(sessionStorage.getItem('configTime'))\n                                        && b.tipoDeJogo != \"Ao Vivo\" ? b.codigo : 0,\n                                    });\n\n                                ax.push({\n                                    id: b.id, Cupom: b.codigo,\n                                    Banca: b.nomeBanca,\n                                    Cliente: b.nomeCliente,\n                                    Data: b.dataDaAposta,\n                                    Situacao: b.status,\n                                    Entrada: b.valorDeEntrada.toFixed(2),\n                                    Comissao: b.comissao.toFixed(2),\n                                    Cotacao: b.cotacao.toFixed(2),\n                                    Retorno: b.valorDeSaida.toFixed(2),\n                                    Tipo: b.tipoSimplesouMultiplo,\n                                    Aposta: b.tipoDeJogo,\n                                    Cancelar: minutes <= Number(sessionStorage.getItem('configTime'))\n                                    && b.tipoDeJogo != \"Ao Vivo\" ? b.codigo : 0,\n                                });\n\n                            });\n\n\n                        }\n                        l.reverse();\n                        setAux(l);\n                        setCount(ax);\n\n\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n        async function getDateAfter() {\n            api.get('/api/getdateafter').then(res => {\n\n                try {\n\n                    setDateAfter(res.data.date);\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n                console.log(error)\n            });\n        }\n\n        getDateAfter();\n\n\n        getLoginAPI();\n        getBilhetesAPI();\n\n        return () => {\n            unmounted = true;\n        };\n\n\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">BILHETES</Typography>\n\n\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <br/>\n                <ThemeProvider theme={themeG}>\n                    <div style={{height: 900, width: '100%',}}>\n                        <DataGrid\n                            components={{\n                                Toolbar: GridToolbar,\n                            }}\n                            density=\"compact\"\n                            rows={dataAux}\n                            columns={columns}\n                            pageSize={20}\n                            rowsPerPageOptions={[20]}\n                            // checkboxSelection\n                        />\n                    </div>\n                </ThemeProvider>\n\n            </main>\n\n        </div>\n\n    );\n\n}\n","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Select from '@material-ui/core/Select';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Menu from '../Menu/index';\n\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [totalEntrada, setTotalEntrada] = useState({});\n    const [totalEntradaP, setTotalEntradaP] = useState(0);\n    const [totalEntradaV, setTotalEntradaV] = useState(0);\n    const [entradasAbertas, setEntradasAbertas] = useState({});\n    const [entradasAbertasP, setEntradasAbertasP] = useState(0);\n    const [entradasAbertasV, setEntradasAbertasV] = useState(0);\n    const [saidas, setSaidas] = useState({});\n    const [saidasP, setSaidasP] = useState(0);\n    const [saidasV, setSaidasV] = useState(0);\n    const [comissoes, setComissoes] = useState({});\n    const [comissoesP, setComissoesP] = useState(0);\n    const [comissoesV, setComissoesV] = useState(0);\n    const [nomesBancas, setNomesBancas] = useState(new Set());\n    const [nomesAux, setNomeAux] = useState(new Set());\n    const [total, setTotal] = useState({});\n    const [totalP, setTotalP] = useState(0);\n    const [totalV, setTotalV] = useState(0);\n    const [dataCambista, setDataCambista] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n    const [dataAuxB, setDataAuxB] = useState([]);\n    const [balanco, setBalanco] = useState(0);\n    const [done, setDone] = useState(0);\n    const [graph, setGraph] = useState(0);\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n    const [nome, setNome] = React.useState('Todos');\n    const [openS, setOpenS] = React.useState(false);\n\n    const handleChangeS = (event) => {\n        setNome(event.target.value);\n    };\n\n    const handleCloseS = () => {\n        setOpenS(false);\n    };\n\n    const handleOpenS = () => {\n        setOpenS(true);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const relatorios = [\n        {\n            \"name\": \"Entradas\",\n            \"Pré-Jogo\": totalEntradaP,\n            \"Ao Vivo\": totalEntradaV,\n\n        },\n        {\n            \"name\": \"Entradas Abertas\",\n            \"Pré-Jogo\": entradasAbertasP,\n            \"Ao Vivo\": entradasAbertasV,\n\n        },\n        {\n            \"name\": \"Saídas\",\n            \"Pré-Jogo\": saidasP,\n            \"Ao Vivo\": saidasV,\n\n        },\n        {\n            \"name\": \"Comissões\",\n            \"Pré-Jogo\": comissoesP,\n            \"Ao Vivo\": comissoesV,\n\n        },\n        {\n            \"name\": \"Total\",\n            \"Pré-Jogo\": totalP,\n            \"Ao Vivo\": totalV,\n\n        }\n    ]\n\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    let d = [];\n    useEffect(() => {\n\n\n\n        async function getBancasAPI() {\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n            api.get('/api/getbilhetesclientescaixa2/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        let bancas = [];\n                        let entradas = 0;\n                        let abertos = 0;\n                        let ganhos = 0;\n                        let comissao = 0;\n                        let entradasV = 0;\n                        let abertosV = 0;\n                        let ganhosV = 0;\n                        let comissaoV = 0;\n                        let totalPP = 0;\n                        let totalVV = 0;\n                        let b = 0;\n                        if (res.data) {\n                            for(let b in res.data.bilhetes){\n                                bancas.push(b);\n                                nomesAux.add(b);\n                                totalEntrada[b] = res.data.bilhetes[b].totalEntrada[0]+res.data.bilhetes[b].totalEntrada[1];\n                                setTotalEntrada(totalEntrada);\n                                entradasAbertas[b] = res.data.bilhetes[b].entradasAberto[0]+res.data.bilhetes[b].entradasAberto[1];\n                                setEntradasAbertas(entradasAbertas);\n                                saidas[b] = res.data.bilhetes[b].saidas[0]+res.data.bilhetes[b].saidas[1];\n                                setSaidas(saidas);\n                                comissoes[b] = res.data.bilhetes[b].comissoes[0]+res.data.bilhetes[b].comissoes[1];\n                                setComissoes(comissoes);\n                                total[b] = res.data.bilhetes[b].total[0]+res.data.bilhetes[b].total[1];\n                                setTotal(total);\n\n                                entradas += res.data.bilhetes[b].totalEntrada[0];\n                                entradasV += res.data.bilhetes[b].totalEntrada[1];\n\n\n                                abertos += res.data.bilhetes[b].entradasAberto[0];\n                                abertosV += res.data.bilhetes[b].entradasAberto[1];\n\n                                ganhos += res.data.bilhetes[b].saidas[0];\n                                ganhosV += res.data.bilhetes[b].saidas[1];\n\n                                comissao += res.data.bilhetes[b].comissoes[0];\n                                comissaoV += res.data.bilhetes[b].comissoes[1];\n\n                                totalPP += res.data.bilhetes[b].total[0];\n                                totalVV += res.data.bilhetes[b].total[1];\n\n                                setDone((((entradas + entradasV) -\n                                    (ganhos + ganhosV) -\n                                    (comissao + comissaoV))));\n                                setTotalEntradaP(entradas);\n                                setTotalEntradaV(entradasV);\n                                setEntradasAbertasP(abertos);\n                                setEntradasAbertasV(abertosV);\n                                setSaidasP(ganhos);\n                                setSaidasV(ganhosV);\n                                setComissoesP(comissao);\n                                setComissoesV(comissaoV);\n                                setTotalEntradaP(totalPP);\n                                setTotalEntradaV(totalVV);\n\n                            }\n                            document.getElementById(\"re\").style.display = \"block\";\n                            document.getElementById(\"load\").style.display = \"none\";\n                            setNomesBancas(bancas);\n                            setNomeAux(nomesAux);\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setNomesBancas(d);\n\n        setDataCambista(d);\n        setDataAux(d);\n        getBancasAPI();\n\n\n    }, []);\n\n\n    const getDatas = () => {\n        let entradas = 0;\n        let abertos = 0;\n        let ganhos = 0;\n        let comissao = 0;\n        let entradasV = 0;\n        let abertosV = 0;\n        let ganhosV = 0;\n        let comissaoV = 0;\n        let totalPP = 0;\n        let totalVV = 0;\n        setDone(0);\n        setTotalEntradaP(entradas);\n        setTotalEntradaV(entradasV);\n        setEntradasAbertasP(abertos);\n        setEntradasAbertasV(abertosV);\n        setSaidasP(ganhos);\n        setSaidasV(ganhosV);\n        setComissoesP(comissao);\n        setComissoesV(comissaoV);\n        setTotalEntradaP(totalPP);\n        setTotalEntradaV(totalVV);\n\n        let n = '';\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n        if (new Date(auxDate1) <= new Date(auxDate2)) {\n\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n\n            api.get('/api/getbilhetesclientesdates/' + sessionStorage.getItem('login') +\n                '/' + auxDate1 + '/' + auxDate2 + '/' + nome)\n                .then(res => {\n\n                    let bancas = [];\n                    try {\n\n\n                        if (res.data) {\n\n                            for(let b in res.data.bilhetes) {\n                                bancas.push(b);\n                                nomesAux.add(b);\n                                totalEntrada[b] = res.data.bilhetes[b].totalEntrada[0]+res.data.bilhetes[b].totalEntrada[1];\n                                setTotalEntrada(totalEntrada);\n                                entradasAbertas[b] = res.data.bilhetes[b].entradasAberto[0]+res.data.bilhetes[b].entradasAberto[1];\n                                setEntradasAbertas(entradasAbertas);\n                                saidas[b] = res.data.bilhetes[b].saidas[0]+res.data.bilhetes[b].saidas[1];\n                                setSaidas(saidas);\n                                comissoes[b] = res.data.bilhetes[b].comissoes[0]+res.data.bilhetes[b].comissoes[1];\n                                setComissoes(comissoes);\n                                total[b] = res.data.bilhetes[b].total[0]+res.data.bilhetes[b].total[1];\n                                setTotal(total);\n\n                                entradas += res.data.bilhetes[b].totalEntrada[0];\n                                entradasV += res.data.bilhetes[b].totalEntrada[1];\n\n\n                                abertos += res.data.bilhetes[b].entradasAberto[0];\n                                abertosV += res.data.bilhetes[b].entradasAberto[1];\n\n                                ganhos += res.data.bilhetes[b].saidas[0];\n                                ganhosV += res.data.bilhetes[b].saidas[1];\n\n                                comissao += res.data.bilhetes[b].comissoes[0];\n                                comissaoV += res.data.bilhetes[b].comissoes[1];\n\n                                totalPP += res.data.bilhetes[b].total[0];\n                                totalVV += res.data.bilhetes[b].total[1];\n\n                                setDone((((entradas + entradasV) -\n                                    (ganhos + ganhosV) -\n                                    (comissao + comissaoV))));\n                                setTotalEntradaP(entradas);\n                                setTotalEntradaV(entradasV);\n                                setEntradasAbertasP(abertos);\n                                setEntradasAbertasV(abertosV);\n                                setSaidasP(ganhos);\n                                setSaidasV(ganhosV);\n                                setComissoesP(comissao);\n                                setComissoesV(comissaoV);\n                                setTotalEntradaP(totalPP);\n                                setTotalEntradaV(totalVV);\n                            }\n                        }\n                        document.getElementById(\"re\").style.display = \"block\";\n                        document.getElementById(\"load\").style.display = \"none\";\n                        setNomesBancas(bancas);\n                        setNomeAux(nomesAux);\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n            setNomesBancas(nomesBancas);\n            setDataAux([]);\n        }\n\n\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">RELATÓRIO</Typography>\n                                                            <Grid container justify=\"space-around\">\n\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n                                                            <FormControl className={classes.formControl}>\n                                                                <InputLabel id=\"demo-controlled-open-select-label\">Selecione\n                                                                    um Cliente</InputLabel>\n                                                                <Select\n                                                                    labelId=\"demo-controlled-open-select-label\"\n                                                                    id=\"demo-controlled-open-select\"\n                                                                    open={openS}\n                                                                    onClose={handleCloseS}\n                                                                    onOpen={handleOpenS}\n                                                                    value={nome}\n                                                                    onChange={handleChangeS}\n                                                                    style={{width: '280px'}}\n                                                                >\n                                                                    <MenuItem value=\"Todos\">\n                                                                        <em>Todos</em>\n                                                                    </MenuItem>\n                                                                    {[...nomesAux].map((n) => (\n                                                                        <MenuItem value={n}>{n}</MenuItem>\n                                                                    ))}\n\n                                                                </Select>\n                                                            </FormControl>\n                                                            <br/>\n                                                            <br/>\n                                                            <Button onClick={getDatas} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/>\n                                                            <br/>\n                                                        </Grid>\n\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n                                        <br/>\n                                        <div id=\"re\">\n                                            {done < 0 ? <Typography variant=\"h5\" align=\"center\">\n                                                Balanço: <b style={{color: 'red'}}>R$ {done.toFixed(2)}</b>\n                                            </Typography> : <Typography variant=\"h5\" align=\"center\">\n                                                Balanço: <b style={{color: 'green'}}>R$ {done.toFixed(2)}</b>\n                                            </Typography>}\n                                            <br/>\n                                            <Grid item>\n\n                                                <ResponsiveContainer width='100%' height={400}>\n                                                    <BarChart data={graph == 0 ? relatorios : graph}>\n                                                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                                                        <XAxis dataKey=\"name\"/>\n                                                        <YAxis/>\n                                                        <Tooltip/>\n                                                        <Legend/>\n                                                        <Bar dataKey=\"Pré-Jogo\" fill=\"#8884d8\"/>\n                                                        <Bar dataKey=\"Ao Vivo\" fill=\"#82ca9d\"/>\n                                                    </BarChart>\n                                                </ResponsiveContainer>\n\n                                            </Grid>\n                                            <br/>\n                                            <br/>\n                                            <Grid item>\n                                                <TableContainer component={Paper}>\n\n                                                    <Table stickyHeader aria-label=\"sticky table\">\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>BANCA</b></StyledTableCell>\n                                                                <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                                    ENTRADAS</b></StyledTableCell>\n                                                                <StyledTableCell align={\"center\"}><b>ENTRADAS EM ABERTO</b></StyledTableCell>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n\n                                                        <TableBody>\n\n                                                            {[...nomesBancas].map((banca) => (\n                                                                console.log(saidas[banca], total[banca]),\n                                                                    <StyledTableRow>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                {banca}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {totalEntrada[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {entradasAbertas[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {saidas[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {comissoes[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            {total[banca] < 0 ?\n                                                                                <Typography variant=\"h5\">\n                                                                                    <b style={{color: 'red'}}>R$\n                                                                                        -{Math.abs(total[banca]).toFixed(2)}</b>\n                                                                                </Typography> : <Typography variant=\"h5\">\n                                                                                    <b style={{color: 'green'}}>R$ {Math.abs(total[banca]).toFixed(2)}</b>\n                                                                                </Typography>}\n\n                                                                        </StyledTableCell>\n                                                                    </StyledTableRow>\n                                                            ))}\n\n\n                                                        </TableBody>\n                                                    </Table>\n                                                </TableContainer>\n                                            </Grid></div><div id=\"load\" style={{textAlign: 'center'}}>Carregando...</div>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n\n            </main>\n\n        </div>\n\n    );\n\n}","export default __webpack_public_path__ + \"static/media/football.7f8c1053.png\";","export default __webpack_public_path__ + \"static/media/football.e21f2baa.jpeg\";","export default __webpack_public_path__ + \"static/media/football2.f7763bd0.png\";","import React, { useState, useEffect } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n} from \"@material-ui/core\";\nimport Conan from './football.jpeg';\nimport Logo from './football2.png';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { api } from '../Constantes/index';\nconst CryptoJS = require('crypto-js');\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        SONHOBETS\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    opacity: 0.9,\n    backgroundImage: `url(${Conan})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    backgroundImage: `url(${Conan})`,\n    margin: theme.spacing(1),\n\n    width: theme.spacing(8),\n    height: theme.spacing(8),\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst validationSchema = yup.object({\n  user: yup\n    .string('Entre com seu usuário')\n    .required('O usuário é obrigatório'),\n  password: yup\n    .string('Entre com sua senha')\n    .required('A senha é obrigatória'),\n});\n\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  let history = useHistory();\n  const [openLoading, setOpenLoading] = React.useState(false);\n  const handleClickOpenLoading = () => {\n        setOpenLoading(true);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n  const formik = useFormik({\n\n    initialValues: {\n      user: sessionStorage.getItem(\"userBanca\") != null ? sessionStorage.getItem(\"userBanca\") : '',\n      password: sessionStorage.getItem(\"senhaBanca\") != null ?\n          JSON.parse(decryptData2(sessionStorage.getItem(\"senhaBanca\")))+\"\" : '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: (values) => {\n      handleClickOpenLoading();\n\n      api.post('/api/getloginbanca', { \"nome\": values.user, \"senha\": values.password, \n        headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Headers\": \"Origin, X-Requested-With, Content-Type, Accept, Authorization\"               \n      }})\n        .then(res => {\n  \n          try {\n            if (res.data) {\n              console.log(res.data.bancas.login);\n              sessionStorage.setItem('login', res.data.bancas.id);\n              sessionStorage.setItem('gerenteId', res.data.bancas.gerente);\n              sessionStorage.setItem('nomeBanca', res.data.bancas.login);\n\n\n              if(res.data.bancas.status == 1){\n                sessionStorage.setItem(\"senhaBanca\", encryptData2(values.password));\n                sessionStorage.setItem(\"userBanca\", values.user);\n                history.push(\"/\");\n              } else {\n                alert('Usuário não tem permissão. Fale com seu gerente!');\n                handleCloseLoading();\n              }\n              handleCloseLoading();\n              \n            }\n            handleCloseLoading();\n          } catch (e) {\n            console.log(e); \n          }\n        }).catch(error => {\n          alert('Usuário ou senha inválido!');\n          handleCloseLoading();\n          console.log(error)\n        });\n    },\n  });\n\n  function encryptData2(data) {\n    //var Key = C.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");\n    var Key = CryptoJS.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");  // 1. Replace C by CryptoJS\n    var IV = CryptoJS.enc.Utf8.parse(\"0123456789ABCDEF\");\n    var encryptedText = CryptoJS.AES.encrypt(JSON.stringify(data), Key, {\n      iv: IV,\n      mode: CryptoJS.mode.CBC,\n      padding: CryptoJS.pad.Pkcs7\n    });\n    //return encryptedText.toString(CryptoJS.format.Hex);\n    return encryptedText.toString(CryptoJS.format.Base64);                              // 2. Use Base64 instead of Hex\n  }\n\n\n  function decryptData2(encryptedData, key) {\n    var C = CryptoJS;\n    //encryptedData = C.enc.Base64.parse(encryptedData);                                // 3. Remove line\n    var Key = C.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");\n    var IV = C.enc.Utf8.parse(\"0123456789ABCDEF\");\n    //var decryptedText = C.AES.encrypt(encryptedData, Key, {\n    var decryptedText = C.AES.decrypt(encryptedData, Key, {                             // 4. Use decrypt instead of encrypt\n      iv: IV,\n      mode: C.mode.CBC,\n      padding: C.pad.Pkcs7\n    });\n    //return encryptedData.toString(CryptoJS.enc.Utf8);\n    return decryptedText.toString(CryptoJS.enc.Utf8);                                   // 5. Use decryptedText instead of encryptedData\n  }\n\n\n\n  const [login, setLogin] = useState([]);\n  const [form, setForm] = useState([]);\n\n\n  useEffect(() => {\n\n    \n\n  }, [])\n\n  localStorage.clear();\n  sessionStorage.setItem(\"cotacao\", null)\n  function gerente(){\n    history.push('/login');\n  }\n\n\n\n sessionStorage.setItem(\"time\", 1);\n function clearAll() {\n  for (var i = setTimeout(function() {}, 0); i > 0; i--) {\n    window.clearInterval(i);\n    window.clearTimeout(i);\n    if (window.cancelAnimationFrame) window.cancelAnimationFrame(i);\n  }\n}\nclearAll();\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper}  square>\n        <div className={classes.paper}>\n          <img src={Logo} width=\"150\"/>\n          <Typography variant=\"h4\" >\n          </Typography>\n\n          <form className={classes.form} onSubmit={formik.handleSubmit}>\n            <TextField\n              fullWidth\n              id=\"user\"\n              name=\"user\"\n              label=\"Banca\"\n              value={formik.values.user}\n              onChange={formik.handleChange}\n              error={formik.touched.user && Boolean(formik.errors.user)}\n              helperText={formik.touched.user && formik.errors.user}\n            />\n            <TextField\n              fullWidth\n              id=\"password\"\n              name=\"password\"\n              label=\"Senha\"\n              type=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              error={formik.touched.password && Boolean(formik.errors.password)}\n              helperText={formik.touched.password && formik.errors.password}\n\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Entrar\n            </Button>\n            <Grid container>\n              <Grid item xs>\n\n              </Grid>\n              <Grid item>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n\n          </form>\n          <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.submit}\n              onClick={gerente}\n            >\n              GERENTE\n            </Button>\n        </div>\n      </Grid>\n      <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading}\n                        onClose={handleCloseLoading}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle\n                            id=\"form-dialog-title\"\n                            style={{color: \"red\"}}\n                        ></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n                        </DialogContent>\n                        <DialogActions></DialogActions>\n                    </Dialog>\n    </Grid>\n\n  );\n}\n","export default __webpack_public_path__ + \"static/media/football.e21f2baa.jpeg\";","export default __webpack_public_path__ + \"static/media/football2.f7763bd0.png\";","// https://restcountries.eu/data/afg.svg\n// http://www.geognos.com/api/en/countries/flag/AI.png\n// https://restcountries.eu/data/bra.svg\n// https://restcountries.eu/rest/v2/all\n\nimport axios from 'axios';\n\n\nconst api = axios.create({\n    // baseURL: \"http://127.0.0.1:8000\"\n    baseURL: \"https://footballdjango.herokuapp.com\"\n});\n\napi.interceptors.request.use(async config => {\n\n\n    config.headers.Authorization = `Token 88c3f466365e3346c236c65d703892cefcadb49b`;\n\n    return config;\n});\n\n\nasync function getAdminAPI() {\n\n    api.get('/api/getadmin')\n        .then(res => {\n            try {\n                if (res.data) {\n                    // console.log(res.data);\n                    sessionStorage.setItem('limiteApostaGeral', res.data.admin[0].limiteApostaGeral);\n                    sessionStorage.setItem('limiteApostaSimples', res.data.admin[0].limiteApostaSimples);\n                    sessionStorage.setItem('configTime', res.data.admin[0].configTime);\n\n                }\n            } catch (e) {\n\n            }\n        }).catch(error => {\n        console.log(error)\n    });\n\n}\n\ngetAdminAPI();\n\nasync function getDateAll() {\n    api.get('/api/getdate').then(res => {\n\n        try {\n\n            sessionStorage.setItem('date', res.data.date);\n\n        } catch (e) {\n            console.log(e);\n        }\n    }).catch(error => {\n        console.log(error)\n    });\n}\n\ngetDateAll();\n\n\nexport {api};\n","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Conan from './football.jpeg';\nimport Logo from './football2.png';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {useHistory} from \"react-router-dom\";\nimport {api} from '../Constantes/index';\nimport CryptoJS from \"crypto-js\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                SONHOBETS\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        opacity: 0.9,\n        backgroundImage: `url(${Conan})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        backgroundImage: `url(${Conan})`,\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        width: theme.spacing(8),\n        height: theme.spacing(8),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = yup.object({\n    user: yup\n        .string('Entre com seu usuário')\n        .required('O usuário é obrigatório'),\n    password: yup\n        .string('Entre com sua senha')\n        .required('A senha é obrigatória'),\n});\n\n\nexport default function SignInSideManage() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            user: sessionStorage.getItem(\"userGerente\") != null ? sessionStorage.getItem(\"userGerente\") : '',\n            password: sessionStorage.getItem(\"senhaGerente\") != null ?\n                JSON.parse(decryptData2(sessionStorage.getItem(\"senhaGerente\"))) + \"\" : '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n\n\n            api.post('/api/getlogingerencia', {\"nome\": values.user, \"senha\": values.password})\n                .then(res => {\n\n                    try {\n                        if (res.data) {\n                            console.log(res.data);\n                            sessionStorage.setItem('manage', res.data.gerencias.id);\n                            sessionStorage.setItem('nomeGerente', res.data.gerencias.nome);\n                            sessionStorage.setItem(\"senhaGerente\", encryptData2(values.password));\n                            sessionStorage.setItem(\"userGerente\", values.user);\n\n                            history.push(\"/gerente\");\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                alert('Usuário ou senha inválido!');\n                console.log(error)\n            });\n        },\n    });\n\n    function encryptData2(data) {\n        //var Key = C.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");\n        var Key = CryptoJS.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");  // 1. Replace C by CryptoJS\n        var IV = CryptoJS.enc.Utf8.parse(\"0123456789ABCDEF\");\n        var encryptedText = CryptoJS.AES.encrypt(JSON.stringify(data), Key, {\n            iv: IV,\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        //return encryptedText.toString(CryptoJS.format.Hex);\n        return encryptedText.toString(CryptoJS.format.Base64);                              // 2. Use Base64 instead of Hex\n    }\n\n\n    function decryptData2(encryptedData, key) {\n        var C = CryptoJS;\n        //encryptedData = C.enc.Base64.parse(encryptedData);                                // 3. Remove line\n        var Key = C.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");\n        var IV = C.enc.Utf8.parse(\"0123456789ABCDEF\");\n        //var decryptedText = C.AES.encrypt(encryptedData, Key, {\n        var decryptedText = C.AES.decrypt(encryptedData, Key, {                             // 4. Use decrypt instead of encrypt\n            iv: IV,\n            mode: C.mode.CBC,\n            padding: C.pad.Pkcs7\n        });\n        //return encryptedData.toString(CryptoJS.enc.Utf8);\n        return decryptedText.toString(CryptoJS.enc.Utf8);                                   // 5. Use decryptedText instead of encryptedData\n    }\n\n    const [login, setLogin] = useState([]);\n    const [form, setForm] = useState([]);\n\n\n    useEffect(() => {\n\n\n    }, [])\n\n    function banca() {\n        history.push('/');\n    }\n\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline/>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <img src={Logo} width=\"150\"/>\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <TextField\n                            fullWidth\n                            id=\"user\"\n                            name=\"user\"\n                            label=\"Gerente\"\n                            value={formik.values.user}\n                            onChange={formik.handleChange}\n                            error={formik.touched.user && Boolean(formik.errors.user)}\n                            helperText={formik.touched.user && formik.errors.user}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Senha\"\n                            type=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Entrar\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n\n                            </Grid>\n                            <Grid item>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n\n                </div>\n            </Grid>\n        </Grid>\n    );\n}","export default __webpack_public_path__ + \"static/media/football.f7763bd0.png\";","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Conan from './football.png';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {useHistory} from \"react-router-dom\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {api} from '../Constantes/index';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                XBETS198\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        opacity: 0.2,\n        backgroundImage: `url(${Conan})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        backgroundImage: `url(${Conan})`,\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        width: theme.spacing(8),\n        height: theme.spacing(8),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = yup.object({\n    password1: yup\n        .string('Entre com seu usuário')\n        .required('A nova senha é obrigatória'),\n    password2: yup\n        .string('Entre com sua senha')\n        .required('A nova senha é obrigatória')\n        .oneOf([yup.ref('password1'), null], 'As senhas estão diferentes'),\n\n});\n\n\nexport default function SignInSide() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.put('/api/updatebancasenha/' + sessionStorage.getItem('login'),\n                {\"senha\": values.password1})\n                .then(res => {\n\n                    try {\n                        if (res.data) {\n                            console.log(res.data);\n\n\n                            history.push(\"/inicio\")\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n\n    function init() {\n        history.push('/inicio');\n    }\n\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline/>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <Button onClick={init}><ArrowBackIcon/> INÍCIO</Button>\n                <div className={classes.paper}>\n                    <img src={Conan} width=\"150\"/>\n                    <Typography variant=\"h4\">\n                        <b style={{textShadow: '5px 2px 2px black', color: '#428bca'}}>NOVA SENHA</b>\n                    </Typography>\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <TextField\n                            fullWidth\n                            id=\"password1\"\n                            name=\"password1\"\n                            label=\"Nova Senha (Banca)\"\n                            type=\"password\"\n                            value={formik.values.user}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                            helperText={formik.touched.password1 && formik.errors.password1}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"password2\"\n                            name=\"password2\"\n                            label=\"Digite Novamente (Banca)\"\n                            type=\"password\"\n                            value={formik.values.password2}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                            helperText={formik.touched.password2 && formik.errors.password2}\n\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Atualizar\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n\n                            </Grid>\n                            <Grid item>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\n","export default __webpack_public_path__ + \"static/media/football.f7763bd0.png\";","import {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport clsx from 'clsx';\nimport PersonIcon from '@material-ui/icons/Person';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport football from \"./football.png\";\n\nexport default function Menu(props) {\n\n    let history = useHistory();\n    const theme = useTheme();\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        }, nested: {\n            paddingLeft: theme.spacing(4),\n        }, toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        }, toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px', ...theme.mixins.toolbar,\n        }, appBar: {\n            zIndex: theme.zIndex.drawer + 1, transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp, duration: theme.transitions.duration.leavingScreen,\n            }),\n        }, appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp, duration: theme.transitions.duration.enteringScreen,\n            }),\n        }, menuButton: {\n            marginRight: 36,\n        }, menuButtonHidden: {\n            display: 'none',\n        }, title: {\n            flexGrow: 1, marginLeft: '-30px'\n        }, drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp, duration: theme.transitions.duration.enteringScreen,\n            }),\n        }, drawerPaperClose: {\n            overflowX: 'hidden', transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp, duration: theme.transitions.duration.leavingScreen,\n            }), width: theme.spacing(7), [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        }, appBarSpacer: theme.mixins.toolbar, content: {\n            flexGrow: 1, overflow: 'auto',\n        }, container: {\n            paddingTop: theme.spacing(4), paddingBottom: theme.spacing(4),\n\n        }, paper: {\n            padding: theme.spacing(1), display: 'flex', overflow: 'auto', flexDirection: 'column',\n        }, fixedHeight: {\n            height: 240,\n        }, button: {\n            width: 10,\n        }, drawer: {\n            display: 'none', flexShrink: 0,\n        }\n    }));\n\n    const classes = useStyles();\n\n\n    function exit() {\n        sessionStorage.removeItem('manage');\n        history.push('/login');\n    }\n\n\n    return (<div><AppBar position=\"fixed\" id={\"appbar\"} className={clsx(classes.appBar)}>\n            <Toolbar className={classes.toolbar}>\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerToggle}\n                    className={clsx(classes.menuButton, false && classes.menuButtonHidden)}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" className={classes.title}\n                            onClick={handleDrawerToggle} style={{cursor: 'pointer'}}>\n                    <b>SONHOBETS</b>\n                </Typography>\n\n                <Typography component=\"h4\" color=\"inherit\" display=\"inline\" style={{marginRight: '-10px'}}>\n                    {sessionStorage.getItem('nomeGerente')} <br/>\n                </Typography>\n\n\n            </Toolbar>\n        </AppBar>\n            <Drawer\n                variant=\"temporary\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                    keepMounted: true, // Better open performance on mobile.\n                }}\n            >\n\n                <List>\n                    <ListItem alignItems={\"center\"}>\n                        <ListItemIcon>\n                            <img src={football} width={160}\n                                 align=\"center\"\n                            />\n                        </ListItemIcon>\n                    </ListItem>\n                    <Divider/>\n                    <ListItem button component={Link} to={'/gerente'}>\n                        <ListItemIcon>\n                            <HomeIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Início\"/>\n                    </ListItem>\n\n                    <ListItem button component={Link} to={'/caixagerente'}>\n                        <ListItemIcon>\n                            <InboxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Caixa\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/caixagerentecambistas'}>\n                        <ListItemIcon>\n                            <InboxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Caixa Cambistas\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/relatorios'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Relatório\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/bilhetesgerente'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Bilhetes\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/clientesgerente'}>\n                        <ListItemIcon>\n                            <PersonIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Clientes\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/bilhetegerente/all'}>\n                        <ListItemIcon>\n                            <DescriptionIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Conferir Bilhetes\"/>\n                    </ListItem>\n                </List>\n\n                <Divider/>\n\n                <List>\n                    <ListItem button component={Link} to={\"/novasenhagerente\"}>\n                        <ListItemIcon>\n                            <VpnKeyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Alterar Senha\"/>\n                    </ListItem>\n                    <ListItem button onClick={exit}>\n                        <ListItemIcon>\n                            <ExitToAppIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Sair\"/>\n                    </ListItem>\n\n                </List>\n\n            </Drawer></div>\n\n    );\n}\n","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {Link, useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport {api} from '../Constantes/index';\nimport Menu from '../Menu/index';\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [dataAux, setDataAux] = useState([]);\n    const [day, setDay] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n    const options = {\n        rowsPerPage: 50,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: false,\n        onRowClick: (rowData, rowMeta) => {\n            const dataToState = rowData;\n        }\n    };\n\n\n    const columns = [\"NOME\", \"LIMITE GERAL\", \"LIMITE SIMPLES\", \"COMISSÕES PRÉ-JOGO\", \"COMISSÕES AO VIVO\",\n        \"APOSTAS\", \"STATUS\", \"PRÉ-JOGO\", \"AO VIVO\", \"EDITAR\"];\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    clearInterval(Number(sessionStorage.getItem(\"idMaisAovivo\")));\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('manage') == null || sessionStorage.getItem('manage') == \"\") {\n            history.push('/login')\n        }\n\n\n        async function getBancasAPI() {\n\n            api.get('/api/getbancas/' + sessionStorage.getItem('manage'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n\n                            res.data.bancas.map((b) => {\n                                dataAux.push([\n                                    b.nome,\n                                    'R$ ' + (b.saldoGeral).toFixed(2),\n                                    'R$ ' + (b.saldoSimples).toFixed(2),\n                                    b.comissaoPreJogo,\n                                    b.comissaoAoVivo,\n                                    b.ativarApostas == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarAtivarApostas(b.id, b.ativarApostas)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarAtivarApostas(b.id, b.ativarApostas)}><CancelIcon/></Button>,\n                                    b.status == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarStatus(b.id, b.status)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarStatus(b.id, b.status)}><CancelIcon/></Button>,\n                                    b.ativarApostasPreJogo == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarAtivarApostasPreJogo(b.id, b.ativarApostasPreJogo)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarAtivarApostasPreJogo(b.id, b.ativarApostasPreJogo)}><CancelIcon/></Button>,\n                                    b.ativarApostasAoVivos == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarApostasAoVivo(b.id, b.ativarApostasAoVivos)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarApostasAoVivo(b.id, b.ativarApostasAoVivos)}><CancelIcon/></Button>,\n                                    <Button variant=\"outlined\" style={{color: 'blue', borderColor: 'blue'}}\n                                            component={Link}\n                                            to={'/editcambistagerente/' + b.id}><EditIcon/></Button>,]);\n                            })\n                            setDataAux(dataAux);\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setDataAux(d);\n        getBancasAPI();\n\n\n    }, []);\n\n    function atualizarApostasAoVivo(id, apostasAoVivo) {\n        if (apostasAoVivo) {\n            apostasAoVivo = false;\n        } else {\n            apostasAoVivo = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"ativarApostasAoVivos\": apostasAoVivo,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarAtivarApostasPreJogo(id, ativarApostasPreJogo) {\n        if (ativarApostasPreJogo) {\n            ativarApostasPreJogo = false;\n        } else {\n            ativarApostasPreJogo = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"ativarApostasPreJogo\": ativarApostasPreJogo,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarAtivarApostas(id, ativarApostas) {\n        if (ativarApostas) {\n            ativarApostas = false;\n        } else {\n            ativarApostas = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"ativarApostas\": ativarApostas,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarStatus(id, status) {\n        if (status) {\n            status = false;\n        } else {\n            status = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"status\": status,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n\n    const fixedHeightPaper = clsx(classes.paper);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n\n            <Menu/>\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    {dataAux.length > 0 ?\n                        <React.Fragment>\n                            <MUIDataTable\n                                title={<Grid container direction={'row'}>\n\n                                    <br/>\n                                    <Grid item style={{paddingLeft: '10px'}}></Grid>\n                                    <Grid item>\n                                        <Button variant=\"contained\" color=\"primary\" component={Link}\n                                                to={'/cadcambistagerente'}>\n                                            CADASTRAR CAMBISTA\n                                        </Button>\n                                    </Grid>\n                                </Grid>}\n                                data={dataAux}\n                                columns={columns}\n                                options={options}\n\n                            />\n                        </React.Fragment> : <Typography component=\"h4\" color=\"inherit\" align=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" component={Link} to={'/cadcambistagerente'}>\n                                    CADASTRAR CAMBISTA\n                                </Button>\n                            </Grid>\n                            <Grid item style={{marginBottom: '10px'}}></Grid>\n                            Nenhum Cambista Cadastrado!\n                        </Typography>}\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport Menu from '../Menu/index';\n\n\nlet tab;\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [dataAux, setDataAux] = useState([]);\n    const [totalEntrada, setTotalEntrada] = useState({});\n    const [entradasAbertas, setEntradasAbertas] = useState({});\n    const [saidas, setSaidas] = useState({});\n    const [comissoes, setComissoes] = useState({});\n    const [total, setTotal] = useState({});\n\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    }))(TableRow);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n\n    const classes = useStyles();\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n\n\n\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('manage') == null || sessionStorage.getItem('manage') == \"\") {\n            history.push('/login')\n        }\n\n        let unmounted = false;\n\n\n        async function getBancasAPI() {\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n            api.get('/api/getbilhetesgerente/' + sessionStorage.getItem('manage'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            let total = (res.data.bilhetes.totalEntrada.toFixed(2) -\n                                res.data.bilhetes.saidas.toFixed(2) -\n                                res.data.bilhetes.comissoes.toFixed(2));\n\n                            document.getElementById('entradas').innerText = 'R$ ' +\n                                res.data.bilhetes.totalEntrada.toFixed(2);\n                            document.getElementById('abertos').innerText = 'R$ ' +\n                                res.data.bilhetes.entradasAberto.toFixed(2);\n                            document.getElementById('ganhos').innerText = 'R$ ' +\n                                res.data.bilhetes.saidas.toFixed(2);\n                            document.getElementById('comissao').innerText = 'R$ ' +\n                                res.data.bilhetes.comissoes.toFixed(2);\n\n                            if(total >= 0){\n                                document.getElementById('total').innerHTML = '<b style=\"color: green\">R$ ' +\n                                    res.data.bilhetes.total.toFixed(2) + '</b>';\n                            } else {\n                                document.getElementById('total').innerHTML = '<b style=\"color: red\">R$ ' +\n                                    res.data.bilhetes.total.toFixed(2) + '</b>';\n                            }\n\n\n\n                        }\n                        document.getElementById(\"re\").style.display = \"block\";\n                        document.getElementById(\"load\").style.display = \"none\";\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setDataAux(d);\n        getBancasAPI();\n\n\n        return () => {\n            unmounted = true;\n        };\n\n\n    }, []);\n\n    return (\n        <div className={classes.root} >\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n\n\n\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <div id=\"load\" style={{textAlign: 'center'}}>Carregando...</div>\n                                        </Paper>\n                                        <div id=\"re\">\n                                        <TableContainer component={Paper}>\n\n                                            <Table stickyHeader aria-label=\"sticky table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <StyledTableCell\n                                                            align={\"center\"}><b>GERENCIA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                            ENTRADAS</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>ENTRADAS EM\n                                                            ABERTO</b></StyledTableCell>\n                                                        <StyledTableCell\n                                                            align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                        <StyledTableCell\n                                                            align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                    </TableRow>\n                                                </TableHead>\n\n                                                <TableBody>\n\n                                                    <StyledTableRow>\n                                                        <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                            <Typography variant=\"h5\">\n                                                                {sessionStorage.getItem('nomeGerente')}\n                                                            </Typography>\n                                                        </StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                            <Typography variant=\"h5\" id=\"entradas\">\n\n                                                            </Typography>\n                                                        </StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                            <Typography variant=\"h5\" id=\"abertos\">\n\n                                                            </Typography>\n                                                        </StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                            <Typography variant=\"h5\" id=\"ganhos\">\n\n                                                            </Typography>\n                                                        </StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                            <Typography variant=\"h5\" id=\"comissao\">\n\n                                                            </Typography>\n                                                        </StyledTableCell>\n                                                        <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                            <Typography variant=\"h5\" id=\"total\">\n                                                            </Typography>\n                                                        </StyledTableCell>\n                                                    </StyledTableRow>\n\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer></div>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {Link, useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport {DataGrid, GridToolbar, ptBR} from '@mui/x-data-grid';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport Menu from '../Menu/index';\n\nconst themeG = createTheme(\n    {\n        palette: {\n            primary: {main: '#1976d2'},\n        },\n    },\n    ptBR,\n);\n\n\nexport default function Dashboard(props) {\n\n    let history = useHistory();\n    const {window} = props;\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [dic, setDic] = useState({});\n    const [bilhetes, setBilhetes] = useState(\"\");\n    const [dataAux, setAux] = useState([]);\n    const [count, setCount] = useState([]);\n    const [dateAfter, setDateAfter] = useState('');\n\n\n    let s = {'Perdeu': 'red', 'Ganhou': 'green', 'Cancelado': 'gold', 'Aberto': 'blue'}\n    const columns = [\n        {\n            field: 'Banca', headerName: 'Banca', width: 150, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Cupom', headerName: 'Cupom', width: 120, align: 'center',\n            renderCell: (params) => (<Button variant=\"contained\" color=\"primary\"\n                                             component={Link}\n                                             to={'/bilhetegerente/' + params.value}>{params.value}</Button>)\n        },\n\n        {\n            field: 'Cliente', headerName: 'Cliente', width: 120, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Data', headerName: 'Data', width: 140, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Situacao', headerName: 'Situação', width: 115, align: 'center',\n            renderCell: (params) => (<Button variant=\"contained\" style={{background: s[params.value], width: 115}}>\n                <p style={{color: 'white'}}>{params.value}</p></Button>)\n        },\n\n        {\n            field: 'Entrada', headerName: 'Entrada', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Comissao', headerName: 'Comissão', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Cotacao', headerName: 'Cotação', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Retorno', headerName: 'Retorno', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Tipo', headerName: 'Tipo', width: 60, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Aposta', headerName: 'Aposta', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Cancelar', headerName: 'Cancelar', width: 100, align: 'center',\n            renderCell: (params) => (params.value != 0 ? <Button onClick={() =>\n                setStatusBilhete(params.value)}\n                                                                 variant=\"contained\" color=\"secondary\">\n                <CancelIcon/></Button> : <Button disabled\n                                                 variant=\"contained\" color=\"secondary\"> <CancelIcon/></Button>)\n        },\n\n    ];\n\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    function setStatusBilhete(codigoBilhete) {\n\n        api.put('/api/updatebilhete/' + codigoBilhete, {status: 'Cancelado'})\n            .then(res => {\n                try {\n                    if (res.data) {\n                        history.go(0);\n                    }\n                } catch (e) {\n\n                }\n            }).catch(error => {\n            console.log(error)\n        });\n\n    }\n\n\n    const onClickHandler = () => {\n        let listAux = [];\n        let init = 0;\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n\n        console.log(dataAux.length, count.length);\n        for (let datas of dataAux) {\n\n            let d = datas['Data'].split(' ')[0].split('/');\n            d.reverse();\n\n            let dateReverse = new Date(d.join('-'));\n\n            console.log(dateReverse >= new Date(auxDate1) && dateReverse <= new Date(auxDate2));\n            if (dateReverse >= new Date(auxDate1) && dateReverse <= new Date(auxDate2)) {\n                listAux.push(datas);\n                init = 1;\n            }\n        }\n\n        if (init == 0) {\n            setAux(dataAux);\n        } else {\n            setAux(listAux);\n        }\n        if (dataAux.length != count.length) {\n            setAux(count);\n        }\n\n    };\n\n    function custom_sort(a, b) {\n        let d1 = new Date(a.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n            a.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n            a.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + a.dataDaAposta.split(' ')[1]);\n\n        let d2 = new Date(b.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n            b.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n            b.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + b.dataDaAposta.split(' ')[1]);\n\n        return d1.getTime() - d2.getTime();\n    }\n\n    useEffect(() => {\n\n\n        async function getBilhetesAPI() {\n\n            api.get('/api/getbilhetesgerenteb/' + sessionStorage.getItem('manage'))\n                .then(res => {\n                    let l = [];\n                    let ax = [];\n                    try {\n                        let bh = res.data.bilhetes.slice();\n                        bh.sort(custom_sort);\n                        if (res.data) {\n                            setBilhetes(res.data);\n                            bh.map((b) => {\n                                let d1 = new Date(b.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n                                    b.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n                                    b.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + b.dataDaAposta.split(' ')[1]);\n\n                                let d2 = new Date(sessionStorage.getItem('date').split(' ')[0].split('/')[1] + '/' +\n                                    sessionStorage.getItem('date').split(' ')[0].split('/')[0] + '/' +\n                                    sessionStorage.getItem('date').split(' ')[0].split('/')[2] + \" \" +\n                                    sessionStorage.getItem('date').split(' ')[1]);\n\n                                var difference = d2.getTime() - d1.getTime();\n\n\n                                let minutes = Math.floor((d2 - d1) / 1000 / 60);\n                                let days = difference / (1000 * 3600 * 24);\n\n                                if (days <= 15) {\n\n                                    l.push({\n                                        id: b.id,\n                                        Banca: b.nomeBanca,\n                                        Cupom: b.codigo,\n                                        Cliente: b.nomeCliente,\n                                        Data: b.dataDaAposta,\n                                        Situacao: b.status,\n                                        Entrada: b.valorDeEntrada.toFixed(2),\n                                        Comissao: b.comissao.toFixed(2),\n                                        Cotacao: b.cotacao.toFixed(2),\n                                        Retorno: b.valorDeSaida.toFixed(2),\n                                        Tipo: b.tipoSimplesouMultiplo,\n                                        Aposta: b.tipoDeJogo,\n                                        Cancelar:\n                                            minutes <= Number(sessionStorage.getItem('configTime'))\n                                            && b.tipoDeJogo != \"Ao Vivo\" ? b.codigo : 0,\n                                    });\n                                }\n                                ax.push({\n                                    id: b.id, Cupom: b.codigo,\n                                    Banca: b.nomeBanca,\n                                    Cliente: b.nomeCliente,\n                                    Data: b.dataDaAposta,\n                                    Situacao: b.status,\n                                    Entrada: b.valorDeEntrada.toFixed(2),\n                                    Comissao: b.comissao.toFixed(2),\n                                    Cotacao: b.cotacao.toFixed(2),\n                                    Retorno: b.valorDeSaida.toFixed(2),\n                                    Tipo: b.tipoSimplesouMultiplo,\n                                    Aposta: b.tipoDeJogo,\n                                    Cancelar:\n                                        minutes <= Number(sessionStorage.getItem('configTime')) &&\n                                        b.tipoDeJogo != \"Ao Vivo\" ? b.codigo : 0,\n                                });\n\n                            });\n\n\n                        }\n                        l.reverse();\n                        setAux(l);\n                        setCount(ax);\n\n\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n        async function getDateAfter() {\n            api.get('/api/getdateafter').then(res => {\n\n                try {\n\n                    setDateAfter(res.data.date);\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n                console.log(error)\n            });\n        }\n\n        getDateAfter();\n\n        getBilhetesAPI();\n\n    }, []);\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">BILHETES</Typography>\n                                                            <Grid container justify=\"space-around\">\n\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n\n                                                            <br/>\n                                                            <Button onClick={onClickHandler} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/><br/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <br/>\n                <ThemeProvider theme={themeG}>\n                    <div style={{height: 900, width: '100%',}}>\n                        <DataGrid\n                            components={{\n                                Toolbar: GridToolbar,\n                            }}\n                            density=\"compact\"\n                            rows={dataAux}\n                            columns={columns}\n                            pageSize={20}\n                            rowsPerPageOptions={[20]}\n                            // checkboxSelection\n                        />\n                    </div>\n                </ThemeProvider>\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useRef, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from \"react-router\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport {api} from '../Constantes/index';\nimport PrintIcon from '@material-ui/icons/Print';\nimport {useReactToPrint} from \"react-to-print\";\nimport TextField from '@material-ui/core/TextField';\nimport Menu from '../Menu/index';\n\n\nexport default function Dashboard(props) {\n\n    let history = useHistory();\n    let {codigoBilhete} = useParams();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [dataAux, setAux] = useState([]);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n    const [bilhetes, setBilhetes] = useState(\"\");\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [comissao, setComissao] = useState([]);\n    const [codigoB, setCodigo] = useState(codigoBilhete);\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [statusB, setStatusB] = useState([]);\n    const [impressao, setImpressao] = useState([]);\n\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    function print() {\n        if (impressao == 1) {\n            handlePrint();\n        } else {\n            alert('Sem permissão para imprimir. Fale com seu gerente!');\n        }\n    }\n\n    function getCodigo(e) {\n        document.getElementById('header').innerHTML = '';\n        document.getElementById('bilhete').innerHTML = '';\n        document.getElementById('footer').innerHTML = '';\n        bilhete(e.target.value);\n        setCodigo(e.target.value);\n    }\n\n    function custom_sort(a, b) {\n        let d1 = new Date(a.dataDoJogo.split(' ')[0].split('/')[2] + '/' +\n            a.dataDoJogo.split(' ')[0].split('/')[1] + '/' +\n            a.dataDoJogo.split(' ')[0].split('/')[0] + \" \" + a.dataDoJogo.split(' ')[2]);\n\n        let d2 = new Date(b.dataDoJogo.split(' ')[0].split('/')[2] + '/' +\n            b.dataDoJogo.split(' ')[0].split('/')[1] + '/' +\n            b.dataDoJogo.split(' ')[0].split('/')[0] + \" \" + b.dataDoJogo.split(' ')[2]);\n\n        return Date.parse(d1) - Date.parse(d2);\n    }\n\n    let nb = 0;\n\n    function bilhete(codigo) {\n        document.getElementById('status').innerHTML = '';\n        try {\n            api.get('/api/getbilhete/' + codigo)\n                .then(res => {\n                    let l = [];\n                    try {\n                        if (res.data) {\n                            setBilhetes(res.data);\n\n                            document.getElementById('header').innerHTML = '\\n' +\n                                '                    <div >\\n' +\n                                '\\n' +\n                                '                        <center><h2 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\">SONHOBETS</h2></center>\\n' +\n                                '\\n' +\n                                '\\n' +\n                                '                        <hr style=\"width: 100%;border: 0;border-bottom: 2px dashed #292323;\">\\n' +\n                                '\\n' +\n                                '                        <center><h4 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\" class=\"H3\">' + (res.data.bilhete[0].tipoSimplesouMultiplo == 'M' ? 'Aposta Multipla' : 'Aposta Simples') + '</h4></center>\\n' +\n                                '\\n' +\n                                '                        <span style=\"display: inline-block; text-align: left;\">DATA:</span> <span id=\"conteudo_txtDataBilhete\" style=\"display: inline-block\"> ' + res.data.bilhete[0].dataDaAposta + '</span><br>\\n' +\n                                '\\n' +\n                                '                        <span style=\"display: inline-block\">COLABORADOR:</span> <span style=\"display: inline-block\">' + res.data.bilhete[0].nomeBanca + '</span><br>\\n' +\n                                '\\n' +\n                                '                        <span style=\"display: inline-block\">CLIENTE:</span> <span style=\"display: inline-block\">' + res.data.bilhete[0].nomeCliente + '</span><br>\\n' +\n                                '\\n' +\n                                '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                '\\n' +\n                                '                        <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">APOSTA</span></div>\\n' +\n                                '\\n' +\n                                '                        <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">COTAÇÃO</span></div>\\n' +\n                                '\\n' +\n                                '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                '\\n';\n                        }\n                        setAux(l);\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n            let b = 0;\n\n            api.get('/api/getjogo/' + codigo)\n                .then(res => {\n\n                    try {\n\n                        if (res.data) {\n                            let jg = res.data.jogo.slice();\n                            jg.sort(custom_sort);\n                            jg.map((jogo) => {\n                                nb = jogo.length;\n                                statusB.push(jogo.status);\n\n\n                                document.getElementById('bilhete').innerHTML +=\n                                    '<div id=\"conteudo_divBilheteImpressao\">\\n' +\n                                    '<div>\\n' +\n                                    '\\n' +\n                                    '                                    <b><span>Futebol - ' + jogo.dataDoJogo + '</span></b><br>\\n' +\n                                    '\\n' +\n                                    '                                    <span>' + jogo.nomeDoCampeonato + '</span><br>\\n' +\n                                    '\\n' +\n                                    '                                    <span>' + jogo.nomeDosTimes + '</span><br>\\n' +\n                                    '\\n' +\n                                    '                                    <b><span>' + jogo.tipoDeCotacao.split('--')[0] + '</span></b><br>\\n' +\n                                    '\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">' + jogo.tipoDeCotacao.split('--')[1] + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + jogo.cotacao.toFixed(2) + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Status:</span></div>\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + jogo.status + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                                    <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                    '\\n' +\n                                    '                                </div>\\n'\n                            });\n\n\n                            document.getElementById('status').innerHTML = statusB.indexOf('Perdeu') != -1 ?\n                                \"<b style='color: white' class='buttonRed'>Perdeu</b>\" : (statusB.indexOf('Aberto') != -1 ?\n                                    \"<b style='color: white' class='buttonBlue'>Aberto</b>\" : (statusB.filter((x) => x == 'Ganhou' || x == 'Cancelado').length) == statusB.length ?\n                                        (statusB.filter((x) => x == 'Cancelado').length) == statusB.length ?\n                                            \"<b style='color: white;' class='buttonGold'>Cancelado</b>\" : \"<b style='color: white' class='buttonGreen'>Ganhou</b>\" : \"<b style='color: white' class='buttonGold'>Cancelado</b>\");\n\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n            try {\n\n                api.get('/api/getbilhete/' + codigo)\n                    .then(res => {\n                        try {\n                            if (res.data) {\n                                document.getElementById('footer').innerHTML = '                            \\n' +\n                                    '                                \\n' +\n                                    '                            \\n' +\n                                    '\\n' +\n                                    '                        <div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Quantidade de Jogos:</span></div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + res.data.bilhete[0].quantidadeJogos + '</span></div>\\n' +\n                                    '                            \\n' +\n                                    '                            <div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Cotação:</span></div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span  style=\"display: inline-block\">R$ ' + res.data.bilhete[0].cotacao.toFixed(2) + '</span></div>\\n' +\n                                    '\\t\\t\\t\\t\\t\\t\\t</div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Total Apostado:</span></div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span id=\"conteudo_txtTotalApostado\" style=\"display: inline-block\">R$ ' + res.data.bilhete[0].valorDeEntrada.toFixed(2) + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Possível Retorno:</span></div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">R$ ' + res.data.bilhete[0].valorDeSaida.toFixed(2) + '</span></div>\\n' +\n                                    '                            \\n' +\n                                    '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                    '                        </div>\\n' +\n                                    '\\n' +\n                                    '                        <div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 100%; text-align: center;\"><span style=\"display: inline-block\">BILHETE</span></div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 100%; text-align: center;\">\\n' +\n                                    '                                <h2 style=\"font-weight:bold\" class=\"H3\">' + codigo + '</h2>                  \\n' +\n                                    '                            </div>\\n' +\n                                    '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                    '                        </div>\\n' +\n                                    '\\n' +\n                                    '                        \\n' +\n                                    '\\n' +\n                                    '                        <div>\\n' +\n                                    '                            <span>Ao realizar apostas na SONHOBETS, você concorda com todos os termos e regras do site. Boa Sorte!</span>\\n' +\n                                    '                        </div>\\n' +\n                                    '\\n' +\n                                    '                    </div>\\n' +\n                                    '                </div>';\n                            }\n                        } catch (e) {\n\n                        }\n                    }).catch(error => {\n                    console.log(error);\n                });\n\n\n            } catch (e) {\n            }\n        } catch (e) {\n            document.getElementById('header').innerHTML = '';\n            document.getElementById('bilhete').innerHTML = '';\n            document.getElementById('footer').innerHTML = '';\n        }\n    }\n\n\n    useEffect(() => {\n\n\n        async function getLoginAPI() {\n\n            api.get('/api/getbanca/' + sessionStorage.getItem('login'))\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            setSaldoSimples(res.data.bancas.saldoSimples);\n                            setSaldoGeral(res.data.bancas.saldoGeral);\n                            setNomeBanca(res.data.bancas.nome);\n                            setGerenteId(res.data.bancas.gerente);\n                            setComissao(res.data.bancas.comissaoPreJogo.split(';'));\n                            setBancaId(res.data.bancas.id);\n                            setImpressao(res.data.bancas.habilitarImpressao);\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getLoginAPI();\n\n        if (codigoBilhete != 'all') {\n            bilhete(codigoBilhete);\n        } else {\n            // console.log('bbbbb');\n        }\n\n\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n                                                            <br/>\n                                                            <TextField id=\"outlined-basic\" label=\"Código do Bilhete\"\n                                                                       variant=\"outlined\"\n                                                                       onChange={getCodigo}/>\n                                                            <Grid container justify=\"space-around\">\n\n                                                            </Grid>\n\n                                                            <br/>\n\n                                                            <Button onClick={print} style={{margin: '10px'}}\n                                                                    variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                <PrintIcon/>\n                                                            </Button>\n                                                            <Button type=\"Link\"\n                                                                    href={\"whatsapp://send?text=Link+para+seu+bilhete%3a%0d%0a%0d%0ahttps%3A%2F%2Fwww.sonhobets.com.br%2F%23%2FverificarBilhete%2F\" + codigoB}\n                                                                    variant=\"contained\"\n                                                                    style={{color: 'white', backgroundColor: 'green'}}>\n                                                                <WhatsAppIcon/>\n                                                            </Button>\n\n\n                                                            <br/><br/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n                <React.Fragment>\n                    <Grid container style={{marginLeft: 20}}>\n\n                        <Grid item xs={12} md={4} sm={12}>\n\n                        </Grid>\n                        <Grid item xs={12} md={4} sm={12}>\n\n                            <div style={{\n                                width: 'calc(100% - 15%)',\n                                fontSize: 12,\n                                backgroundColor: 'rgb(248, 236, 194)',\n                                color: 'black',\n                                boxSizing: 'border-box'\n                            }} ref={componentRef}>\n                                <div id=\"header\"></div>\n                                <div id=\"bilhete\"></div>\n                                <div id=\"footer\"></div>\n                            </div>\n\n                        </Grid>\n\n                        <Grid item xs={12} md={4} sm={12}></Grid>\n                    </Grid>\n                </React.Fragment>\n                <Typography variant={\"h4\"} align={\"center\"}>\n                    <p id='status'></p>\n                </Typography>\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport {useParams} from \"react-router\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport {api} from \"../../pages/Constantes\";\nimport Menu from '../Menu/index';\n\n\nlet date = [];\n\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    let {campId} = useParams();\n    var betsAll = \"\";\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [data, setData] = useState([]);\n    const [dataAux, setAux] = useState([]);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n\n    const columns = [\"\", \"NOME\", \"BANCA\", \"\", \"\", \"EXCLUIR\"];\n\n\n    const options = {\n        rowsPerPage: 50,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: false,\n        onRowClick: (rowData, rowMeta) => {\n            const dataToState = rowData;\n            console.log(dataToState);\n        }\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n    const classes = useStyles();\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    const onClickHandler = () => {\n        let listAux = [];\n        let init = 0;\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n        for (let dataAux of data) {\n            let dateReverse = new Date((dataAux[0].split(' ')[0]).split('/').reverse().join('/'));\n            if (dateReverse >= new Date(auxDate1) && dateReverse <= new Date(auxDate2)) {\n                listAux.push(dataAux);\n                init = 1;\n            }\n        }\n\n        if (init == 0) {\n            setData(dataAux);\n        } else {\n            setData(listAux);\n        }\n    };\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    function deleteClient(id) {\n\n        api.delete('/api/deletecliente/' + id)\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n\n    }\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('manage') == null || sessionStorage.getItem('manage') == \"\") {\n            history.push('/login')\n        }\n\n        let unmounted = false;\n\n        async function getDateAll() {\n            axios.get('http://worldclockapi.com/api/json/utc/now',\n                {}).then(res => {\n                try {\n\n                    let d1 = Date.parse(res.data.currentDateTime);\n                    d1 = new Date(d1);\n                    d1 = d1.setDate(d1.getDate());\n\n                    let d2 = Date.parse(res.data.currentDateTime);\n                    d2 = new Date(d2);\n                    d2 = d2.setDate(d2.getDate() + 1);\n\n                    d1 = new Date(d1);\n                    d2 = new Date(d2);\n\n\n                    date = [d1.getFullYear() + \"-\" + (Number(d1.getMonth()) + 1 < 10 ? \"0\" + (Number(d1.getMonth()) + 1) :\n                        Number(d1.getMonth()) + 1) + \"-\" + d1.getDate(), d2.getFullYear() + \"-\" +\n                    (Number(d2.getMonth()) + 1 < 10 ? \"0\" + (Number(d2.getMonth()) + 1) :\n                        Number(d2.getMonth()) + 1) + \"-\" + d2.getDate()];\n\n                    localStorage.setItem(\"date\", date);\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n                console.log(error);\n            });\n        }\n\n        getDateAll();\n\n        async function getClientAPI() {\n\n            api.get('/api/getclientesgerente/' + sessionStorage.getItem('manage'))\n                .then(res => {\n                    let l = [];\n                    try {\n                        if (res.data) {\n                            res.data.clientes.map((b) => {\n                                l.push([<Typography></Typography>, b.nome, <Typography>{b.nomeBanca}</Typography>,\n                                    <Typography></Typography>, <Typography></Typography>,\n                                    <Button variant=\"contained\"\n                                            color=\"secondary\"\n                                            onClick={() => deleteClient(b.id)}><CancelIcon/></Button>]);\n                            });\n                        }\n                        setAux(l);\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n        getClientAPI();\n        setData(dataAux);\n\n        return () => {\n            unmounted = true;\n        };\n\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">CLIENTES</Typography>\n                                                            <Grid container justify=\"space-around\">\n\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n\n                                                            <br/>\n                                                            <Button onClick={onClickHandler} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/><br/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <React.Fragment>\n\n\n                    <MUIDataTable\n                        title={\"GERENCIAR CLIENTES\"}\n                        data={dataAux}\n                        columns={columns}\n                        options={options}\n\n                    />\n                </React.Fragment>\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {api} from '../Constantes/index';\nimport * as yup from 'yup';\nimport {useFormik} from 'formik';\nimport Menu from '../Menu/index';\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [telefone, setTelefone] = useState(\"\");\n    const [comissaoAoVivo, setComissaoAoVivo] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [comissaoPreJogo, setComissaoPreJogo] = useState(\"\");\n    const [apostasAoVivo, setApostasAoVivo] = useState(false);\n    const [apostasPreJogo, setApostasPreJogo] = useState(false);\n    const [imprimir, setImprimir] = useState(false);\n    const [apostas, setApostas] = useState(false);\n    const [status, setStatus] = useState(false);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n\n    const dataAux = [\n        [\"ELETRONICA\", \"R$ 1000.00\", \"R$ 1000.00\", \"1:5;5:10\", \"1:5;5:10\",\n            <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}><CheckCircleIcon/></Button>,\n            <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}><CheckCircleIcon/></Button>,\n            <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}><CheckCircleIcon/></Button>,\n            <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}><CheckCircleIcon/></Button>,\n            <Button variant=\"outlined\" style={{color: 'blue', borderColor: 'blue'}}><EditIcon/></Button>,],\n    ];\n\n    const columns = [\"NOME\", \"LIMITE GERAL\", \"LIMITE SIMPLES\", \"COMISSÕES PRÉ-JOGO\", \"COMISSÕES AO VIVO\",\n        \"APOSTAS\", \"STATUS\", \"PRÉ-JOGO\", \"AO VIVO\", \"EDITAR\"];\n\n\n    const classes = useStyles();\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n    const validationSchema = yup.object({\n        password1: yup\n            .string().min(4, 'Digite no minimo 4 digitos').required(),\n        password2: yup\n            .string().min(4, 'Digite no minimo 4 digitos').required()\n            .oneOf([yup.ref('password1'), ''], 'As senhas estão diferentes'),\n        limitGeneral: yup\n            .number().required()\n            .min(1000, 'O valor é de no mínimo R$ 1000.00')\n            .max(parseFloat(sessionStorage.getItem('limiteApostaGeral'), 'O valor é de no máximo R$ '\n                + parseFloat(sessionStorage.getItem('limiteApostaGeral')))),\n        limitSimple: yup\n            .number().required()\n            .min(1000, 'O valor é de no mínimo R$ 1000.00')\n            .max(parseFloat(sessionStorage.getItem('limiteApostaSimples'), 'O valor é de no máximo R$ '\n                + parseFloat(sessionStorage.getItem('limiteApostaSimples')))),\n\n    });\n\n    function exit() {\n        sessionStorage.removeItem('manage');\n        history.push('/login');\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n            limitGeneral: '',\n            limitSimple: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.post('/api/addbanca', {\n                \"nome\": nomeBanca,\n                \"login\": nomeBanca,\n                \"senha\": values.password1,\n                \"telefone\": telefone,\n                \"email\": email,\n                \"comissaoPreJogo\": comissaoPreJogo,\n                \"comissaoAoVivo\": comissaoAoVivo,\n                \"saldoSimples\": values.limitSimple,\n                \"saldoGeral\": values.limitGeneral,\n                \"ativarApostasAoVivos\": apostasAoVivo,\n                \"ativarApostasPreJogo\": apostasPreJogo,\n                \"ativarApostas\": apostas,\n                \"status\": status,\n                \"gerente_id\": sessionStorage.getItem('manage'),\n\n            })\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            history.push(\"/gerente\");\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n    function handlerChangeApostasAovivo() {\n        if (apostasAoVivo) {\n            setApostasAoVivo(false);\n        } else {\n            setApostasAoVivo(true);\n        }\n    }\n\n    function handlerChangeApostasPreJogo() {\n        if (apostasPreJogo) {\n            setApostasPreJogo(false);\n        } else {\n            setApostasPreJogo(true);\n        }\n    }\n\n    function handlerChangeImprimir() {\n        if (imprimir) {\n            setImprimir(false);\n        } else {\n            setImprimir(true);\n        }\n    }\n\n    function handlerChangeAposta() {\n        if (apostas) {\n            setApostas(false);\n        } else {\n            setApostas(true);\n        }\n    }\n\n    function handlerChangeStatus() {\n        if (status) {\n            setStatus(false);\n        } else {\n            setStatus(true);\n        }\n    }\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    <React.Fragment>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Cadastrar Cambista\n                        </Typography>\n                        <form className={classes.form} onSubmit={formik.handleSubmit}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={nomeBanca}\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Nome\"\n                                        fullWidth\n                                        autoComplete=\"given-name\"\n                                        onChange={e => setNomeBanca(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={email}\n                                        id=\"email\"\n                                        name=\"email\"\n                                        label=\"E-mail\"\n                                        fullWidth\n                                        autoComplete=\"family-name\"\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={telefone}\n                                        required\n                                        id=\"telefone\"\n                                        name=\"telefone\"\n                                        label=\"Telefone\"\n                                        fullWidth\n                                        autoComplete=\"shipping address-line1\"\n                                        onChange={e => setTelefone(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n\n                                        id=\"limitGeneral\"\n                                        name=\"limitGeneral\"\n                                        label=\"Limite Aposta Geral (R$)\"\n                                        type=\"number\"\n                                        value={formik.values.limitGeneral}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.limitGeneral && Boolean(formik.errors.limitGeneral)}\n                                        helperText={formik.touched.limitGeneral && formik.errors.limitGeneral}\n                                        fullWidth\n\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <TextField\n                                        id=\"limitSimple\"\n                                        name=\"limitSimple\"\n                                        label=\"Limite Aposta Simples (R$)\"\n                                        type=\"number\"\n                                        value={formik.values.limitSimple}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.limitSimple && Boolean(formik.errors.limitSimple)}\n                                        helperText={formik.touched.limitSimple && formik.errors.limitSimple}\n                                        fullWidth\n                                    />\n                                    <br/>\n                                    <br/>\n\n                                    <TextField\n                                        value={comissaoPreJogo}\n                                        id=\"filled-multiline-static\"\n                                        label=\"Comissão (Pré-Jogo)\"\n                                        multiline\n                                        rows={5}\n\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                        placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    *  Exemplo: 1:5;5:10;10:20\"\n                                        fullWidth\n                                        onChange={e => setComissaoPreJogo(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <TextField\n                                        value={comissaoAoVivo}\n                                        id=\"filled-multiline-static\"\n                                        label=\"Comissão (Ao Vivo)\"\n                                        multiline\n                                        rows={5}\n\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                        placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    * Exemplo: 1:5;5:10;10:20\"\n                                        fullWidth\n                                        onChange={e => setComissaoAoVivo(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n\n                                    <TextField\n                                        id=\"password1\"\n                                        name=\"password1\"\n                                        label=\"Nova Senha\"\n                                        type=\"password\"\n                                        value={formik.values.password1}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                                        helperText={formik.touched.password1 && formik.errors.password1}\n                                        fullWidth\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        id=\"password2\"\n                                        name=\"password2\"\n                                        label=\"Digite Novamente\"\n                                        type=\"password\"\n                                        value={formik.values.password2}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                                        helperText={formik.touched.password2 && formik.errors.password2}\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={apostasAoVivo}\n                                                           onClick={handlerChangeApostasAovivo}/>}\n                                        label=\"Habilitar Apostas Ao Vivo\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={apostasPreJogo}\n                                                           onClick={handlerChangeApostasPreJogo}/>}\n                                        label=\"Habilitar Apostas Pre-Jogo\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={imprimir}\n                                                           onClick={handlerChangeImprimir}/>}\n                                        label=\"Habilitar Imprimir Bilhete\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={apostas}\n                                                           onClick={handlerChangeAposta}/>}\n                                        label=\"Apostas Ativas\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" checked={status}\n                                                           onClick={handlerChangeStatus}/>}\n                                        label=\"Status\"\n                                    />\n                                </Grid>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.submit}\n                                        type=\"submit\" disableElevation>\n                                    CADASTRAR\n                                </Button>\n\n\n                            </Grid>\n                        </form>\n                    </React.Fragment>\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {useParams} from \"react-router\";\nimport {api} from '../Constantes/index';\nimport * as yup from 'yup';\nimport {useFormik} from 'formik';\nimport Menu from '../Menu/index';\n\nexport default function Dashboard() {\n    let {id} = useParams();\n\n\n    let history = useHistory();\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [limitG, setLimitG] = useState(\"\");\n    const [limitS, setLimitS] = useState(\"\");\n    const [telefone, setTelefone] = useState(\"\");\n    const [comissaoAoVivo, setComissaoAoVivo] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [comissaoPreJogo, setComissaoPreJogo] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n    const [apostasAoVivo, setApostasAoVivo] = useState(false);\n    const [apostasPreJogo, setApostasPreJogo] = useState(false);\n    const [imprimir, setImprimir] = useState(false);\n    const [apostas, setApostas] = useState(false);\n    const [status, setStatus] = useState(false);\n    const [idCambista, setidCambista] = useState(0);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n    const validationSchema = yup.object({\n        password1: yup\n            .string().min(4, 'Digite no minimo 4 digitos'),\n        password2: yup\n            .string().min(4, 'Digite no minimo 4 digitos')\n            .oneOf([yup.ref('password1'), ''], 'As senhas estão diferentes'),\n\n    });\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.put('/api/updatebanca/' + id, {\n                \"nome\": nomeBanca,\n                \"login\": nomeBanca,\n                \"senha\": values.password1 != '' ? values.password1 : senha,\n                \"telefone\": telefone,\n                \"email\": email,\n                \"comissaoPreJogo\": comissaoPreJogo,\n                \"comissaoAoVivo\": comissaoAoVivo,\n                \"saldoSimples\": limitS,\n                \"saldoGeral\": limitG,\n                \"ativarApostasAoVivos\": apostasAoVivo,\n                \"ativarApostasPreJogo\": apostasPreJogo,\n                \"habilitarImpressao\": imprimir,\n                \"ativarApostas\": apostas,\n                \"status\": status,\n\n            })\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            console.log(res.data);\n                            history.push(\"/gerente\");\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n    console.log(id);\n\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('manage') == null || sessionStorage.getItem('manage') == \"\") {\n            history.push('/login')\n        }\n\n        let unmounted = false;\n\n\n        async function getBancaAPI() {\n\n            api.get('/api/getbanca/' + id)\n                .then(res => {\n                    try {\n                        if (res.data) {\n\n                            setApostasAoVivo(res.data.bancas.ativarApostasAoVivos);\n                            setApostas(res.data.bancas.ativarApostas);\n                            setApostasPreJogo(res.data.bancas.ativarApostasPreJogo);\n                            setNomeBanca(res.data.bancas.login);\n                            setLimitG(res.data.bancas.saldoGeral);\n                            setLimitS(res.data.bancas.saldoSimples);\n                            setStatus(res.data.bancas.status);\n                            setImprimir(res.data.bancas.habilitarImpressao);\n                            setComissaoAoVivo(res.data.bancas.comissaoAoVivo);\n                            setComissaoPreJogo(res.data.bancas.comissaoPreJogo);\n                            setTelefone(res.data.bancas.telefone);\n                            setEmail(res.data.bancas.email);\n                            setSenha(res.data.bancas.senha);\n                            setidCambista(res.data.bancas.id);\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getBancaAPI();\n\n\n        return () => {\n            unmounted = true\n        };\n\n    }, []);\n\n\n    function handlerChangeApostasAovivo() {\n        if (apostasAoVivo) {\n            setApostasAoVivo(false);\n        } else {\n            setApostasAoVivo(true);\n        }\n    }\n\n    function handlerChangeApostasPreJogo() {\n        if (apostasPreJogo) {\n            setApostasPreJogo(false);\n        } else {\n            setApostasPreJogo(true);\n        }\n    }\n\n    function handlerChangeImprimir() {\n        if (imprimir) {\n            setImprimir(false);\n        } else {\n            setImprimir(true);\n        }\n    }\n\n    function handlerChangeAposta() {\n        if (apostas) {\n            setApostas(false);\n        } else {\n            setApostas(true);\n        }\n    }\n\n    function handlerChangeStatus() {\n        if (status) {\n            setStatus(false);\n        } else {\n            setStatus(true);\n        }\n    }\n\n    function deleteCambista() {\n\n        api.delete('/api/deletebanca/' + id)\n            .then(res => {\n                try {\n                    if (res.data) {\n                        history.push(\"/gerente\");\n                    }\n                } catch (e) {\n                    history.push(\"/gerente\");\n                }\n            }).catch(error => {\n            history.push(\"/gerente\");\n            console.log(error);\n\n        });\n\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n\n                    <Typography variant=\"h6\" gutterBottom>\n                        Editar Cambista\n                    </Typography>\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={nomeBanca}\n                                    disabled\n                                    required\n                                    id=\"name\"\n                                    name=\"name\"\n                                    label=\"Nome\"\n                                    fullWidth\n                                    autoComplete=\"given-name\"\n                                    onChange={e => setNomeBanca(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={email}\n                                    id=\"email\"\n                                    name=\"email\"\n                                    label=\"E-mail\"\n                                    fullWidth\n                                    autoComplete=\"family-name\"\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    value={telefone}\n                                    required\n                                    id=\"telefone\"\n                                    name=\"telefone\"\n                                    label=\"Telefone\"\n                                    fullWidth\n                                    autoComplete=\"shipping address-line1\"\n                                    onChange={e => setTelefone(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    value={limitG}\n                                    id=\"standard-number\"\n                                    label=\"Limite Aposta Geral (R$)\"\n                                    type=\"number\"\n                                    fullWidth\n                                    onChange={e => setLimitG(e.target.value)}\n                                />\n                                <br/>\n                                <br/>\n                                <TextField\n                                    value={limitS}\n                                    id=\"standard-number\"\n                                    label=\"Limite Aposta Simples (R$)\"\n                                    type=\"number\"\n                                    fullWidth\n                                    onChange={e => setLimitS(e.target.value)}\n                                />\n                                <br/>\n                                <br/>\n\n                                <TextField\n                                    value={comissaoPreJogo}\n                                    disabled\n                                    id=\"filled-multiline-static\"\n                                    label=\"Comissão (Pré-Jogo)\"\n                                    multiline\n                                    rows={5}\n                                    variant=\"filled\"\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                    placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    *  Exemplo: 1:5;5:10;10:20\"\n                                    fullWidth\n                                    onChange={e => setComissaoPreJogo(e.target.value)}\n                                />\n                                <br/>\n                                <br/>\n                                <TextField\n                                    value={comissaoAoVivo}\n                                    disabled\n                                    id=\"filled-multiline-static\"\n                                    label=\"Comissão (Ao Vivo)\"\n                                    multiline\n                                    rows={5}\n                                    variant=\"filled\"\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                    placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    * Exemplo: 1:5;5:10;10:20\"\n                                    fullWidth\n                                    onChange={e => setComissaoAoVivo(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n\n                                <TextField\n                                    id=\"password1\"\n                                    name=\"password1\"\n                                    label=\"Nova Senha\"\n                                    type=\"password\"\n                                    value={formik.values.password1}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                                    helperText={formik.touched.password1 && formik.errors.password1}\n                                    fullWidth\n                                    autoComplete=\"shipping address-level2\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    id=\"password2\"\n                                    name=\"password2\"\n                                    label=\"Digite Novamente\"\n                                    type=\"password\"\n                                    value={formik.values.password2}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                                    helperText={formik.touched.password2 && formik.errors.password2}\n                                    autoComplete=\"shipping address-level2\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={apostasAoVivo}\n                                                       onClick={handlerChangeApostasAovivo}/>}\n                                    label=\"Habilitar Apostas Ao Vivo\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={apostasPreJogo}\n                                                       onClick={handlerChangeApostasPreJogo}/>}\n                                    label=\"Habilitar Apostas Pre-Jogo\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={imprimir}\n                                                       onClick={handlerChangeImprimir}/>}\n                                    label=\"Habilitar Imprimir Bilhete\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={apostas}\n                                                       onClick={handlerChangeAposta}/>}\n                                    label=\"Apostas Ativas\"\n                                />\n\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" checked={status}\n                                                       onClick={handlerChangeStatus}/>}\n                                    label=\"Status\"\n                                />\n                            </Grid>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.submit}\n                                    type=\"submit\" disableElevation>\n                                ATUALIZAR\n                            </Button>\n\n                            <Button variant=\"contained\" color=\"secondary\"\n                                    disableElevation style={{marginLeft: '10px'}}\n                                    onClick={deleteCambista}>\n                                EXCLUIR\n                            </Button>\n                        </Grid>\n                    </form>\n\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Select from '@material-ui/core/Select';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Menu from '../Menu/index';\n\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [totalEntrada, setTotalEntrada] = useState({});\n    const [totalEntradaP, setTotalEntradaP] = useState(0);\n    const [totalEntradaV, setTotalEntradaV] = useState(0);\n    const [entradasAbertas, setEntradasAbertas] = useState({});\n    const [entradasAbertasP, setEntradasAbertasP] = useState(0);\n    const [entradasAbertasV, setEntradasAbertasV] = useState(0);\n    const [saidas, setSaidas] = useState({});\n    const [saidasP, setSaidasP] = useState(0);\n    const [saidasV, setSaidasV] = useState(0);\n    const [comissoes, setComissoes] = useState({});\n    const [comissoesP, setComissoesP] = useState(0);\n    const [comissoesV, setComissoesV] = useState(0);\n    const [nomesBancas, setNomesBancas] = useState(new Set());\n    const [nomesAux, setNomeAux] = useState(new Set());\n    const [total, setTotal] = useState({});\n    const [totalP, setTotalP] = useState(0);\n    const [totalV, setTotalV] = useState(0);\n    const [dataCambista, setDataCambista] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n    const [dataAuxB, setDataAuxB] = useState([]);\n    const [balanco, setBalanco] = useState(0);\n    const [done, setDone] = useState(0);\n    const [graph, setGraph] = useState(0);\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n    const [nome, setNome] = React.useState('Todas');\n    const [openS, setOpenS] = React.useState(false);\n\n    const handleChangeS = (event) => {\n        setNome(event.target.value);\n    };\n\n    const handleCloseS = () => {\n        setOpenS(false);\n    };\n\n    const handleOpenS = () => {\n        setOpenS(true);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const relatorios = [\n        {\n            \"name\": \"Entradas\",\n            \"Pré-Jogo\": totalEntradaP,\n            \"Ao Vivo\": totalEntradaV,\n\n        },\n        {\n            \"name\": \"Entradas Abertas\",\n            \"Pré-Jogo\": entradasAbertasP,\n            \"Ao Vivo\": entradasAbertasV,\n\n        },\n        {\n            \"name\": \"Saídas\",\n            \"Pré-Jogo\": saidasP,\n            \"Ao Vivo\": saidasV,\n\n        },\n        {\n            \"name\": \"Comissões\",\n            \"Pré-Jogo\": comissoesP,\n            \"Ao Vivo\": comissoesV,\n\n        },\n        {\n            \"name\": \"Total\",\n            \"Pré-Jogo\": totalP,\n            \"Ao Vivo\": totalV,\n\n        }\n    ]\n\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('manage') == null || sessionStorage.getItem('manage') == \"\") {\n            history.push('/login')\n        }\n\n\n        async function getBancasAPI() {\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n            api.get('/api/getbilhetesgerentecaixa2/' + sessionStorage.getItem('manage'))\n                .then(res => {\n                    try {\n                        let bancas = [];\n                        let entradas = 0;\n                        let abertos = 0;\n                        let ganhos = 0;\n                        let comissao = 0;\n                        let entradasV = 0;\n                        let abertosV = 0;\n                        let ganhosV = 0;\n                        let comissaoV = 0;\n                        let totalPP = 0;\n                        let totalVV = 0;\n                        let b = 0;\n                        if (res.data) {\n                            for(let b in res.data.bilhetes){\n                                bancas.push(b);\n                                nomesAux.add(b);\n                                totalEntrada[b] = res.data.bilhetes[b].totalEntrada[0]+res.data.bilhetes[b].totalEntrada[1];\n                                setTotalEntrada(totalEntrada);\n                                entradasAbertas[b] = res.data.bilhetes[b].entradasAberto[0]+res.data.bilhetes[b].entradasAberto[1];\n                                setEntradasAbertas(entradasAbertas);\n                                saidas[b] = res.data.bilhetes[b].saidas[0]+res.data.bilhetes[b].saidas[1];\n                                setSaidas(saidas);\n                                comissoes[b] = res.data.bilhetes[b].comissoes[0]+res.data.bilhetes[b].comissoes[1];\n                                setComissoes(comissoes);\n                                total[b] = res.data.bilhetes[b].total[0]+res.data.bilhetes[b].total[1];\n                                setTotal(total);\n\n                                entradas += res.data.bilhetes[b].totalEntrada[0];\n                                entradasV += res.data.bilhetes[b].totalEntrada[1];\n\n\n                                abertos += res.data.bilhetes[b].entradasAberto[0];\n                                abertosV += res.data.bilhetes[b].entradasAberto[1];\n\n                                ganhos += res.data.bilhetes[b].saidas[0];\n                                ganhosV += res.data.bilhetes[b].saidas[1];\n\n                                comissao += res.data.bilhetes[b].comissoes[0];\n                                comissaoV += res.data.bilhetes[b].comissoes[1];\n\n                                totalPP += res.data.bilhetes[b].total[0];\n                                totalVV += res.data.bilhetes[b].total[1];\n\n                                setDone((((entradas + entradasV) -\n                                    (ganhos + ganhosV) -\n                                    (comissao + comissaoV))));\n                                setTotalEntradaP(entradas);\n                                setTotalEntradaV(entradasV);\n                                setEntradasAbertasP(abertos);\n                                setEntradasAbertasV(abertosV);\n                                setSaidasP(ganhos);\n                                setSaidasV(ganhosV);\n                                setComissoesP(comissao);\n                                setComissoesV(comissaoV);\n                                setTotalEntradaP(totalPP);\n                                setTotalEntradaV(totalVV);\n\n                            }\n                            document.getElementById(\"re\").style.display = \"block\";\n                            document.getElementById(\"load\").style.display = \"none\";\n                            setNomesBancas(bancas);\n                            setNomeAux(nomesAux);\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setNomesBancas(d);\n\n        setDataCambista(d);\n        setDataAux(d);\n        getBancasAPI();\n\n\n    }, []);\n\n\n    const getDatas = () => {\n        let entradas = 0;\n        let abertos = 0;\n        let ganhos = 0;\n        let comissao = 0;\n        let entradasV = 0;\n        let abertosV = 0;\n        let ganhosV = 0;\n        let comissaoV = 0;\n        let totalPP = 0;\n        let totalVV = 0;\n        setDone(0);\n        setTotalEntradaP(entradas);\n        setTotalEntradaV(entradasV);\n        setEntradasAbertasP(abertos);\n        setEntradasAbertasV(abertosV);\n        setSaidasP(ganhos);\n        setSaidasV(ganhosV);\n        setComissoesP(comissao);\n        setComissoesV(comissaoV);\n        setTotalEntradaP(totalPP);\n        setTotalEntradaV(totalVV);\n\n        let n = '';\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n        if (new Date(auxDate1) <= new Date(auxDate2)) {\n\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n\n            api.get('/api/getbilhetesgerentedates/' + sessionStorage.getItem('manage') +\n                '/' + auxDate1 + '/' + auxDate2 + '/' + nome)\n                .then(res => {\n                    let bancas = [];\n                    try {\n\n\n                        if (res.data) {\n\n                            for(let b in res.data.bilhetes) {\n                                bancas.push(b);\n                                nomesAux.add(b);\n                                totalEntrada[b] = res.data.bilhetes[b].totalEntrada[0]+res.data.bilhetes[b].totalEntrada[1];\n                                setTotalEntrada(totalEntrada);\n                                entradasAbertas[b] = res.data.bilhetes[b].entradasAberto[0]+res.data.bilhetes[b].entradasAberto[1];\n                                setEntradasAbertas(entradasAbertas);\n                                saidas[b] = res.data.bilhetes[b].saidas[0]+res.data.bilhetes[b].saidas[1];\n                                setSaidas(saidas);\n                                comissoes[b] = res.data.bilhetes[b].comissoes[0]+res.data.bilhetes[b].comissoes[1];\n                                setComissoes(comissoes);\n                                total[b] = res.data.bilhetes[b].total[0]+res.data.bilhetes[b].total[1];\n                                setTotal(total);\n\n                                entradas += res.data.bilhetes[b].totalEntrada[0];\n                                entradasV += res.data.bilhetes[b].totalEntrada[1];\n\n\n                                abertos += res.data.bilhetes[b].entradasAberto[0];\n                                abertosV += res.data.bilhetes[b].entradasAberto[1];\n\n                                ganhos += res.data.bilhetes[b].saidas[0];\n                                ganhosV += res.data.bilhetes[b].saidas[1];\n\n                                comissao += res.data.bilhetes[b].comissoes[0];\n                                comissaoV += res.data.bilhetes[b].comissoes[1];\n\n                                totalPP += res.data.bilhetes[b].total[0];\n                                totalVV += res.data.bilhetes[b].total[1];\n\n                                setDone((((entradas + entradasV) -\n                                    (ganhos + ganhosV) -\n                                    (comissao + comissaoV))));\n                                setTotalEntradaP(entradas);\n                                setTotalEntradaV(entradasV);\n                                setEntradasAbertasP(abertos);\n                                setEntradasAbertasV(abertosV);\n                                setSaidasP(ganhos);\n                                setSaidasV(ganhosV);\n                                setComissoesP(comissao);\n                                setComissoesV(comissaoV);\n                                setTotalEntradaP(totalPP);\n                                setTotalEntradaV(totalVV);\n                            }\n                        }\n                        document.getElementById(\"re\").style.display = \"block\";\n                        document.getElementById(\"load\").style.display = \"none\";\n                        setNomesBancas(bancas);\n                        setNomeAux(nomesAux);\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n            setNomesBancas(nomesBancas);\n            setDataAux([]);\n        }\n\n\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">RELATÓRIO</Typography>\n                                                            <Grid container justify=\"space-around\">\n\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n                                                            <FormControl className={classes.formControl}>\n                                                                <InputLabel id=\"demo-controlled-open-select-label\">Selecione\n                                                                    uma Banca</InputLabel>\n                                                                <Select\n                                                                    labelId=\"demo-controlled-open-select-label\"\n                                                                    id=\"demo-controlled-open-select\"\n                                                                    open={openS}\n                                                                    onClose={handleCloseS}\n                                                                    onOpen={handleOpenS}\n                                                                    value={nome}\n                                                                    onChange={handleChangeS}\n                                                                    style={{width: '280px'}}\n                                                                >\n                                                                    <MenuItem value=\"Todas\">\n                                                                        <em>Todas</em>\n                                                                    </MenuItem>\n                                                                    {[...nomesAux].sort().map((n) => (\n                                                                        <MenuItem value={n}>{n}</MenuItem>\n                                                                    ))}\n\n                                                                </Select>\n                                                            </FormControl>\n                                                            <br/>\n                                                            <br/>\n                                                            <Button onClick={getDatas} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/>\n                                                            <br/>\n                                                        </Grid>\n\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n                                        <br/>\n                                        <div id=\"re\">\n                                        {done < 0 ? <Typography variant=\"h5\" align=\"center\">\n                                            Balanço: <b style={{color: 'red'}}>R$ {done.toFixed(2)}</b>\n                                        </Typography> : <Typography variant=\"h5\" align=\"center\">\n                                            Balanço: <b style={{color: 'green'}}>R$ {done.toFixed(2)}</b>\n                                        </Typography>}\n                                        <br/>\n                                        <Grid item>\n\n                                            <ResponsiveContainer width='100%' height={400}>\n                                                <BarChart data={graph == 0 ? relatorios : graph}>\n                                                    <CartesianGrid strokeDasharray=\"3 3\"/>\n                                                    <XAxis dataKey=\"name\"/>\n                                                    <YAxis/>\n                                                    <Tooltip/>\n                                                    <Legend/>\n                                                    <Bar dataKey=\"Pré-Jogo\" fill=\"#8884d8\"/>\n                                                    <Bar dataKey=\"Ao Vivo\" fill=\"#82ca9d\"/>\n                                                </BarChart>\n                                            </ResponsiveContainer>\n\n                                        </Grid>\n                                        <br/>\n                                        <br/>\n                                        <Grid item>\n                                            <TableContainer component={Paper}>\n\n                                                <Table stickyHeader aria-label=\"sticky table\">\n                                                    <TableHead>\n                                                        <TableRow>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>BANCA</b></StyledTableCell>\n                                                            <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                                ENTRADAS</b></StyledTableCell>\n                                                            <StyledTableCell align={\"center\"}><b>ENTRADAS EM ABERTO</b></StyledTableCell>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                        </TableRow>\n                                                    </TableHead>\n\n                                                    <TableBody>\n\n                                                        {[...nomesBancas].sort().map((banca) => (\n                                                                <StyledTableRow>\n                                                                    <StyledTableCell align={\"center\"}\n                                                                                     style={{width: '10px'}}>\n                                                                        <Typography variant=\"h5\">\n                                                                            {banca}\n                                                                        </Typography>\n                                                                    </StyledTableCell>\n                                                                    <StyledTableCell align={\"center\"}\n                                                                                     style={{width: '10px'}}>\n                                                                        <Typography variant=\"h5\">\n                                                                            R$ {totalEntrada[banca].toFixed(2)}\n                                                                        </Typography>\n                                                                    </StyledTableCell>\n                                                                    <StyledTableCell align={\"center\"}\n                                                                                     style={{width: '10px'}}>\n                                                                        <Typography variant=\"h5\">\n                                                                            R$ {entradasAbertas[banca].toFixed(2)}\n                                                                        </Typography>\n                                                                    </StyledTableCell>\n                                                                    <StyledTableCell align={\"center\"}\n                                                                                     style={{width: '10px'}}>\n                                                                        <Typography variant=\"h5\">\n                                                                            R$ {saidas[banca].toFixed(2)}\n                                                                        </Typography>\n                                                                    </StyledTableCell>\n                                                                    <StyledTableCell align={\"center\"}\n                                                                                     style={{width: '10px'}}>\n                                                                        <Typography variant=\"h5\">\n                                                                            R$ {comissoes[banca].toFixed(2)}\n                                                                        </Typography>\n                                                                    </StyledTableCell>\n                                                                    <StyledTableCell align={\"center\"}\n                                                                                     style={{width: '10px'}}>\n                                                                        {total[banca] < 0 ?\n                                                                            <Typography variant=\"h5\">\n                                                                                <b style={{color: 'red'}}>R$\n                                                                                    -{Math.abs(total[banca]).toFixed(2)}</b>\n                                                                            </Typography> : <Typography variant=\"h5\">\n                                                                                <b style={{color: 'green'}}>R$ {Math.abs(total[banca]).toFixed(2)}</b>\n                                                                            </Typography>}\n\n                                                                    </StyledTableCell>\n                                                                </StyledTableRow>\n                                                        ))}\n\n\n                                                    </TableBody>\n                                                </Table>\n                                            </TableContainer>\n                                        </Grid></div><div id=\"load\" style={{textAlign: 'center'}}>Carregando...</div>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport Menu from '../Menu/index';\n\n\nlet tab;\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [totalEntrada, setTotalEntrada] = useState({});\n    const [entradasAbertas, setEntradasAbertas] = useState({});\n    const [saidas, setSaidas] = useState({});\n    const [comissoes, setComissoes] = useState({});\n    const [nomesBancas, setNomesBancas] = useState([]);\n    const [total, setTotal] = useState({});\n    const [dataCambista, setDataCambista] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    }))(TableRow);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    let entradas = 0;\n    let abertos = 0;\n    let ganhos = 0;\n    let perdeu = 0;\n    let comissao = 0;\n\n\n\n\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('manage') == null || sessionStorage.getItem('manage') == \"\") {\n            history.push('/login')\n        }\n\n\n\n        async function getBancasAPI() {\n\n            api.get('/api/getbilhetesgerentecaixa/' + sessionStorage.getItem('manage'))\n                .then(res => {\n                    try {\n                        let bancas = [];\n                        if (res.data) {\n                            for(let b in res.data.bilhetes){\n                                bancas.push(b);\n                                totalEntrada[b] = res.data.bilhetes[b].totalEntrada;\n                                setTotalEntrada(totalEntrada);\n                                entradasAbertas[b] = res.data.bilhetes[b].entradasAberto;\n                                setEntradasAbertas(entradasAbertas);\n                                saidas[b] = res.data.bilhetes[b].saidas;\n                                setSaidas(saidas);\n                                comissoes[b] = res.data.bilhetes[b].comissoes;\n                                setComissoes(comissoes);\n                                total[b] = res.data.bilhetes[b].total;\n                                setTotal(total);\n\n                            }\n\n                            setNomesBancas(bancas);\n                        }\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setNomesBancas(d);\n        setDataCambista(d);\n        setDataAux(d);\n        getBancasAPI();\n\n\n    }, []);\n\n\n    const getDatas = () => {\n\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n\n        if (new Date(auxDate1) < new Date(auxDate2)) {\n\n\n            api.get('/api/getbilhetesgerentedates2/' + sessionStorage.getItem('manage') + '/' + auxDate1 + '/' + auxDate2)\n                .then(res => {\n                    try {\n\n\n                        let bancas = [];\n                        if (res.data) {\n                            for(let b in res.data.bilhetes){\n                                bancas.push(b);\n                                totalEntrada[b] = res.data.bilhetes[b].totalEntrada;\n                                setTotalEntrada(totalEntrada);\n                                entradasAbertas[b] = res.data.bilhetes[b].entradasAberto;\n                                setEntradasAbertas(entradasAbertas);\n                                saidas[b] = res.data.bilhetes[b].saidas;\n                                setSaidas(saidas);\n                                comissoes[b] = res.data.bilhetes[b].comissoes;\n                                setComissoes(comissoes);\n                                total[b] = res.data.bilhetes[b].total;\n                                setTotal(total);\n\n                            }\n\n                            setNomesBancas(bancas);\n                           \n\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n    }\n\n    return (\n        <div className={classes.root} >\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Grid container justify=\"space-around\">\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        placeholder=\"2018/10/10\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n                                                            <br/>\n                                                            <Button onClick={getDatas} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/><br/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                        <TableContainer component={Paper}>\n\n                                            <Table stickyHeader aria-label=\"sticky table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <StyledTableCell align={\"center\"}><b>BANCA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                            ENTRADAS</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>ENTRADAS EM\n                                                            ABERTO</b></StyledTableCell>\n                                                        <StyledTableCell\n                                                            align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                        <StyledTableCell\n                                                            align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                    </TableRow>\n                                                </TableHead>\n\n                                                <TableBody>\n\n                                                    {nomesBancas.sort().map((banca) => (\n                                                        <StyledTableRow>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    {banca}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {totalEntrada[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {entradasAbertas[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {saidas[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {comissoes[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                {saidas[banca] > totalEntrada[banca] ?\n                                                                    <Typography variant=\"h5\">\n                                                                        <b style={{color: 'red'}}>R$\n                                                                            -{Math.abs(total[banca]).toFixed(2)}</b>\n                                                                    </Typography> : <Typography variant=\"h5\">\n                                                                        <b style={{color: 'green'}}>R$ {Math.abs(total[banca]).toFixed(2)}</b>\n                                                                    </Typography>}\n\n                                                            </StyledTableCell>\n                                                        </StyledTableRow>\n                                                    ))}\n\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n            </main>\n\n        </div>\n\n    );\n\n}","export default __webpack_public_path__ + \"static/media/football.f7763bd0.png\";","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Conan from './football.png';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {api} from '../Constantes/index';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                SONHOBETS\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        opacity: 0.2,\n        backgroundImage: `url(${Conan})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        backgroundImage: `url(${Conan})`,\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        width: theme.spacing(8),\n        height: theme.spacing(8),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = yup.object({\n    password1: yup\n        .string('Entre com seu usuário')\n        .required('A nova senha é obrigatória'),\n    password2: yup\n        .string('Entre com sua senha')\n        .required('A nova senha é obrigatória')\n        .oneOf([yup.ref('password1'), null], 'As senhas estão diferentes'),\n\n});\n\n\nexport default function SignInSide() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.put('/api/updategerentesenha/' + sessionStorage.getItem('manage'),\n                {\"senha\": values.password1})\n                .then(res => {\n\n                    try {\n                        if (res.data) {\n                            console.log(res.data);\n\n\n                            history.push(\"/gerente\")\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n    const [form, setForm] = useState([]);\n\n    useEffect(() => {\n        if (sessionStorage.getItem('manage') == null || sessionStorage.getItem('manage') == \"\") {\n            history.push('/login');\n        }\n\n        async function loginAll() {\n\n        }\n\n        loginAll();\n\n\n    }, [])\n\n    try {\n        if (form.user && form.password) {\n            localStorage.setItem('manage', form.user);\n            return <Redirect to=\"/gerente\"/>\n        }\n    } catch (e) {\n\n    }\n\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline/>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <Button color={'primary'} href={'/#/gerente'}><ArrowBackIcon/> INÍCIO</Button>\n                <div className={classes.paper}>\n                    <img src={Conan} width=\"150\"/>\n                    <Typography variant=\"h4\">\n                        <b style={{textShadow: '5px 2px 2px black', color: '#428bca'}}>NOVA SENHA</b>\n                    </Typography>\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <TextField\n                            fullWidth\n                            id=\"password1\"\n                            name=\"password1\"\n                            label=\"Nova Senha (Gerente)\"\n                            type=\"password\"\n                            value={formik.values.user}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                            helperText={formik.touched.password1 && formik.errors.password1}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"password2\"\n                            name=\"password2\"\n                            label=\"Digite Novamente (Gerente)\"\n                            type=\"password\"\n                            value={formik.values.password2}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                            helperText={formik.touched.password2 && formik.errors.password2}\n\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Atualizar\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n\n                            </Grid>\n                            <Grid item>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\n","// https://restcountries.eu/data/afg.svg\n// http://www.geognos.com/api/en/countries/flag/AI.png\n// https://restcountries.eu/data/bra.svg\n// https://restcountries.eu/rest/v2/all\n\nimport axios from 'axios';\n\n\nconst cotacao = [\n    {title: 'Vencedor do Encontro'},\n    {title: 'Handicap de Gols (Europeu)'},\n    {title: 'Resultado Certo'},\n    {title: 'Total de Gols'},\n    {title: 'Resultado Certo (1º Tempo)'},\n    {title: 'Dupla Possibilidade'},\n    {title: 'Ambas Equipes Marcam'},\n    {title: 'Vencedor do Primeiro Tempo'},\n    {title: 'Vencedor do Segundo Tempo'},\n    {title: 'Total de Gols (Par ou Impar)'},\n    {title: 'Faixa Total de Gols'},\n    {title: 'Vencedor Encontro + Ambas Marcam'},\n    {title: 'Ambas Equipes Marcam no 1T e 2T'},\n    {title: 'Vencedor Intervalo / Vencedor Partida'},\n    {title: 'Casa termina sem levar gol'},\n    {title: 'Fora termina sem levar gol'},\n    {title: 'Total de Escanteios'},\n    {title: 'Total de Escanteios 1T'},\n    {title: 'Escanteios Par/Impar'},\n    {title: 'Escanteios Par/Impar no Primeiro Tempo'},\n    {title: 'Vencedor do Encontro / Total de Gols'},\n    {title: 'Casa Vence Ambos os Tempos'},\n    {title: 'Fora Vence Ambos os Tempos'},\n    {title: 'Total de Gols Par/Impar-Casa'},\n    {title: 'Total de Gols Par/Impar-Fora'},\n    {title: 'Total de Gols no Primeiro Tempo'},\n    {title: 'Margem de Vitoria'},\n    {title: 'Total de Gols 1º Tempo Par/Impar'},\n    {title: 'Primeiro Tempo Ambas Marcam'},\n    {title: 'Casa Vence Sem Levar Gol'},\n    {title: 'Fora Vence Sem Levar Gol'},\n    {title: 'Casa Marca Ambos os Tempos'},\n    {title: 'Fora Marca Ambos os Tempos'},\n    {title: 'Casa Quantidade Exata de Gols'},\n    {title: 'Fora Quantidade Exata de Gols'},\n    {title: 'Quem Marca o Primeiro Gol'},\n    {title: 'Tempo Com Mais Gols'},\n    {title: 'Quantidade Exata Gols Partida'},\n    {title: 'Total Gols 2T'},\n    {title: 'Total Gols Casa'},\n    {title: 'Total Gols 1T - Casa'},\n    {title: 'Total Gols 1T - Fora'},\n    {title: 'Casa Vence Algum Tempo'},\n    {title: 'Fora Vence Algum Tempo'},\n    {title: 'Vencedor do 1T/Total Gols 1T'},\n    {title: 'Dupla Possibilidade/Ambas Marcam'},\n    {title: 'Dupla Possibilidade 1T/Ambas Marcam 1T'},\n    {title: 'Dupla Possibilidade 2T/Ambas Marcam 2T'},\n    {title: 'Handicap de Gols (EUROPEU) - 2T'},\n    {title: 'Quantidade Exata de Gols - 1T'},\n    {title: 'Quem Cobrará o Primeiro Escanteio'},\n    {title: 'Quem Cobrará o Primeiro Escanteio - 1T'},\n    {title: 'Faixa total escanteios - Casa'},\n    {title: 'Faixa total escanteios - Fora'},\n    {title: 'Faixa total escanteios - Casa - 1T'},\n    {title: 'Faixa total escanteios - Fora - 1T'},\n    {title: 'Time com mais escanteios'},\n    {title: 'Time com mais escanteios - 1T'},\n    {title: 'Faixa de escanteios'},\n    {title: 'Faixa de escanteios - 1T'},\n    {title: 'Quem cobrará o último escanteio'},\n    {title: 'Quem cobrará o último escanteio - 1T'},\n];\n\nconst api = axios.create({\n    // baseURL: \"http://127.0.0.1:8000\"\n    baseURL: \"https://footballdjango.herokuapp.com\"\n});\n\napi.interceptors.request.use(async config => {\n\n\n    config.headers.Authorization = `Token 88c3f466365e3346c236c65d703892cefcadb49b`;\n\n    return config;\n});\n\n\nexport {cotacao, api};\n","export default __webpack_public_path__ + \"static/media/football.f7763bd0.png\";","import {makeStyles, useTheme} from \"@material-ui/core/styles\";\nimport React, {useState} from \"react\";\nimport clsx from \"clsx\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport {Link, useHistory} from \"react-router-dom\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\nimport football from \"./football.png\";\nimport SportsSoccerIcon from \"@material-ui/icons/SportsSoccer\";\n\nexport default function MenuAdmin(props) {\n    let history = useHistory();\n    const theme = useTheme();\n\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n\n\n    const handleDrawerToggle = () => {\n        setMobileOpen(!mobileOpen);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n    const classes = useStyles();\n\n\n    function exit() {\n        sessionStorage.removeItem('admin');\n        history.push('/adm');\n    }\n\n\n    return (\n        <div><AppBar position=\"fixed\" id={\"appbar\"} className={clsx(classes.appBar)}>\n            <Toolbar className={classes.toolbar}>\n                <IconButton\n                    edge=\"start\"\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={handleDrawerToggle}\n                    className={clsx(classes.menuButton, false && classes.menuButtonHidden)}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" className={classes.title}\n                            onClick={handleDrawerToggle} style={{cursor: 'pointer'}}>\n                    <b>SONHOBETS</b>\n                </Typography>\n\n                <Typography component=\"h4\" color=\"inherit\" display=\"inline\" style={{marginRight: '-10px'}}>\n                    <b>Admin:</b> {sessionStorage.getItem('admin')} <br/>\n                </Typography>\n            </Toolbar>\n        </AppBar>\n            <Drawer\n                variant=\"temporary\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                    keepMounted: true, // Better open performance on mobile.\n                }}\n            >\n\n                <Divider/>\n                <List>\n                    <ListItem alignItems={\"center\"}>\n                        <ListItemIcon>\n                            <img src={football} width={160}\n                                 align=\"center\"\n                            />\n                        </ListItemIcon>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/admin'}>\n                        <ListItemIcon>\n                            <HomeIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Início\"/>\n                    </ListItem>\n\n                    <ListItem button component={Link} to={'/caixagerentes'}>\n                        <ListItemIcon>\n                            <InboxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Caixa\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/cadastrarbancadmin'}>\n                        <ListItemIcon>\n                            <InboxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Bancas\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/cadastrargerente'}>\n                        <ListItemIcon>\n                            <InboxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Gerentes\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/relatoriosc'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Relatório\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/bilhetesA'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Bilhetes\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/cotacao'}>\n                        <ListItemIcon>\n                            <MonetizationOnIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Cotação (Pre-Jogo)\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/cotacaoAovivo'}>\n                        <ListItemIcon>\n                            <MonetizationOnIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Cotação (Ao Vivo)\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/validarBilhete'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Processar Jogos\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/validarDados'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Validar Dados\"/>\n                    </ListItem>\n                    {/*<ListItem button component={Link} to={'/validarDados'}>*/}\n                    {/*    <ListItemIcon>*/}\n                    {/*        <SportsSoccerIcon/>*/}\n                    {/*    </ListItemIcon>*/}\n                    {/*    <ListItemText primary=\"Bloquear Jogos\"/>*/}\n                    {/*</ListItem>*/}\n                    <ListItem button component={Link} to={'/clientesA'}>\n                        <ListItemIcon>\n                            <PersonIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Clientes\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/bilheteA/all'}>\n                        <ListItemIcon>\n                            <DescriptionIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Conferir Bilhetes\"/>\n                    </ListItem>\n                </List>\n\n                <Divider/>\n\n                <List>\n                    <ListItem button component={Link} to={\"/novasenhaadmin\"}>\n                        <ListItemIcon>\n                            <VpnKeyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Alterar Senha\"/>\n                    </ListItem>\n                    <ListItem button onClick={exit}>\n                        <ListItemIcon>\n                            <ExitToAppIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Sair\"/>\n                    </ListItem>\n\n                </List>\n\n            </Drawer></div>\n\n    );\n}\n","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {Link, useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport {api} from '../Constantes/index';\nimport MenuAdmin from '../Menu/index';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [date, setDate] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n    const [day, setDay] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n    const getMuiTheme = () => createTheme({\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    color: \"#FF0000\",\n                },\n\n            }\n        }\n    })\n\n    const options = {\n        rowsPerPage: 50,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: false,\n\n        textLabels: {\n            body: {\n                noMatch: \"Nenhum dado encontrado\",\n                toolTip: \"Ordenar\",\n                columnHeaderTooltip: column => `Ordenar por ${column.label}`\n            },\n            pagination: {\n                next: \"Próxima Página\",\n                previous: \"Página Anterior\",\n                rowsPerPage: \"Linha por página:\",\n                displayRows: \"de\",\n            },\n            toolbar: {\n                search: \"Procurar\",\n                downloadCsv: \"Download CSV\",\n                print: \"Print\",\n                viewColumns: \"View Columns\",\n                filterTable: \"Filter Table\",\n            },\n            filter: {\n                all: \"Tudo\",\n                title: \"FILTERS\",\n                reset: \"RESET\",\n            },\n            viewColumns: {\n                title: \"Mostrar Colunas\",\n                titleAria: \"Show/Hide Table Columns\",\n            },\n            selectedRows: {\n                text: \"row(s) selected\",\n                delete: \"Delete\",\n                deleteAria: \"Delete Selected Rows\",\n            },\n        }\n\n\n        // onRowClick: (rowData, rowMeta) => {\n        //     const dataToState = rowData;\n        //     console.log(dataToState);\n        // }\n    };\n\n\n    const columns = [\"GERENTE\", \"STATUS\", \"CRIAR CAMBISTA\", \"REIMPRIMIR\", \"STATUS CAMBISTA\", \"ALTERAR LIMITES\",\n        \"CANCELAR APOSTAS\", \"APOSTAS CAMBISTA\", \"EDITAR\"];\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm');\n        }\n\n\n        async function getDateAll() {\n\n            try {\n                let d = Date.parse(new Date());\n                d = new Date(d);\n                d = d.setDate(d.getDate());\n\n\n                let d1 = Date.parse(new Date());\n                d1 = new Date(d1);\n                d1 = d1.setDate(d1.getDate() + 1);\n\n                let d2 = Date.parse(new Date());\n                d2 = new Date(d2);\n                d2 = d2.setDate(d2.getDate() + 2);\n\n                d = new Date(d);\n                d1 = new Date(d1);\n                d2 = new Date(d2);\n\n\n                setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                d2.getDate()]);\n\n\n                setDay([d.getDay(), d1.getDay(), d2.getDay()]);\n\n\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n\n        async function getGerentesAPI() {\n\n            api.get('/api/getgerencia')\n                .then(res => {\n                    try {\n                        if (res.data) {\n\n                            res.data.gerencias.map((b) => {\n                                dataAux.push([\n                                    b.nome,\n                                    b.status == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarStatus(b.id, b.status)}><CheckCircleIcon/></Button>\n                                        : <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                  onClick={() => atualizarStatus(b.id, b.status)}><CancelIcon/></Button>,\n\n                                    b.criarCambista == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarCriarCambista(b.id, b.criarCambista)}><CheckCircleIcon/></Button>\n                                        : <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                  onClick={() => atualizarCriarCambista(b.id, b.criarCambista)}><CancelIcon/></Button>,\n\n                                    b.reiprimirApostas == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarReiprimirApostas(b.id, b.reiprimirApostas)}>\n                                            <CheckCircleIcon/></Button> : <Button variant=\"outlined\"\n                                                                                  style={{\n                                                                                      color: 'red',\n                                                                                      borderColor: 'red'\n                                                                                  }} onClick={() =>\n                                            atualizarReiprimirApostas(b.id, b.reiprimirApostas)}>\n                                            <CancelIcon/></Button>,\n\n                                    b.alterarStatusCambista == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarAlterarStatusCambista(b.id, b.alterarStatusCambista)}>\n                                            <CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarAlterarStatusCambista(b.id, b.alterarStatusCambista)}><CancelIcon/></Button>,\n\n\n                                    b.alterarLimitesApostas == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarAlterarLimitesApostas(b.id, b.alterarLimitesApostas)}>\n                                            <CheckCircleIcon/></Button> : <Button variant=\"outlined\"\n                                                                                  style={{\n                                                                                      color: 'red',\n                                                                                      borderColor: 'red'\n                                                                                  }} onClick={() =>\n                                            atualizarAlterarLimitesApostas(b.id, b.alterarLimitesApostas)}>\n                                            <CancelIcon/></Button>,\n\n                                    b.cancelarApostaCambista == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarCancelarApostaCambista(b.id, b.cancelarApostaCambista)}>\n                                            <CheckCircleIcon/></Button> : <Button variant=\"outlined\"\n                                                                                  style={{\n                                                                                      color: 'red',\n                                                                                      borderColor: 'red'\n                                                                                  }} onClick={() =>\n                                            atualizarCancelarApostaCambista(b.id, b.cancelarApostaCambista)}>\n                                            <CancelIcon/></Button>,\n\n                                    b.ativaApostasCambistas == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarAtivaApostasCambistas(b.id, b.ativaApostasCambistas)}>\n                                            <CheckCircleIcon/></Button> : <Button variant=\"outlined\"\n                                                                                  style={{\n                                                                                      color: 'red',\n                                                                                      borderColor: 'red'\n                                                                                  }} onClick={() =>\n                                            atualizarAtivaApostasCambistas(b.id, b.ativaApostasCambistas)}>\n                                            <CancelIcon/></Button>,\n\n\n                                    <Button variant=\"outlined\" style={{color: 'blue', borderColor: 'blue'}}\n                                            component={Link} to={'/editgerente/' + b.id}><EditIcon/></Button>,]);\n                            })\n                            setDataAux(dataAux);\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setDataAux(d);\n        getGerentesAPI();\n        getDateAll();\n\n\n    }, []);\n\n    function atualizarReiprimirApostas(id, reiprimirApostas) {\n        if (reiprimirApostas) {\n            reiprimirApostas = false;\n        } else {\n            reiprimirApostas = true;\n        }\n        api.put('/api/updategerencia/' + id, {\n            \"reiprimirApostas\": reiprimirApostas,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarCriarCambista(id, criarCambista) {\n        if (criarCambista) {\n            criarCambista = false;\n        } else {\n            criarCambista = true;\n        }\n        api.put('/api/updategerencia/' + id, {\n            \"criarCambista\": criarCambista,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarAtivaApostasCambistas(id, ativaApostasCambistas) {\n        if (ativaApostasCambistas) {\n            ativaApostasCambistas = false;\n        } else {\n            ativaApostasCambistas = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"ativaApostasCambistas\": ativaApostasCambistas,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarStatus(id, status) {\n        if (status) {\n            status = false;\n        } else {\n            status = true;\n        }\n        api.put('/api/updategerencia/' + id, {\n            \"status\": status,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarAlterarStatusCambista(id, alterarStatusCambista) {\n        if (alterarStatusCambista) {\n            alterarStatusCambista = false;\n        } else {\n            alterarStatusCambista = true;\n        }\n        api.put('/api/updategerencia/' + id, {\n            \"alterarStatusCambista\": alterarStatusCambista,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarAlterarLimitesApostas(id, alterarLimitesApostas) {\n        if (alterarLimitesApostas) {\n            alterarLimitesApostas = false;\n        } else {\n            alterarLimitesApostas = true;\n        }\n        api.put('/api/updategerencia/' + id, {\n            \"alterarLimitesApostas\": alterarLimitesApostas,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarCancelarApostaCambista(id, cancelarApostaCambista) {\n        if (cancelarApostaCambista) {\n            cancelarApostaCambista = false;\n        } else {\n            cancelarApostaCambista = true;\n        }\n        api.put('/api/updategerencia/' + id, {\n            \"cancelarApostaCambista\": cancelarApostaCambista,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <MenuAdmin/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    {dataAux.length > 0 ?\n                        <React.Fragment>\n                            <ThemeProvider theme={getMuiTheme()}>\n                                <MUIDataTable\n                                    title={<Grid container direction={'row'}>\n\n                                        <br/>\n                                        <Grid item style={{paddingLeft: '10px'}}></Grid>\n                                        <Grid item>\n                                            <Button variant=\"contained\" color=\"primary\" component={Link}\n                                                    to={'/cadgerente'}>\n                                                CADASTRAR GERENTE\n                                            </Button>\n                                        </Grid>\n                                    </Grid>}\n                                    data={dataAux}\n                                    columns={columns}\n                                    options={options}\n\n                                />\n                            </ThemeProvider>\n                        </React.Fragment> : <Typography component=\"h4\" color=\"inherit\" align=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" component={Link} to={'/cadgerente'}>\n                                    CADASTRAR GERENTE\n                                </Button>\n                            </Grid>\n                            <Grid item style={{marginBottom: '10px'}}></Grid>\n                            Nenhum Gerente Cadastrado!\n                        </Typography>}\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","export default __webpack_public_path__ + \"static/media/football.f7763bd0.png\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Conan from './football.png';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {useHistory} from \"react-router-dom\";\nimport {api} from '../Constantes/index';\nimport CryptoJS from \"crypto-js\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                SONHOBETS\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        opacity: 0.2,\n        backgroundImage: `url(${Conan})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        backgroundImage: `url(${Conan})`,\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        width: theme.spacing(8),\n        height: theme.spacing(8),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = yup.object({\n    user: yup\n        .string('Entre com seu usuário')\n        .required('O usuário é obrigatório'),\n    password: yup\n        .string('Entre com sua senha')\n        .required('A senha é obrigatória'),\n});\n\n\nexport default function SignInSideManage() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            user: sessionStorage.getItem(\"userAdmin\") != null ? sessionStorage.getItem(\"userAdmin\") : '',\n            password: sessionStorage.getItem(\"senhaAdmin\") != null ?\n                JSON.parse(decryptData2(sessionStorage.getItem(\"senhaAdmin\"))) + \"\" : '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n\n\n            api.post('/api/getloginadmin', {\"login\": values.user, \"senha\": values.password})\n                .then(res => {\n\n                    try {\n                        if (res.data) {\n                            console.log(res.data);\n                            sessionStorage.setItem('admin', res.data.admin.login);\n                            sessionStorage.setItem(\"senhaAdmin\", encryptData2(values.password));\n                            sessionStorage.setItem(\"userAdmin\", values.user);\n                            history.push(\"/admin\");\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                alert('Usuário ou senha inválido!');\n                console.log(error)\n            });\n        },\n    });\n\n    function encryptData2(data) {\n        //var Key = C.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");\n        var Key = CryptoJS.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");  // 1. Replace C by CryptoJS\n        var IV = CryptoJS.enc.Utf8.parse(\"0123456789ABCDEF\");\n        var encryptedText = CryptoJS.AES.encrypt(JSON.stringify(data), Key, {\n            iv: IV,\n            mode: CryptoJS.mode.CBC,\n            padding: CryptoJS.pad.Pkcs7\n        });\n        //return encryptedText.toString(CryptoJS.format.Hex);\n        return encryptedText.toString(CryptoJS.format.Base64);                              // 2. Use Base64 instead of Hex\n    }\n\n\n    function decryptData2(encryptedData, key) {\n        var C = CryptoJS;\n        //encryptedData = C.enc.Base64.parse(encryptedData);                                // 3. Remove line\n        var Key = C.enc.Utf8.parse(\"6il7YCRSqIOB9NooY225lPKQ0KuAF/nkFX6cY3vJkS0=\");\n        var IV = C.enc.Utf8.parse(\"0123456789ABCDEF\");\n        //var decryptedText = C.AES.encrypt(encryptedData, Key, {\n        var decryptedText = C.AES.decrypt(encryptedData, Key, {                             // 4. Use decrypt instead of encrypt\n            iv: IV,\n            mode: C.mode.CBC,\n            padding: C.pad.Pkcs7\n        });\n        //return encryptedData.toString(CryptoJS.enc.Utf8);\n        return decryptedText.toString(CryptoJS.enc.Utf8);                                   // 5. Use decryptedText instead of encryptedData\n    }\n\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline/>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <img src={Conan} width=\"150\"/>\n\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <TextField\n                            fullWidth\n                            id=\"user\"\n                            name=\"user\"\n                            label=\"Administrador\"\n                            value={formik.values.user}\n                            onChange={formik.handleChange}\n                            error={formik.touched.user && Boolean(formik.errors.user)}\n                            helperText={formik.touched.user && formik.errors.user}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"password\"\n                            name=\"password\"\n                            label=\"Senha\"\n                            type=\"password\"\n                            value={formik.values.password}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password && Boolean(formik.errors.password)}\n                            helperText={formik.touched.password && formik.errors.password}\n\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Entrar\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n\n                            </Grid>\n                            <Grid item>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n\n                </div>\n            </Grid>\n        </Grid>\n    );\n}","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport Menu from '../Menu/index';\n\nlet tab;\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [openNav, setOpenNav] = useState(false);\n    const [openNavA, setOpenNavA] = useState(\"\");\n    const [openNavB, setOpenNavB] = useState(\"\");\n    const [data, setData] = useState([]);\n    const [totalEntrada, setTotalEntrada] = useState(0);\n    const [entradasAbertas, setEntradasAbertas] = useState(0);\n    const [saidas, setSaidas] = useState(0);\n    const [comissoes, setComissoes] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [dataAux, setDataAux] = useState([]);\n\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    }))(TableRow);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n\n    const classes = useStyles();\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n\n\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n        let unmounted = false;\n\n\n\n        async function getBancasAPI() {\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n            api.get('/api/getbilhetesa')\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            let total = (res.data.bilhetes.totalEntrada.toFixed(2) -\n                                res.data.bilhetes.saidas.toFixed(2) -\n                                res.data.bilhetes.comissoes.toFixed(2));\n\n                            document.getElementById('entradas').innerText = 'R$ ' +\n                                res.data.bilhetes.totalEntrada.toFixed(2);\n                            document.getElementById('abertos').innerText = 'R$ ' +\n                                res.data.bilhetes.entradasAberto.toFixed(2);\n                            document.getElementById('ganhos').innerText = 'R$ ' +\n                                res.data.bilhetes.saidas.toFixed(2);\n                            document.getElementById('comissao').innerText = 'R$ ' +\n                                res.data.bilhetes.comissoes.toFixed(2);\n\n                            if(total >= 0){\n                                document.getElementById('total').innerHTML = '<b style=\"color: green\">R$ ' +\n                                    res.data.bilhetes.total.toFixed(2) + '</b>';\n                            } else {\n                                document.getElementById('total').innerHTML = '<b style=\"color: red\">R$ ' +\n                                    res.data.bilhetes.total.toFixed(2) + '</b>';\n                            }\n\n\n\n                        }\n                        document.getElementById(\"re\").style.display = \"block\";\n                        document.getElementById(\"load\").style.display = \"none\";\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setDataAux(d);\n        getBancasAPI();\n\n\n        return () => {\n            unmounted = true;\n        };\n\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            <div id=\"load\" style={{textAlign: 'center'}}>Carregando...</div>\n                                        </Paper>\n                                        <div id=\"re\">\n                                            <TableContainer component={Paper}>\n\n                                                <Table stickyHeader aria-label=\"sticky table\">\n                                                    <TableHead>\n                                                        <TableRow>\n\n                                                            <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                                ENTRADAS</b></StyledTableCell>\n                                                            <StyledTableCell align={\"center\"}><b>ENTRADAS EM\n                                                                ABERTO</b></StyledTableCell>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                            <StyledTableCell\n                                                                align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                            <StyledTableCell align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                        </TableRow>\n                                                    </TableHead>\n\n                                                    <TableBody>\n\n                                                        <StyledTableRow>\n\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"entradas\">\n\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"abertos\">\n\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"ganhos\">\n\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"comissao\">\n\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\" id=\"total\">\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                        </StyledTableRow>\n\n                                                    </TableBody>\n                                                </Table>\n                                            </TableContainer></div>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState, memo} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {Link, useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport {DataGrid, GridToolbar, ptBR} from '@mui/x-data-grid';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport Menu from '../Menu/index';\n\nconst themeG = createTheme(\n    {\n        palette: {\n            primary: {main: '#1976d2'},\n        },\n    },\n    ptBR,\n);\n\n\nexport default function Dashboard(props) {\n\n    let history = useHistory();\n    const {window} = props;\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [bilhetes, setBilhetes] = useState(\"\");\n    const [dataAux, setAux] = useState([]);\n    const [dateAfter, setDateAfter] = useState('');\n\n\n    let s = {'Perdeu': 'red', 'Ganhou': 'green', 'Cancelado': 'gold', 'Aberto': 'blue'}\n    const columns = [\n        {\n            field: 'Banca', headerName: 'Banca', width: 150, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Cupom', headerName: 'Cupom', width: 120, align: 'center',\n            renderCell: (params) => (<Button variant=\"contained\" color=\"primary\"\n                                             component={Link}\n                                             to={'/bilheteA/' + params.value}>{params.value}</Button>)\n        },\n\n        {\n            field: 'Cliente', headerName: 'Cliente', width: 100, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Data', headerName: 'Data', width: 150, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Situacao', headerName: 'Situação', width: 115, align: 'center',\n            renderCell: (params) => (<Button variant=\"contained\" style={{background: s[params.value], width: 115}}>\n                <p style={{color: 'white'}}>{params.value}</p></Button>)\n        },\n\n        {\n            field: 'Entrada', headerName: 'Entrada', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Comissao', headerName: 'Comissão', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Cotacao', headerName: 'Cotação', width: 90, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Retorno', headerName: 'Retorno', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Tipo', headerName: 'Tipo', width: 60, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Aposta', headerName: 'Aposta', width: 80, align: 'center',\n            renderCell: (params) => (<b>{params.value}</b>)\n        },\n\n        {\n            field: 'Cancelar', headerName: 'Cancelar', width: 100, align: 'center',\n            renderCell: (params) => (<Button onClick={() =>\n                setStatusBilhete(params.value)}\n                                                                 variant=\"contained\" color=\"secondary\">\n                <CancelIcon/></Button>)\n        },\n\n    ];\n\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    function setStatusBilhete(codigoBilhete) {\n\n        api.put('/api/updatebilhete/' + codigoBilhete, {status: 'Cancelado'})\n            .then(res => {\n                try {\n                    if (res.data) {\n                        history.go(0);\n                    }\n                } catch (e) {\n\n                }\n            }).catch(error => {\n            console.log(error)\n        });\n\n    }\n\n\n\n\n\n    function custom_sort(a, b) {\n        let d1 = new Date(a.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n            a.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n            a.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + a.dataDaAposta.split(' ')[1]);\n\n        let d2 = new Date(b.dataDaAposta.split(' ')[0].split('/')[1] + '/' +\n            b.dataDaAposta.split(' ')[0].split('/')[0] + '/' +\n            b.dataDaAposta.split(' ')[0].split('/')[2] + \" \" + b.dataDaAposta.split(' ')[1]);\n\n        return d1.getTime() - d2.getTime();\n    }\n\n    useEffect(() => {\n\n\n        async function getBilhetesAPI() {\n\n            api.get('/api/getbilhetesg')\n                .then(res => {\n                    let l = [];\n\n                    try {\n                        let bh = res.data.bilhetes.slice();\n                        bh.sort(custom_sort);\n                        if (res.data) {\n                            setBilhetes(res.data);\n                            bh.map((b) => {\n\n\n\n                                    l.push({\n                                        id: b.id,\n                                        Banca: b.nomeBanca,\n                                        Cupom: b.codigo,\n                                        Cliente: b.nomeCliente,\n                                        Data: b.dataDaAposta,\n                                        Situacao: b.status,\n                                        Entrada: b.valorDeEntrada.toFixed(2),\n                                        Comissao: b.comissao.toFixed(2),\n                                        Cotacao: b.cotacao.toFixed(2),\n                                        Retorno: b.valorDeSaida.toFixed(2),\n                                        Tipo: b.tipoSimplesouMultiplo,\n                                        Aposta: b.tipoDeJogo, Cancelar: b.codigo,\n                                    });\n\n                        \n                            });\n\n\n                        }\n                        l.reverse();\n                        setAux(l);\n                 \n\n\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n        async function getDateAfter() {\n            api.get('/api/getdateafter').then(res => {\n\n                try {\n\n                    setDateAfter(res.data.date);\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n                console.log(error)\n            });\n        }\n\n        getDateAfter();\n\n        getBilhetesAPI();\n\n    }, []);\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">BILHETES</Typography>\n\n\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <br/>\n                <ThemeProvider theme={themeG}>\n                    <div style={{height: 900, width: '100%',}}>\n                        <DataGrid\n\n                            density=\"compact\"\n                            rows={dataAux}\n                            columns={columns}\n                            pageSize={20}\n                            rowsPerPageOptions={[20]}\n                            // checkboxSelection\n                        />\n                    </div>\n                </ThemeProvider>\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useRef, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useParams} from \"react-router\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport {api} from '../Constantes/index';\nimport PrintIcon from '@material-ui/icons/Print';\nimport {useReactToPrint} from \"react-to-print\";\nimport TextField from '@material-ui/core/TextField';\nimport Menu from '../Menu/index';\n\n\nexport default function Dashboard(props) {\n\n    let {codigoBilhete} = useParams();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [dataAux, setAux] = useState([]);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n    const [bilhetes, setBilhetes] = useState(\"\");\n    const [saldoSimples, setSaldoSimples] = useState(0);\n    const [saldoGeral, setSaldoGeral] = useState(0);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [comissao, setComissao] = useState([]);\n    const [codigoB, setCodigo] = useState(codigoBilhete);\n    const [gerenteId, setGerenteId] = useState(0);\n    const [bancaId, setBancaId] = useState(0);\n    const [statusB, setStatusB] = useState([]);\n    const [impressao, setImpressao] = useState([]);\n\n\n    const drawerWidth = 240;\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n        },\n        drawer: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        appBar: {\n            [theme.breakpoints.up('sm')]: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n            [theme.breakpoints.up('sm')]: {\n                display: 'none',\n            },\n        },\n        // necessary for content to be below app bar\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n        },\n\n        appBarSpacer: theme.mixins.toolbar,\n    }));\n\n\n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    function print() {\n        handlePrint();\n\n    }\n\n    function getCodigo(e) {\n        document.getElementById('header').innerHTML = '';\n        document.getElementById('bilhete').innerHTML = '';\n        document.getElementById('footer').innerHTML = '';\n        bilhete(e.target.value);\n        setCodigo(e.target.value);\n    }\n\n    function custom_sort(a, b) {\n        let d1 = new Date(a.dataDoJogo.split(' ')[0].split('/')[2] + '/' +\n            a.dataDoJogo.split(' ')[0].split('/')[1] + '/' +\n            a.dataDoJogo.split(' ')[0].split('/')[0] + \" \" + a.dataDoJogo.split(' ')[2]);\n\n        let d2 = new Date(b.dataDoJogo.split(' ')[0].split('/')[2] + '/' +\n            b.dataDoJogo.split(' ')[0].split('/')[1] + '/' +\n            b.dataDoJogo.split(' ')[0].split('/')[0] + \" \" + b.dataDoJogo.split(' ')[2]);\n\n        return Date.parse(d1) - Date.parse(d2);\n    }\n\n    let nb = 0;\n\n    function bilhete(codigo) {\n        document.getElementById('status').innerHTML = '';\n        try {\n            api.get('/api/getbilhete/' + codigo)\n                .then(res => {\n                    let l = [];\n                    try {\n                        if (res.data) {\n                            setBilhetes(res.data);\n\n                            document.getElementById('header').innerHTML = '\\n' +\n                                '                    <div >\\n' +\n                                '\\n' +\n                                '                        <center><h2 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\">SONHOBETS</h2></center>\\n' +\n                                '\\n' +\n                                '\\n' +\n                                '                        <hr style=\"width: 100%;border: 0;border-bottom: 2px dashed #292323;\">\\n' +\n                                '\\n' +\n                                '                        <center><h4 style=\"display: block;margin-block-start: 1.33em;margin-block-end: 1.33em;margin-inline-start: 0px;margin-inline-end: 0px;font-weight: bold;\" class=\"H3\">' + (res.data.bilhete[0].tipoSimplesouMultiplo == 'M' ? 'Aposta Multipla' : 'Aposta Simples') + '</h4></center>\\n' +\n                                '\\n' +\n                                '                        <span style=\"display: inline-block; text-align: left;\">DATA:</span> <span id=\"conteudo_txtDataBilhete\" style=\"display: inline-block\"> ' + res.data.bilhete[0].dataDaAposta + '</span><br>\\n' +\n                                '\\n' +\n                                '                        <span style=\"display: inline-block\">COLABORADOR:</span> <span style=\"display: inline-block\">' + res.data.bilhete[0].nomeBanca + '</span><br>\\n' +\n                                '\\n' +\n                                '                        <span style=\"display: inline-block\">CLIENTE:</span> <span style=\"display: inline-block\">' + res.data.bilhete[0].nomeCliente + '</span><br>\\n' +\n                                '\\n' +\n                                '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                '\\n' +\n                                '                        <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">APOSTA</span></div>\\n' +\n                                '\\n' +\n                                '                        <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">COTAÇÃO</span></div>\\n' +\n                                '\\n' +\n                                '                        <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                '\\n';\n                        }\n                        setAux(l);\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n            let b = 0;\n\n            api.get('/api/getjogo/' + codigo)\n                .then(res => {\n\n                    try {\n\n                        if (res.data) {\n                            let jg = res.data.jogo.slice();\n                            jg.sort(custom_sort);\n                            jg.map((jogo) => {\n                                nb = jogo.length;\n                                statusB.push(jogo.status);\n\n\n                                document.getElementById('bilhete').innerHTML +=\n                                    '<div id=\"conteudo_divBilheteImpressao\">\\n' +\n                                    '<div>\\n' +\n                                    '\\n' +\n                                    '                                    <b><span>Futebol - ' + jogo.dataDoJogo + '</span></b><br>\\n' +\n                                    '\\n' +\n                                    '                                    <span>' + jogo.nomeDoCampeonato + '</span><br>\\n' +\n                                    '\\n' +\n                                    '                                    <span>' + jogo.nomeDosTimes + '</span><br>\\n' +\n                                    '\\n' +\n                                    '                                    <b><span>' + jogo.tipoDeCotacao.split('--')[0] + '</span></b><br>\\n' +\n                                    '\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">' + jogo.tipoDeCotacao.split('--')[1] + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + jogo.cotacao.toFixed(2) + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Status:</span></div>\\n' +\n                                    '                                    <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + jogo.status + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                                    <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                    '\\n' +\n                                    '                                </div>\\n'\n                            });\n\n\n                            document.getElementById('status').innerHTML = statusB.indexOf('Perdeu') != -1 ?\n                                \"<b style='color: white' class='buttonRed'>Perdeu</b>\" : (statusB.indexOf('Aberto') != -1 ?\n                                    \"<b style='color: white' class='buttonBlue'>Aberto</b>\" : (statusB.filter((x) => x == 'Ganhou' || x == 'Cancelado').length) == statusB.length ?\n                                        (statusB.filter((x) => x == 'Cancelado').length) == statusB.length ?\n                                            \"<b style='color: white;' class='buttonGold'>Cancelado</b>\" : \"<b style='color: white' class='buttonGreen'>Ganhou</b>\" : \"<b style='color: white' class='buttonGold'>Cancelado</b>\");\n\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n            try {\n\n                api.get('/api/getbilhete/' + codigo)\n                    .then(res => {\n                        try {\n                            if (res.data) {\n                                document.getElementById('footer').innerHTML = '                            \\n' +\n                                    '                                \\n' +\n                                    '                            \\n' +\n                                    '\\n' +\n                                    '                        <div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Quantidade de Jogos:</span></div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">' + res.data.bilhete[0].quantidadeJogos + '</span></div>\\n' +\n                                    '                            \\n' +\n                                    '                            <div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Cotação:</span></div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span  style=\"display: inline-block\">R$ ' + res.data.bilhete[0].cotacao.toFixed(2) + '</span></div>\\n' +\n                                    '\\t\\t\\t\\t\\t\\t\\t</div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Total Apostado:</span></div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span id=\"conteudo_txtTotalApostado\" style=\"display: inline-block\">R$ ' + res.data.bilhete[0].valorDeEntrada.toFixed(2) + '</span></div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: left;\"><span style=\"display: inline-block\">Possível Retorno:</span></div>\\n' +\n                                    '\\n' +\n                                    '                            <div style=\"display: inline-block; width: 47%; text-align: right;\"><span style=\"display: inline-block\">R$ ' + res.data.bilhete[0].valorDeSaida.toFixed(2) + '</span></div>\\n' +\n                                    '                            \\n' +\n                                    '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                    '                        </div>\\n' +\n                                    '\\n' +\n                                    '                        <div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 100%; text-align: center;\"><span style=\"display: inline-block\">BILHETE</span></div>\\n' +\n                                    '                            <div style=\"display: inline-block; width: 100%; text-align: center;\">\\n' +\n                                    '                                <h2 style=\"font-weight:bold\" class=\"H3\">' + codigo + '</h2>                  \\n' +\n                                    '                            </div>\\n' +\n                                    '                            <hr style=\"width: 100%;border: 0;border-bottom: 1px dashed #292323;\">\\n' +\n                                    '                        </div>\\n' +\n                                    '\\n' +\n                                    '                        \\n' +\n                                    '\\n' +\n                                    '                        <div>\\n' +\n                                    '                            <span>Ao realizar apostas na SONHOBETS, você concorda ' +\n                                    ' com todos os termos e regras do site. Boa Sorte!</span>\\n' +\n                                    '                        </div>\\n' +\n                                    '\\n' +\n                                    '                    </div>\\n' +\n                                    '                </div>';\n                            }\n                        } catch (e) {\n\n                        }\n                    }).catch(error => {\n                    console.log(error);\n                });\n\n\n            } catch (e) {\n            }\n        } catch (e) {\n            document.getElementById('header').innerHTML = '';\n            document.getElementById('bilhete').innerHTML = '';\n            document.getElementById('footer').innerHTML = '';\n        }\n    }\n\n\n    useEffect(() => {\n\n\n\n\n        if (codigoBilhete != 'all') {\n            bilhete(codigoBilhete);\n        } else {\n            // console.log('bbbbb');\n        }\n\n\n    }, []);\n\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n                                                            <br/>\n                                                            <TextField id=\"outlined-basic\" label=\"Código do Bilhete\"\n                                                                       variant=\"outlined\"\n                                                                       onChange={getCodigo}/>\n                                                            <Grid container justify=\"space-around\">\n\n                                                            </Grid>\n\n                                                            <br/>\n\n                                                            <Button onClick={print} style={{margin: '10px'}}\n                                                                    variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                <PrintIcon/>\n                                                            </Button>\n                                                            <Button type=\"Link\"\n                                                                    href={\"whatsapp://send?text=Link+para+seu+bilhete%3a%0d%0a%0d%0ahttps%3A%2F%2Fwww.sonhobets.com.br%2F%23%2FverificarBilhete%2F\" + codigoB}\n                                                                    variant=\"contained\"\n                                                                    style={{color: 'white', backgroundColor: 'green'}}>\n                                                                <WhatsAppIcon/>\n                                                            </Button>\n\n\n                                                            <br/><br/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n                <React.Fragment>\n                    <Grid container style={{marginLeft: 20}}>\n\n                        <Grid item xs={12} md={4} sm={12}>\n\n                        </Grid>\n                        <Grid item xs={12} md={4} sm={12}>\n\n                            <div style={{\n                                width: 'calc(100% - 15%)',\n                                fontSize: 12,\n                                backgroundColor: 'rgb(248, 236, 194)',\n                                color: 'black',\n                                boxSizing: 'border-box'\n                            }} ref={componentRef}>\n                                <div id=\"header\"></div>\n                                <div id=\"bilhete\"></div>\n                                <div id=\"footer\"></div>\n                            </div>\n\n                        </Grid>\n\n                        <Grid item xs={12} md={4} sm={12}></Grid>\n                    </Grid>\n                </React.Fragment>\n                <Typography variant={\"h4\"} align={\"center\"}>\n                    <p id='status'></p>\n                </Typography>\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport {api} from \"../../pages/Constantes\";\nimport Menu from '../Menu/index';\nimport React, {useEffect, useState} from 'react';\n\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [data, setData] = useState([]);\n    const [dataAux, setAux] = useState([]);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n\n    const columns = [\"\", \"NOME\", \"BANCA\", \"\", \"\", \"EXCLUIR\"];\n\n\n    const options = {\n        rowsPerPage: 50,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: false,\n        onRowClick: (rowData, rowMeta) => {\n            const dataToState = rowData;\n            console.log(dataToState);\n        }\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    const onClickHandler = () => {\n        let listAux = [];\n        let init = 0;\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n        for (let dataAux of data) {\n            let dateReverse = new Date((dataAux[0].split(' ')[0]).split('/').reverse().join('/'));\n            if (dateReverse >= new Date(auxDate1) && dateReverse <= new Date(auxDate2)) {\n                listAux.push(dataAux);\n                init = 1;\n            }\n        }\n\n        if (init == 0) {\n            setData(dataAux);\n        } else {\n            setData(listAux);\n        }\n    };\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    function deleteClient(id) {\n\n        api.delete('/api/deletecliente/' + id)\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n\n    }\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n\n        async function getClientAPI() {\n\n            api.get('/api/getclientes')\n                .then(res => {\n                    let l = [];\n                    try {\n                        if (res.data) {\n                            res.data.clientes.map((b) => {\n                                l.push([<Typography></Typography>, b.nome, <Typography>{b.nomeBanca}</Typography>,\n                                    <Typography></Typography>, <Typography></Typography>,\n                                    <Button variant=\"contained\"\n                                            color=\"secondary\"\n                                            onClick={() => deleteClient(b.id)}><CancelIcon/></Button>]);\n                            });\n                        }\n                        setAux(l);\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error);\n            });\n\n        }\n\n        getClientAPI();\n        setData(dataAux);\n\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">CLIENTES</Typography>\n                                                            <Grid container justify=\"space-around\">\n\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n\n                                                            <br/>\n                                                            <Button onClick={onClickHandler} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/><br/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n                <React.Fragment>\n\n\n                    <MUIDataTable\n                        title={\"GERENCIAR CLIENTES\"}\n                        data={dataAux}\n                        columns={columns}\n                        options={options}\n\n                    />\n                </React.Fragment>\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {api} from '../Constantes/index';\nimport * as yup from 'yup';\nimport {useFormik} from 'formik';\nimport Menu from '../Menu/index';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n//let aux = [];\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [date, setDate] = useState([]);\n    const [day, setDay] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [bancas, setBancas] = useState(\"\");\n    const [limitG, setLimitG] = useState(\"\");\n    const [limitS, setLimitS] = useState(\"\");\n    const [telefone, setTelefone] = useState(\"\");\n    const [comissaoAoVivo, setComissaoAoVivo] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [comissaoPreJogo, setComissaoPreJogo] = useState(\"\");\n    const [apostasAoVivo, setApostasAoVivo] = useState(false);\n    const [apostasPreJogo, setApostasPreJogo] = useState(false);\n    const [imprimir, setImprimir] = useState(false);\n    const [apostas, setApostas] = useState(false);\n    const [status, setStatus] = useState(false);\n    const [manage, setManage] = useState({});\n    const [ba, setB] = useState(-1);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n\n    const classes = useStyles();\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n    const validationSchema = yup.object({\n        password1: yup\n            .string().min(4, 'Digite no minimo 4 digitos').required(),\n        password2: yup\n            .string().min(4, 'Digite no minimo 4 digitos').required()\n            .oneOf([yup.ref('password1'), ''], 'As senhas estão diferentes'),\n\n    });\n\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.post('/api/addbanca', {\n                \"nome\": nomeBanca,\n                \"login\": nomeBanca,\n                \"senha\": values.password1,\n                \"telefone\": telefone,\n                \"email\": email,\n                \"habilitarImpressao\": imprimir,\n                \"comissaoPreJogo\": comissaoPreJogo,\n                \"comissaoAoVivo\": comissaoAoVivo,\n                \"saldoSimples\": limitS,\n                \"saldoGeral\": limitG,\n                \"ativarApostasAoVivos\": apostasAoVivo,\n                \"ativarApostasPreJogo\": apostasPreJogo,\n                \"ativarApostas\": apostas,\n                \"status\": status,\n                \"gerente_id\": ba,\n\n            })\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            if (res.data.bancas == \"\") {\n                                alert('Nome da banca já existe!');\n                            } else {\n                                history.push(\"/cadastrarbancadmin\");\n                            }\n\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n    function verifyBancaHandler(e) {\n\n        let banca =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n\n        bancas.map((b) => {\n            if (b.nome == banca) {\n                setB(manage[b.nome]);\n            }\n        })\n\n\n    }\n\n    function handlerChangeApostasAovivo() {\n        if (apostasAoVivo) {\n            setApostasAoVivo(false);\n        } else {\n            setApostasAoVivo(true);\n        }\n    }\n\n    function handlerChangeApostasPreJogo() {\n        if (apostasPreJogo) {\n            setApostasPreJogo(false);\n        } else {\n            setApostasPreJogo(true);\n        }\n    }\n\n    function handlerChangeImprimir() {\n        if (imprimir) {\n            setImprimir(false);\n        } else {\n            setImprimir(true);\n        }\n    }\n\n    function handlerChangeAposta() {\n        if (apostas) {\n            setApostas(false);\n        } else {\n            setApostas(true);\n        }\n    }\n\n    function handlerChangeStatus() {\n        if (status) {\n            setStatus(false);\n        } else {\n            setStatus(true);\n        }\n    }\n\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n        let unmounted = false;\n\n\n        async function getDateAll() {\n            axios.get('http://worldclockapi.com/api/json/utc/now',\n                {\n                    headers: {\n                        'Cache-Control': 'no-cache',\n                        'Pragma': 'no-cache',\n                        'Expires': '0',\n                    }\n                }).then(res => {\n                try {\n                    let d = Date.parse(res.data.currentDateTime);\n                    d = new Date(d);\n                    d = d.setDate(d.getDate());\n\n\n                    let d1 = Date.parse(res.data.currentDateTime);\n                    d1 = new Date(d1);\n                    d1 = d1.setDate(d1.getDate() + 1);\n\n                    let d2 = Date.parse(res.data.currentDateTime);\n                    d2 = new Date(d2);\n                    d2 = d2.setDate(d2.getDate() + 2);\n\n                    d = new Date(d);\n                    d1 = new Date(d1);\n                    d2 = new Date(d2);\n\n\n                    setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                    d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                    d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                    d2.getDate()]);\n\n                    if (!unmounted) {\n                        setDay([d.getDay(), d1.getDay(), d2.getDay()]);\n                    }\n\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n                console.log(error)\n            });\n        }\n\n        getDateAll();\n\n        async function getGerenteAPI() {\n            let gerentes = {};\n            let ba = [];\n            api.get('/api/getgerencia')\n                .then(res => {\n                    try {\n                        if (res.data) {\n\n                            res.data.gerencias.map((b) => {\n                                gerentes[b.nome] = b.id;\n                                ba.push({'nome': b.nome});\n                                console.log(ba);\n                            });\n\n\n                            setBancas(ba);\n                            setManage(gerentes);\n                        }\n\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getGerenteAPI();\n\n\n        return () => {\n            unmounted = true\n        };\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    <React.Fragment>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Cadastrar Cambista\n                        </Typography>\n                        <form className={classes.form} onSubmit={formik.handleSubmit}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={nomeBanca}\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Nome\"\n                                        fullWidth\n                                        autoComplete=\"given-name\"\n                                        onChange={e => setNomeBanca(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <Autocomplete\n\n                                        id={\"resetField2\"}\n                                        freeSolo\n                                        fullWidth\n                                        onChange={verifyBancaHandler}\n                                        options={bancas}\n                                        getOptionLabel={(option) => option.nome}\n                                        renderInput={(params) =>\n                                            <TextField\n                                                {...params}\n\n                                                label=\"Gerente\"\n                                                variant=\"outlined\"/>}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={email}\n                                        id=\"email\"\n                                        name=\"email\"\n                                        label=\"E-mail\"\n                                        fullWidth\n                                        autoComplete=\"family-name\"\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={telefone}\n                                        required\n                                        id=\"telefone\"\n                                        name=\"telefone\"\n                                        label=\"Telefone\"\n                                        fullWidth\n                                        autoComplete=\"shipping address-line1\"\n                                        onChange={e => setTelefone(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={limitG}\n                                        id=\"standard-number\"\n                                        label=\"Limite Aposta Geral (R$)\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onChange={e => setLimitG(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <TextField\n                                        value={limitS}\n                                        id=\"standard-number\"\n                                        label=\"Limite Aposta Simples (R$)\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onChange={e => setLimitS(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n\n                                    <TextField\n                                        value={comissaoPreJogo}\n                                        id=\"filled-multiline-static\"\n                                        label=\"Comissão (Pré-Jogo)\"\n                                        multiline\n                                        rows={5}\n                                        variant=\"filled\"\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                        placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    *  Exemplo: 1:5;5:10;10:20\"\n                                        fullWidth\n                                        onChange={e => setComissaoPreJogo(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <TextField\n                                        value={comissaoAoVivo}\n                                        id=\"filled-multiline-static\"\n                                        label=\"Comissão (Ao Vivo)\"\n                                        multiline\n                                        rows={5}\n                                        variant=\"filled\"\n                                        InputLabelProps={{\n                                            shrink: true\n                                        }}\n                                        placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    * Exemplo: 1:5;5:10;10:20\"\n                                        fullWidth\n                                        onChange={e => setComissaoAoVivo(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n\n                                    <TextField\n                                        id=\"password1\"\n                                        name=\"password1\"\n                                        label=\"Nova Senha\"\n                                        type=\"password\"\n                                        value={formik.values.password1}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                                        helperText={formik.touched.password1 && formik.errors.password1}\n                                        fullWidth\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        id=\"password2\"\n                                        name=\"password2\"\n                                        label=\"Digite Novamente\"\n                                        type=\"password\"\n                                        value={formik.values.password2}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                                        helperText={formik.touched.password2 && formik.errors.password2}\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={apostasAoVivo}\n                                                           onClick={handlerChangeApostasAovivo}/>}\n                                        label=\"Habilitar Apostas Ao Vivo\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={apostasPreJogo}\n                                                           onClick={handlerChangeApostasPreJogo}/>}\n                                        label=\"Habilitar Apostas Pre-Jogo\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={imprimir}\n                                                           onClick={handlerChangeImprimir}/>}\n                                        label=\"Habilitar Imprimir Bilhete\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={apostas}\n                                                           onClick={handlerChangeAposta}/>}\n                                        label=\"Apostas Ativas\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" checked={status}\n                                                           onClick={handlerChangeStatus}/>}\n                                        label=\"Status\"\n                                    />\n                                </Grid>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.submit}\n                                        type=\"submit\" disableElevation>\n                                    CADASTRAR\n                                </Button>\n\n\n                            </Grid>\n                        </form>\n                    </React.Fragment>\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {api} from '../Constantes/index';\nimport * as yup from 'yup';\nimport {useFormik} from 'formik';\nimport Menu from '../Menu/index';\n\n//let aux = [];\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [date, setDate] = useState([]);\n    const [day, setDay] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [ativaApostasCambistas, setAtivaApostasCambistas] = useState(false);\n    const [nomeGerente, setNomeGerente] = useState(\"\");\n    const [limitG, setLimitG] = useState(\"\");\n    const [limitS, setLimitS] = useState(\"\");\n    const [telefone, setTelefone] = useState(\"\");\n    const [criarCambista, setCriarCambista] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [reiprimirApostas, setReiprimirApostas] = useState(false);\n    const [alterarStatusCambista, setAlterarStatusCambista] = useState(false);\n    const [alterarLimitesApostas, setAlterarLimitesApostas] = useState(false);\n    const [cancelarApostaCambista, setCancelarApostasCambistas] = useState(false);\n    const [status, setStatus] = useState(false);\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n    const validationSchema = yup.object({\n        password1: yup\n            .string().min(4, 'Digite no minimo 4 digitos').required(),\n        password2: yup\n            .string().min(4, 'Digite no minimo 4 digitos').required()\n            .oneOf([yup.ref('password1'), ''], 'As senhas estão diferentes'),\n\n    });\n\n    function exit() {\n        sessionStorage.removeItem('admin');\n        history.push('/adm');\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.post('/api/addgerencia', {\n                \"nome\": nomeGerente,\n                \"login\": nomeGerente,\n                \"senha\": values.password1,\n                \"telefone\": telefone,\n                \"email\": email,\n                \"criarCambista\": criarCambista,\n                \"cancelarApostaCambista\": cancelarApostaCambista,\n                \"reiprimirApostas\": reiprimirApostas,\n                \"limiteApostaSimples\": limitS,\n                \"limiteApostaGeral\": limitG,\n                \"alterarStatusCambista\": alterarStatusCambista,\n                \"ativaApostasCambistas\": ativaApostasCambistas,\n                \"alterarLimitesApostas\": alterarLimitesApostas,\n                \"status\": status,\n\n            })\n                .then(res => {\n                    try {\n                        if (res.data.gerencias == \"\") {\n                            alert('Nome do Gerente já existe');\n                        } else {\n                            history.push(\"/admin\");\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n    function handlerChangeCriarCambista() {\n\n        if (criarCambista) {\n            setCriarCambista(false);\n        } else {\n            setCriarCambista(true);\n        }\n    }\n\n    function handlerChangeCancelarApostasCambistas() {\n        if (cancelarApostaCambista) {\n            setCancelarApostasCambistas(false);\n        } else {\n            setCancelarApostasCambistas(true);\n        }\n    }\n\n    function handlerChangeReiprimir() {\n        if (reiprimirApostas) {\n            setReiprimirApostas(false);\n        } else {\n            setReiprimirApostas(true);\n        }\n    }\n\n    function handlerChangeAlterarStatusCambista() {\n        if (alterarStatusCambista) {\n            setAlterarStatusCambista(false);\n        } else {\n            setAlterarStatusCambista(true);\n        }\n    }\n\n    function handlerChangeStatus() {\n        if (status) {\n            setStatus(false);\n        } else {\n            setStatus(true);\n        }\n    }\n\n    function handlerChangeAtivarApostaCambista() {\n        if (ativaApostasCambistas) {\n            setAtivaApostasCambistas(false);\n        } else {\n            setAtivaApostasCambistas(true);\n        }\n    }\n\n    function handlerChangeAlterarLimitesApostas() {\n        if (alterarLimitesApostas) {\n            setAlterarLimitesApostas(false);\n        } else {\n            setAlterarLimitesApostas(true);\n        }\n    }\n\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n        let unmounted = false;\n\n\n        async function getDateAll() {\n            axios.get('http://worldclockapi.com/api/json/utc/now',\n                {\n                    headers: {\n                        'Cache-Control': 'no-cache',\n                        'Pragma': 'no-cache',\n                        'Expires': '0',\n                    }\n                }).then(res => {\n                try {\n                    let d = Date.parse(res.data.currentDateTime);\n                    d = new Date(d);\n                    d = d.setDate(d.getDate());\n\n\n                    let d1 = Date.parse(res.data.currentDateTime);\n                    d1 = new Date(d1);\n                    d1 = d1.setDate(d1.getDate() + 1);\n\n                    let d2 = Date.parse(res.data.currentDateTime);\n                    d2 = new Date(d2);\n                    d2 = d2.setDate(d2.getDate() + 2);\n\n                    d = new Date(d);\n                    d1 = new Date(d1);\n                    d2 = new Date(d2);\n\n\n                    setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                    d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                    d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                    d2.getDate()]);\n\n                    if (!unmounted) {\n                        setDay([d.getDay(), d1.getDay(), d2.getDay()]);\n                    }\n\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }).catch(error => {\n                console.log(error)\n            });\n        }\n\n        getDateAll();\n\n\n        return () => {\n            unmounted = true\n        };\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    <React.Fragment>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Cadastrar Gerente\n                        </Typography>\n                        <form className={classes.form} onSubmit={formik.handleSubmit}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={nomeGerente}\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Nome\"\n                                        fullWidth\n                                        autoComplete=\"given-name\"\n                                        onChange={e => setNomeGerente(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={email}\n                                        id=\"email\"\n                                        name=\"email\"\n                                        label=\"E-mail\"\n                                        fullWidth\n                                        autoComplete=\"family-name\"\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={telefone}\n                                        id=\"telefone\"\n                                        name=\"telefone\"\n                                        label=\"Telefone\"\n                                        fullWidth\n                                        autoComplete=\"shipping address-line1\"\n                                        onChange={e => setTelefone(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={limitG}\n                                        id=\"standard-number\"\n                                        label=\"Limite Aposta Geral (R$)\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onChange={e => setLimitG(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <TextField\n                                        value={limitS}\n                                        id=\"standard-number\"\n                                        label=\"Limite Aposta Simples (R$)\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onChange={e => setLimitS(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n\n                                    <TextField\n                                        id=\"password1\"\n                                        name=\"password1\"\n                                        label=\"Nova Senha\"\n                                        type=\"password\"\n                                        value={formik.values.password1}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                                        helperText={formik.touched.password1 && formik.errors.password1}\n                                        fullWidth\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        id=\"password2\"\n                                        name=\"password2\"\n                                        label=\"Digite Novamente\"\n                                        type=\"password\"\n                                        value={formik.values.password2}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                                        helperText={formik.touched.password2 && formik.errors.password2}\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={criarCambista}\n                                                           onClick={handlerChangeCriarCambista}/>}\n                                        label=\"Habilitar Criar Cambista\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={reiprimirApostas}\n                                                           onClick={handlerChangeReiprimir}/>}\n                                        label=\"Habilitar Reiprimir Bilhete\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={alterarStatusCambista}\n                                                           onClick={handlerChangeAlterarStatusCambista}/>}\n                                        label=\"Habilitar Status Cambista\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={alterarLimitesApostas}\n                                                           onClick={handlerChangeAlterarLimitesApostas}/>}\n                                        label=\"Alterar Limites\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={cancelarApostaCambista}\n                                                           onClick={handlerChangeCancelarApostasCambistas}/>}\n                                        label=\"Cancelar Apostas\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={ativaApostasCambistas}\n                                                           onClick={handlerChangeAtivarApostaCambista}/>}\n                                        label=\"Habilitar Apostas Cambista\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\"\n                                                           checked={status}\n                                                           onClick={handlerChangeStatus}/>}\n                                        label=\"Status\"\n                                    />\n                                </Grid>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.submit}\n                                        type=\"submit\" disableElevation>\n                                    CADASTRAR\n                                </Button>\n\n\n                            </Grid>\n                        </form>\n                    </React.Fragment>\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport {api} from '../Constantes/index';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {useParams} from \"react-router\";\nimport * as yup from 'yup';\nimport {useFormik} from 'formik';\nimport Menu from '../Menu/index';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nexport default function Dashboard() {\n    let {id} = useParams();\n\n\n    let history = useHistory();\n    const [date, setDate] = useState([]);\n    const [day, setDay] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [nomeBanca, setNomeBanca] = useState(\"\");\n    const [limitG, setLimitG] = useState(\"\");\n    const [limitS, setLimitS] = useState(\"\");\n    const [telefone, setTelefone] = useState(\"\");\n    const [comissaoAoVivo, setComissaoAoVivo] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [comissaoPreJogo, setComissaoPreJogo] = useState(\"\");\n    const [senha, setSenha] = useState(\"\");\n    const [apostasAoVivo, setApostasAoVivo] = useState(false);\n    const [apostasPreJogo, setApostasPreJogo] = useState(false);\n    const [imprimir, setImprimir] = useState(false);\n    const [apostas, setApostas] = useState(false);\n    const [status, setStatus] = useState(false);\n    const [idCambista, setidCambista] = useState(0);\n    const [manage, setManage] = useState({});\n    const [ba, setB] = useState(-1);\n    const [bancas, setBancas] = useState(\"\");\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n\n    const validationSchema = yup.object({\n        password1: yup\n            .string().min(4, 'Digite no minimo 4 digitos'),\n        password2: yup\n            .string().min(4, 'Digite no minimo 4 digitos')\n            .oneOf([yup.ref('password1'), ''], 'As senhas estão diferentes'),\n\n    });\n\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.put('/api/updatebanca/' + id, {\n                \"nome\": nomeBanca,\n                \"login\": nomeBanca,\n                \"senha\": values.password1 != '' ? values.password1 : senha,\n                \"telefone\": telefone,\n                \"email\": email,\n                \"habilitarImpressao\": imprimir,\n                \"comissaoPreJogo\": comissaoPreJogo,\n                \"comissaoAoVivo\": comissaoAoVivo,\n                \"saldoSimples\": limitS,\n                \"saldoGeral\": limitG,\n                \"ativarApostasAoVivos\": apostasAoVivo,\n                \"ativarApostasPreJogo\": apostasPreJogo,\n                \"ativarApostas\": apostas,\n                \"status\": status,\n                \"gerente_id\": ba,\n\n            })\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            console.log(res.data);\n                            history.push(\"/cadastrarbancadmin\");\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n    function verifyBancaHandler(e) {\n\n        let banca =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n\n        bancas.map((b) => {\n            if (b.nome == banca) {\n                setB(manage[b.nome]);\n            }\n        })\n\n\n    }\n\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n        let unmounted = false;\n\n        async function getDateAll() {\n\n            try {\n                let d = Date.parse(new Date());\n                d = new Date(d);\n                d = d.setDate(d.getDate());\n\n\n                let d1 = Date.parse(new Date());\n                d1 = new Date(d1);\n                d1 = d1.setDate(d1.getDate() + 1);\n\n                let d2 = Date.parse(new Date());\n                d2 = new Date(d2);\n                d2 = d2.setDate(d2.getDate() + 2);\n\n                d = new Date(d);\n                d1 = new Date(d1);\n                d2 = new Date(d2);\n\n\n                setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                d2.getDate()]);\n\n                if (!unmounted) {\n                    setDay([d.getDay(), d1.getDay(), d2.getDay()]);\n                    console.log([d.getDay(), d1.getDay(), d2.getDay()]);\n                }\n\n\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n        async function getBancaAPI() {\n\n            api.get('/api/getbanca/' + id)\n                .then(res => {\n                    try {\n                        if (res.data) {\n\n                            setApostasAoVivo(res.data.bancas.ativarApostasAoVivos);\n                            setApostas(res.data.bancas.ativarApostas);\n                            setApostasPreJogo(res.data.bancas.ativarApostasPreJogo);\n                            setNomeBanca(res.data.bancas.login);\n                            setLimitG(res.data.bancas.saldoGeral);\n                            setLimitS(res.data.bancas.saldoSimples);\n                            setStatus(res.data.bancas.status);\n                            setImprimir(res.data.bancas.habilitarImpressao);\n                            setComissaoAoVivo(res.data.bancas.comissaoAoVivo);\n                            setComissaoPreJogo(res.data.bancas.comissaoPreJogo);\n                            setTelefone(res.data.bancas.telefone);\n                            setEmail(res.data.bancas.email);\n                            setSenha(res.data.bancas.senha);\n                            setidCambista(res.data.bancas.id);\n                            setB(res.data.bancas.gerente);\n\n\n                            let gerentes = {};\n                            let ban = [];\n                            api.get('/api/getgerencia')\n                                .then(res => {\n                                    try {\n                                        if (res.data) {\n\n                                            res.data.gerencias.map((b) => {\n                                                gerentes[b.id] = b.nome;\n                                                gerentes[b.nome] = b.id;\n                                                ban.push({'nome': b.nome});\n                                                console.log(ban);\n                                            });\n\n\n                                            setBancas(ban);\n                                            setManage(gerentes);\n\n                                        }\n\n                                    } catch (e) {\n\n                                    }\n                                }).catch(error => {\n                                console.log(error)\n                            });\n\n\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n\n        getBancaAPI();\n        getDateAll();\n\n\n        return () => {\n            unmounted = true\n        };\n\n    }, []);\n\n\n    function handlerChangeApostasAovivo() {\n        if (apostasAoVivo) {\n            setApostasAoVivo(false);\n        } else {\n            setApostasAoVivo(true);\n        }\n    }\n\n    function handlerChangeApostasPreJogo() {\n        if (apostasPreJogo) {\n            setApostasPreJogo(false);\n        } else {\n            setApostasPreJogo(true);\n        }\n    }\n\n    function handlerChangeImprimir() {\n        if (imprimir) {\n            setImprimir(false);\n        } else {\n            setImprimir(true);\n        }\n    }\n\n    function handlerChangeAposta() {\n        if (apostas) {\n            setApostas(false);\n        } else {\n            setApostas(true);\n        }\n    }\n\n    function handlerChangeStatus() {\n        if (status) {\n            setStatus(false);\n        } else {\n            setStatus(true);\n        }\n    }\n\n    function deleteCambista() {\n\n        api.delete('/api/deletebanca/' + idCambista)\n            .then(res => {\n                try {\n                    if (res.data) {\n                        history.push(\"/cadastrarbancadmin\");\n                    }\n                } catch (e) {\n                    history.push(\"/cadastrarbancadmin\");\n                }\n            }).catch(error => {\n            history.push(\"/cadastrarbancadmin\");\n            console.log(error);\n\n        });\n\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n\n                    <Typography variant=\"h6\" gutterBottom>\n                        Editar Cambista\n                    </Typography>\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={nomeBanca}\n                                    disabled\n                                    required\n                                    id=\"name\"\n                                    name=\"name\"\n                                    label=\"Nome\"\n                                    fullWidth\n                                    autoComplete=\"given-name\"\n                                    onChange={e => setNomeBanca(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <Autocomplete\n                                    id={\"resetField2\"}\n                                    freeSolo\n                                    fullWidth\n                                    onChange={verifyBancaHandler}\n                                    options={bancas}\n                                    getOptionLabel={(option) => option.nome}\n                                    renderInput={(params) =>\n                                        <TextField\n                                            {...params}\n\n                                            label={manage[ba]}\n                                            variant=\"outlined\"/>}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={email}\n                                    id=\"email\"\n                                    name=\"email\"\n                                    label=\"E-mail\"\n                                    fullWidth\n                                    autoComplete=\"family-name\"\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    value={telefone}\n                                    required\n                                    id=\"telefone\"\n                                    name=\"telefone\"\n                                    label=\"Telefone\"\n                                    fullWidth\n                                    autoComplete=\"shipping address-line1\"\n                                    onChange={e => setTelefone(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    value={limitG}\n                                    id=\"standard-number\"\n                                    label=\"Limite Aposta Geral (R$)\"\n                                    type=\"number\"\n                                    fullWidth\n                                    onChange={e => setLimitG(e.target.value)}\n                                />\n                                <br/>\n                                <br/>\n                                <TextField\n                                    value={limitS}\n                                    id=\"standard-number\"\n                                    label=\"Limite Aposta Simples (R$)\"\n                                    type=\"number\"\n                                    fullWidth\n                                    onChange={e => setLimitS(e.target.value)}\n                                />\n                                <br/>\n                                <br/>\n\n                                <TextField\n                                    value={comissaoPreJogo}\n                                    id=\"filled-multiline-static\"\n                                    label=\"Comissão (Pré-Jogo)\"\n                                    multiline\n                                    rows={5}\n                                    variant=\"filled\"\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                    placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    *  Exemplo: 1:5;5:10;10:20\"\n                                    fullWidth\n                                    onChange={e => setComissaoPreJogo(e.target.value)}\n                                />\n                                <br/>\n                                <br/>\n                                <TextField\n                                    value={comissaoAoVivo}\n                                    id=\"filled-multiline-static\"\n                                    label=\"Comissão (Ao Vivo)\"\n                                    multiline\n                                    rows={5}\n                                    variant=\"filled\"\n                                    InputLabelProps={{\n                                        shrink: true\n                                    }}\n                                    placeholder=\"- Observação:\n                                    * 1 jogo 5% de comissão, colocar 1:5;\n                                    * 2 jogos 6% de comissão, colocar 2:6, separados por (;)\n                                    * Para quantidade de jogos acima do ultimo valor na lista sará considerada a última comissão.\n                                    * Exemplo: 1:5;5:10;10:20\"\n                                    fullWidth\n                                    onChange={e => setComissaoAoVivo(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n\n                                <TextField\n                                    id=\"password1\"\n                                    name=\"password1\"\n                                    label=\"Nova Senha\"\n                                    type=\"password\"\n                                    value={formik.values.password1}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                                    helperText={formik.touched.password1 && formik.errors.password1}\n                                    fullWidth\n                                    autoComplete=\"shipping address-level2\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    id=\"password2\"\n                                    name=\"password2\"\n                                    label=\"Digite Novamente\"\n                                    type=\"password\"\n                                    value={formik.values.password2}\n                                    onChange={formik.handleChange}\n                                    error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                                    helperText={formik.touched.password2 && formik.errors.password2}\n                                    autoComplete=\"shipping address-level2\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={apostasAoVivo}\n                                                       onClick={handlerChangeApostasAovivo}/>}\n                                    label=\"Habilitar Apostas Ao Vivo\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={apostasPreJogo}\n                                                       onClick={handlerChangeApostasPreJogo}/>}\n                                    label=\"Habilitar Apostas Pre-Jogo\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={imprimir}\n                                                       onClick={handlerChangeImprimir}/>}\n                                    label=\"Habilitar Imprimir Bilhete\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                       checked={apostas}\n                                                       onClick={handlerChangeAposta}/>}\n                                    label=\"Apostas Ativas\"\n                                />\n\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" checked={status}\n                                                       onClick={handlerChangeStatus}/>}\n                                    label=\"Status\"\n                                />\n                            </Grid>\n                            <Button variant=\"contained\" color=\"primary\" className={classes.submit}\n                                    type=\"submit\" disableElevation>\n                                ATUALIZAR\n                            </Button>\n\n                            <Button variant=\"contained\" color=\"secondary\"\n                                    disableElevation style={{marginLeft: '10px'}}\n                                    onClick={deleteCambista}>\n                                EXCLUIR\n                            </Button>\n                        </Grid>\n                    </form>\n\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {useParams} from \"react-router\";\nimport {api} from '../Constantes/index';\nimport * as yup from 'yup';\nimport {useFormik} from 'formik';\nimport Menu from '../Menu/index';\n\nexport default function Dashboard() {\n    let {id} = useParams();\n\n\n    let history = useHistory();\n    const [date, setDate] = useState([]);\n    const [day, setDay] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [ativaApostasCambistas, setAtivaApostasCambistas] = useState(false);\n    const [nomeGerente, setNomeGerente] = useState(\"\");\n    const [limitG, setLimitG] = useState(\"\");\n    const [limitS, setLimitS] = useState(\"\");\n    const [telefone, setTelefone] = useState(\"\");\n    const [criarCambista, setCriarCambista] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [reiprimirApostas, setReiprimirApostas] = useState(false);\n    const [alterarStatusCambista, setAlterarStatusCambista] = useState(false);\n    const [alterarLimitesApostas, setAlterarLimitesApostas] = useState(false);\n    const [cancelarApostaCambista, setCancelarApostasCambistas] = useState(false);\n    const [status, setStatus] = useState(false);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n    const validationSchema = yup.object({\n        password1: yup\n            .string().min(4, 'Digite no minimo 4 digitos'),\n        password2: yup\n            .string().min(4, 'Digite no minimo 4 digitos')\n            .oneOf([yup.ref('password1'), ''], 'As senhas estão diferentes'),\n\n    });\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.put('/api/updategerencia/' + id, {\n                \"nome\": nomeGerente,\n                \"login\": nomeGerente,\n                \"senha\": values.password1,\n                \"telefone\": telefone,\n                \"email\": email,\n                \"criarCambista\": criarCambista,\n                \"cancelarApostaCambista\": cancelarApostaCambista,\n                \"reiprimirApostas\": reiprimirApostas,\n                \"limiteApostaSimples\": limitS,\n                \"limiteApostaGeral\": limitG,\n                \"alterarStatusCambista\": alterarStatusCambista,\n                \"ativaApostasCambistas\": ativaApostasCambistas,\n                \"alterarLimitesApostas\": alterarLimitesApostas,\n                \"status\": status,\n\n            })\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            history.push(\"/admin\");\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n        let unmounted = false;\n\n        async function getDateAll() {\n\n            try {\n                let d = Date.parse(new Date());\n                d = new Date(d);\n                d = d.setDate(d.getDate());\n\n\n                let d1 = Date.parse(new Date());\n                d1 = new Date(d1);\n                d1 = d1.setDate(d1.getDate() + 1);\n\n                let d2 = Date.parse(new Date());\n                d2 = new Date(d2);\n                d2 = d2.setDate(d2.getDate() + 2);\n\n                d = new Date(d);\n                d1 = new Date(d1);\n                d2 = new Date(d2);\n\n\n                setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                d2.getDate()]);\n\n                if (!unmounted) {\n                    setDay([d.getDay(), d1.getDay(), d2.getDay()]);\n                    console.log([d.getDay(), d1.getDay(), d2.getDay()]);\n                }\n\n\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n        async function getGerenteAPI() {\n\n            api.get('/api/getgerencia/' + id)\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            setNomeGerente(res.data.gerencia.nome);\n                            setTelefone(res.data.gerencia.telefone);\n                            setEmail(res.data.gerencia.email);\n                            setLimitG(res.data.gerencia.limiteApostaGeral);\n                            setLimitS(res.data.gerencia.limiteApostaSimples);\n                            setStatus(res.data.gerencia.status);\n                            setCriarCambista(res.data.gerencia.criarCambista);\n                            setReiprimirApostas(res.data.gerencia.reiprimirApostas);\n                            setAlterarStatusCambista(res.data.gerencia.alterarStatusCambista);\n                            setAlterarLimitesApostas(res.data.gerencia.alterarLimitesApostas);\n                            setCancelarApostasCambistas(res.data.gerencia.cancelarApostaCambista);\n                            setAtivaApostasCambistas(res.data.gerencia.ativaApostasCambistas);\n\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getGerenteAPI();\n        getDateAll();\n\n\n        return () => {\n            unmounted = true\n        };\n\n    }, []);\n\n\n    function handlerChangeCriarCambista() {\n\n        if (criarCambista) {\n            setCriarCambista(false);\n        } else {\n            setCriarCambista(true);\n        }\n    }\n\n    function handlerChangeCancelarApostasCambistas() {\n        if (cancelarApostaCambista) {\n            setCancelarApostasCambistas(false);\n        } else {\n            setCancelarApostasCambistas(true);\n        }\n    }\n\n    function handlerChangeReiprimir() {\n        if (reiprimirApostas) {\n            setReiprimirApostas(false);\n        } else {\n            setReiprimirApostas(true);\n        }\n    }\n\n    function handlerChangeAlterarStatusCambista() {\n        if (alterarStatusCambista) {\n            setAlterarStatusCambista(false);\n        } else {\n            setAlterarStatusCambista(true);\n        }\n    }\n\n    function handlerChangeStatus() {\n        if (status) {\n            setStatus(false);\n        } else {\n            setStatus(true);\n        }\n    }\n\n    function handlerChangeAtivarApostaCambista() {\n        if (ativaApostasCambistas) {\n            setAtivaApostasCambistas(false);\n        } else {\n            setAtivaApostasCambistas(true);\n        }\n    }\n\n    function handlerChangeAlterarLimitesApostas() {\n        if (alterarLimitesApostas) {\n            setAlterarLimitesApostas(false);\n        } else {\n            setAlterarLimitesApostas(true);\n        }\n    }\n\n    function deleteGerente() {\n\n        api.delete('/api/deletegerencia/' + id)\n            .then(res => {\n                try {\n                    if (res.data) {\n                        history.push(\"/admin\");\n                    }\n                } catch (e) {\n                    history.push(\"/admin\");\n                }\n            }).catch(error => {\n            history.push(\"/admin\");\n            console.log(error);\n\n        });\n\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    <React.Fragment>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Editar Gerente\n                        </Typography>\n                        <form className={classes.form} onSubmit={formik.handleSubmit}>\n                            <Grid container spacing={3}>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={nomeGerente}\n                                        disabled\n                                        required\n                                        id=\"name\"\n                                        name=\"name\"\n                                        label=\"Nome\"\n                                        fullWidth\n                                        autoComplete=\"given-name\"\n                                        onChange={e => setNomeGerente(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={email}\n                                        id=\"email\"\n                                        name=\"email\"\n                                        label=\"E-mail\"\n                                        fullWidth\n                                        autoComplete=\"family-name\"\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={telefone}\n                                        id=\"telefone\"\n                                        name=\"telefone\"\n                                        label=\"Telefone\"\n                                        fullWidth\n                                        autoComplete=\"shipping address-line1\"\n                                        onChange={e => setTelefone(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={limitG}\n                                        id=\"standard-number\"\n                                        label=\"Limite Aposta Geral (R$)\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onChange={e => setLimitG(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <TextField\n                                        value={limitS}\n                                        id=\"standard-number\"\n                                        label=\"Limite Aposta Simples (R$)\"\n                                        type=\"number\"\n                                        fullWidth\n                                        onChange={e => setLimitS(e.target.value)}\n                                    />\n                                    <br/>\n                                    <br/>\n\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n\n                                    <TextField\n                                        id=\"password1\"\n                                        name=\"password1\"\n                                        label=\"Nova Senha\"\n                                        type=\"password\"\n                                        value={formik.values.password1}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                                        helperText={formik.touched.password1 && formik.errors.password1}\n                                        fullWidth\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        fullWidth\n                                        id=\"password2\"\n                                        name=\"password2\"\n                                        label=\"Digite Novamente\"\n                                        type=\"password\"\n                                        value={formik.values.password2}\n                                        onChange={formik.handleChange}\n                                        error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                                        helperText={formik.touched.password2 && formik.errors.password2}\n                                        autoComplete=\"shipping address-level2\"\n                                    />\n                                </Grid>\n\n                                <Grid item xs={12}>\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={criarCambista}\n                                                           onClick={handlerChangeCriarCambista}/>}\n                                        label=\"Habilitar Criar Cambista\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={reiprimirApostas}\n                                                           onClick={handlerChangeReiprimir}/>}\n                                        label=\"Habilitar Reiprimir Bilhete\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={alterarStatusCambista}\n                                                           onClick={handlerChangeAlterarStatusCambista}/>}\n                                        label=\"Habilitar Status Cambista\"\n                                    />\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={alterarLimitesApostas}\n                                                           onClick={handlerChangeAlterarLimitesApostas}/>}\n                                        label=\"Alterar Limites\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={cancelarApostaCambista}\n                                                           onClick={handlerChangeCancelarApostasCambistas}/>}\n                                        label=\"Cancelar Apostas\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\"\n                                                           checked={ativaApostasCambistas}\n                                                           onClick={handlerChangeAtivarApostaCambista}/>}\n                                        label=\"Habilitar Apostas Cambista\"\n                                    />\n\n                                    <FormControlLabel\n                                        control={<Checkbox color=\"secondary\" name=\"saveAddress\"\n                                                           checked={status}\n                                                           onClick={handlerChangeStatus}/>}\n                                        label=\"Status\"\n                                    />\n                                </Grid>\n                                <Button variant=\"contained\" color=\"primary\" className={classes.submit}\n                                        type=\"submit\" disableElevation>\n                                    ATUALIZAR\n                                </Button>\n\n                                <Button variant=\"contained\" color=\"secondary\"\n                                        disableElevation style={{marginLeft: '10px'}}\n                                        onClick={deleteGerente}>\n                                    EXCLUIR\n                                </Button>\n\n\n                            </Grid>\n                        </form>\n                    </React.Fragment>\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport TableCell from '@material-ui/core/TableCell';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport {Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis} from 'recharts';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Select from '@material-ui/core/Select';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Menu from '../Menu/index';\n\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n        '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n        },\n    },\n}))(TableRow);\n\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [totalEntrada, setTotalEntrada] = useState({});\n    const [totalEntradaP, setTotalEntradaP] = useState(0);\n    const [totalEntradaV, setTotalEntradaV] = useState(0);\n    const [entradasAbertas, setEntradasAbertas] = useState({});\n    const [entradasAbertasP, setEntradasAbertasP] = useState(0);\n    const [entradasAbertasV, setEntradasAbertasV] = useState(0);\n    const [saidas, setSaidas] = useState({});\n    const [saidasP, setSaidasP] = useState(0);\n    const [saidasV, setSaidasV] = useState(0);\n    const [comissoes, setComissoes] = useState({});\n    const [comissoesP, setComissoesP] = useState(0);\n    const [comissoesV, setComissoesV] = useState(0);\n    const [nomesBancas, setNomesBancas] = useState(new Set());\n    const [nomesAux, setNomeAux] = useState(new Set());\n    const [total, setTotal] = useState({});\n    const [totalP, setTotalP] = useState(0);\n    const [totalV, setTotalV] = useState(0);\n    const [dataCambista, setDataCambista] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n    const [dataAuxB, setDataAuxB] = useState([]);\n    const [balanco, setBalanco] = useState(0);\n    const [gerentes, setGerentes] = useState({});\n    const [done, setDone] = useState(0);\n    const [graph, setGraph] = useState(0);\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n    const [nome, setNome] = React.useState('Todas');\n    const [openS, setOpenS] = React.useState(false);\n\n    const handleChangeS = (event) => {\n        setNome(event.target.value);\n    };\n\n    const handleCloseS = () => {\n        setOpenS(false);\n    };\n\n    const handleOpenS = () => {\n        setOpenS(true);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const relatorios = [\n        {\n            \"name\": \"Entradas\",\n            \"Pré-Jogo\": totalEntradaP,\n            \"Ao Vivo\": totalEntradaV,\n\n        },\n        {\n            \"name\": \"Entradas Abertas\",\n            \"Pré-Jogo\": entradasAbertasP,\n            \"Ao Vivo\": entradasAbertasV,\n\n        },\n        {\n            \"name\": \"Saídas\",\n            \"Pré-Jogo\": saidasP,\n            \"Ao Vivo\": saidasV,\n\n        },\n        {\n            \"name\": \"Comissões\",\n            \"Pré-Jogo\": comissoesP,\n            \"Ao Vivo\": comissoesV,\n\n        },\n        {\n            \"name\": \"Total\",\n            \"Pré-Jogo\": totalP,\n            \"Ao Vivo\": totalV,\n\n        }\n    ]\n\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    let d = [];\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n        async function gerenteAPI(){\n            api.get('/api/getgerencia')\n                .then(res => {\n                    if(res.data){\n                        res.data.gerencias.map((g) =>{\n                            gerentes[g.nome] = g.id;\n                            nomesAux.add(g.nome);\n                        })\n                    }\n                    setNomeAux(nomesAux);\n                }).catch(error => {\n                console.log(error)\n            });\n        }\n\n\n        async function getBancasAPI() {\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"tb\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n            api.get('/api/getbilhetesgerentecaixaAdmin')\n                .then(res => {\n                    try {\n                        let bancas = [];\n                        let entradas = 0;\n                        let abertos = 0;\n                        let ganhos = 0;\n                        let comissao = 0;\n                        let entradasV = 0;\n                        let abertosV = 0;\n                        let ganhosV = 0;\n                        let comissaoV = 0;\n                        let totalPP = 0;\n                        let totalVV = 0;\n                        let b = 0;\n                        if (res.data) {\n\n\n                            entradas += res.data.bilhetes.totalEntrada[0];\n                            entradasV += res.data.bilhetes.totalEntrada[1];\n\n\n                            abertos += res.data.bilhetes.entradasAberto[0];\n                            abertosV += res.data.bilhetes.entradasAberto[1];\n\n                            ganhos += res.data.bilhetes.saidas[0];\n                            ganhosV += res.data.bilhetes.saidas[1];\n\n                            comissao += res.data.bilhetes.comissoes[0];\n                            comissaoV += res.data.bilhetes.comissoes[1];\n\n                            totalPP += res.data.bilhetes.total[0];\n                            totalVV += res.data.bilhetes.total[1];\n\n                            setDone((((entradas + entradasV) -\n                                (ganhos + ganhosV) -\n                                (comissao + comissaoV))));\n                            setTotalEntradaP(entradas);\n                            setTotalEntradaV(entradasV);\n                            setEntradasAbertasP(abertos);\n                            setEntradasAbertasV(abertosV);\n                            setSaidasP(ganhos);\n                            setSaidasV(ganhosV);\n                            setComissoesP(comissao);\n                            setComissoesV(comissaoV);\n                            setTotalP(totalPP);\n                            setTotalV(totalVV);\n\n                            }\n                            document.getElementById(\"re\").style.display = \"block\";\n                            document.getElementById(\"load\").style.display = \"none\";\n\n\n\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        gerenteAPI();\n\n        getBancasAPI();\n\n\n    }, []);\n\n\n    const getDatas = () => {\n        let entradas = 0;\n        let abertos = 0;\n        let ganhos = 0;\n        let comissao = 0;\n        let entradasV = 0;\n        let abertosV = 0;\n        let ganhosV = 0;\n        let comissaoV = 0;\n        let totalPP = 0;\n        let totalVV = 0;\n        setDone(0);\n\n\n        let n = '';\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n        if (new Date(auxDate1) <= new Date(auxDate2)) {\n\n            document.getElementById(\"re\").style.display = \"none\";\n            document.getElementById(\"load\").style.display = \"block\";\n            api.get('/api/getbilhetesgerentedatesA' +\n                '/' + auxDate1 + '/' + auxDate2 + '/'  + nome )\n                .then(res => {\n                    let bancas = [];\n                    try {\n\n\n                        if (res.data) {\n\n                            for(let b in res.data.bilhetes) {\n\n                                bancas.push(b);\n\n                                totalEntrada[b] = res.data.bilhetes[b].totalEntrada[0]+res.data.bilhetes[b].totalEntrada[1];\n                                setTotalEntrada(totalEntrada);\n                                entradasAbertas[b] = res.data.bilhetes[b].entradasAberto[0]+res.data.bilhetes[b].entradasAberto[1];\n                                setEntradasAbertas(entradasAbertas);\n                                saidas[b] = res.data.bilhetes[b].saidas[0]+res.data.bilhetes[b].saidas[1];\n                                setSaidas(saidas);\n                                comissoes[b] = res.data.bilhetes[b].comissoes[0]+res.data.bilhetes[b].comissoes[1];\n                                setComissoes(comissoes);\n                                total[b] = res.data.bilhetes[b].total[0]+res.data.bilhetes[b].total[1];\n                                setTotal(total);\n\n                                entradas += res.data.bilhetes[b].totalEntrada[0];\n                                entradasV += res.data.bilhetes[b].totalEntrada[1];\n\n\n                                abertos += res.data.bilhetes[b].entradasAberto[0];\n                                abertosV += res.data.bilhetes[b].entradasAberto[1];\n\n                                ganhos += res.data.bilhetes[b].saidas[0];\n                                ganhosV += res.data.bilhetes[b].saidas[1];\n\n                                comissao += res.data.bilhetes[b].comissoes[0];\n                                comissaoV += res.data.bilhetes[b].comissoes[1];\n\n                                totalPP += res.data.bilhetes[b].total[0];\n                                totalVV += res.data.bilhetes[b].total[1];\n\n\n\n                                setDone((((entradas + entradasV) -\n                                    (ganhos + ganhosV) -\n                                    (comissao + comissaoV))));\n                                setTotalEntradaP(entradas);\n                                setTotalEntradaV(entradasV);\n                                setEntradasAbertasP(abertos);\n                                setEntradasAbertasV(abertosV);\n                                setSaidasP(ganhos);\n                                setSaidasV(ganhosV);\n                                setComissoesP(comissao);\n                                setComissoesV(comissaoV);\n                                setTotalP(totalPP);\n                                setTotalV(totalVV);\n                            }\n                        }\n                        document.getElementById(\"re\").style.display = \"block\";\n                        document.getElementById(\"tb\").style.display = \"block\";\n                        document.getElementById(\"load\").style.display = \"none\";\n                        setNomesBancas(bancas);\n\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n            setNomesBancas(nomesBancas);\n            setDataAux([]);\n        }\n\n\n    }\n\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">RELATÓRIO</Typography>\n                                                            <Grid container justify=\"space-around\">\n\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n                                                            <FormControl className={classes.formControl}>\n                                                                <InputLabel id=\"demo-controlled-open-select-label\">Selecione\n                                                                    uma Gerencia</InputLabel>\n                                                                <Select\n                                                                    labelId=\"demo-controlled-open-select-label\"\n                                                                    id=\"demo-controlled-open-select\"\n                                                                    open={openS}\n                                                                    onClose={handleCloseS}\n                                                                    onOpen={handleOpenS}\n                                                                    value={nome}\n                                                                    onChange={handleChangeS}\n                                                                    style={{width: '280px'}}\n                                                                >\n                                                                    <MenuItem value=\"Todas\">\n                                                                        <em>Todas</em>\n                                                                    </MenuItem>\n                                                                    {[...nomesAux].map((n) => (\n                                                                        <MenuItem value={n}>{n}</MenuItem>\n                                                                    ))}\n\n                                                                </Select>\n                                                            </FormControl>\n                                                            <br/>\n                                                            <br/>\n                                                            <Button onClick={getDatas} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/>\n                                                            <br/>\n                                                        </Grid>\n\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n                                        <br/>\n                                        <div id=\"re\">\n                                            {done < 0 ? <Typography variant=\"h5\" align=\"center\">\n                                                Balanço: <b style={{color: 'red'}}>R$ {done.toFixed(2)}</b>\n                                            </Typography> : <Typography variant=\"h5\" align=\"center\">\n                                                Balanço: <b style={{color: 'green'}}>R$ {done.toFixed(2)}</b>\n                                            </Typography>}\n                                            <br/>\n                                            <Grid item>\n\n                                                <ResponsiveContainer width='100%' height={400}>\n                                                    <BarChart data={graph == 0 ? relatorios : graph}>\n                                                        <CartesianGrid strokeDasharray=\"3 3\"/>\n                                                        <XAxis dataKey=\"name\"/>\n                                                        <YAxis/>\n                                                        <Tooltip/>\n                                                        <Legend/>\n                                                        <Bar dataKey=\"Pré-Jogo\" fill=\"#8884d8\"/>\n                                                        <Bar dataKey=\"Ao Vivo\" fill=\"#82ca9d\"/>\n                                                    </BarChart>\n                                                </ResponsiveContainer>\n\n                                            </Grid>\n                                            <br/>\n                                            <br/>\n                                            <Grid item>\n                                                <TableContainer component={Paper} id=\"tb\">\n\n                                                    <Table stickyHeader aria-label=\"sticky table\">\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>BANCA</b></StyledTableCell>\n                                                                <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                                    ENTRADAS</b></StyledTableCell>\n                                                                <StyledTableCell align={\"center\"}><b>ENTRADAS EM ABERTO</b></StyledTableCell>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                                <StyledTableCell\n                                                                    align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n\n                                                        <TableBody>\n\n                                                            {[...nomesBancas].map((banca) => (\n                                                                    <StyledTableRow>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                {banca}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {totalEntrada[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {entradasAbertas[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {saidas[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            <Typography variant=\"h5\">\n                                                                                R$ {comissoes[banca].toFixed(2)}\n                                                                            </Typography>\n                                                                        </StyledTableCell>\n                                                                        <StyledTableCell align={\"center\"}\n                                                                                         style={{width: '10px'}}>\n                                                                            {total[banca] < 0 ?\n                                                                                <Typography variant=\"h5\">\n                                                                                    <b style={{color: 'red'}}>R$\n                                                                                        -{Math.abs(total[banca]).toFixed(2)}</b>\n                                                                                </Typography> : <Typography variant=\"h5\">\n                                                                                    <b style={{color: 'green'}}>R$ {Math.abs(total[banca]).toFixed(2)}</b>\n                                                                                </Typography>}\n\n                                                                        </StyledTableCell>\n                                                                    </StyledTableRow>\n                                                            ))}\n\n\n                                                        </TableBody>\n                                                    </Table>\n                                                </TableContainer>\n                                            </Grid></div><div id=\"load\" style={{textAlign: 'center'}}>Carregando...</div>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport {Link, useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport InboxIcon from '@material-ui/icons/Inbox';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport PersonIcon from '@material-ui/icons/Person';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport {api} from '../Constantes/index';\nimport {KeyboardDatePicker, MuiPickersUtilsProvider} from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {pt} from 'date-fns/locale';\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\n\n\nlet tab;\nlet date = [];\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: \"#3f51b5\",\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [open, setOpen] = useState(false);\n    const [live, setLive] = useState([]);\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [openNav, setOpenNav] = useState(false);\n    const [openNavA, setOpenNavA] = useState(\"\");\n    const [openNavB, setOpenNavB] = useState(\"\");\n    const [date, setDate] = useState([]);\n    const [totalEntrada, setTotalEntrada] = useState({});\n    const [entradasAbertas, setEntradasAbertas] = useState({});\n    const [saidas, setSaidas] = useState({});\n    const [comissoes, setComissoes] = useState({});\n    const [day, setDay] = useState([]);\n    const [nomesBancas, setNomesBancas] = useState(new Set());\n    const [total, setTotal] = useState({});\n    const [dataCambista, setDataCambista] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n\n\n    const StyledTableRow = withStyles((theme) => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.palette.action.hover,\n            },\n        },\n    }))(TableRow);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const [selectedDate1, handleDateChange1] = useState(new Date());\n    const [selectedDate2, handleDateChange2] = useState(new Date());\n\n\n    const classes = useStyles();\n\n    const handleClick = () => {\n        setOpenNav(!openNav);\n    };\n\n\n    const handleDrawerOpen = () => {\n        if (\n            document.getElementById(\"drawer\").style.display == \"none\" ||\n            document.getElementById(\"drawer\").style.display == \"\"\n        ) {\n            document.getElementById(\"drawer\").style.display = \"block\";\n            document.getElementById(\"drawer\").style.marginLeft = \"40px\";\n        } else if (document.getElementById(\"drawer\").style.display == \"block\") {\n            document.getElementById(\"drawer\").style.display = \"none\";\n            document.getElementById(\"drawer\").style.marginLeft = \"0px\";\n        }\n    };\n\n    const handleDrawerClose = () => {\n        setOpenNav(false);\n        setdrawerWidth(240);\n        setOpenNavA(\"\");\n        setOpenNavB(\"\");\n        document.getElementById(\"drawer\").style.display = \"none\";\n    };\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    let entradas = 0;\n    let abertos = 0;\n    let ganhos = 0;\n    let perdeu = 0;\n    let comissao = 0;\n\n    function loadCaixa(banca) {\n        entradas = 0;\n        abertos = 0;\n        ganhos = 0;\n        perdeu = 0;\n        comissao = 0;\n\n        for (let datas of dataAux) {\n            if(datas[3] != 'Cancelado'){\n                entradas += parseFloat(datas[4]);\n                comissao += parseFloat(datas[5]);\n            }\n\n            if (datas[3] == 'Aberto') {\n                abertos += parseFloat(datas[4]);\n            } else if (datas[3] == 'Ganhou') {\n                ganhos += parseFloat(datas[7]);\n            } else if (datas[3] == 'Perdeu') {\n                perdeu += parseFloat(datas[4]);\n\n            }\n\n        }\n\n        if ((totalEntrada[banca]) != undefined) {\n            totalEntrada[banca] = totalEntrada[banca] + entradas\n            setTotalEntrada(totalEntrada);\n            entradasAbertas[banca] = entradasAbertas[banca] + abertos;\n            setEntradasAbertas(entradasAbertas);\n            saidas[banca] = saidas[banca] + ganhos;\n            setSaidas(saidas);\n            comissoes[banca] = comissoes[banca] + comissao\n            setComissoes(comissoes);\n            total[banca] = total[banca] + ((perdeu + (entradas - ganhos - comissao)));\n            setTotal(total);\n        } else {\n            totalEntrada[banca] = entradas;\n            setTotalEntrada(totalEntrada);\n            entradasAbertas[banca] = abertos;\n            setEntradasAbertas(entradasAbertas);\n            saidas[banca] = ganhos;\n            setSaidas(saidas);\n            comissoes[banca] = comissao;\n            setComissoes(comissoes);\n            total[banca] = ((perdeu + (entradas - ganhos - comissao)));\n            setTotal(total);\n        }\n\n\n    }\n\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    function exit() {\n        sessionStorage.removeItem('admin');\n        history.push('/adm');\n    }\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm');\n        }\n\n\n        let unmounted = false;\n\n        async function getDateAll() {\n\n            try {\n                let d = Date.parse(new Date());\n                d = new Date(d);\n                d = d.setDate(d.getDate());\n\n\n                let d1 = Date.parse(new Date());\n                d1 = new Date(d1);\n                d1 = d1.setDate(d1.getDate() + 1);\n\n                let d2 = Date.parse(new Date());\n                d2 = new Date(d2);\n                d2 = d2.setDate(d2.getDate() + 2);\n\n                d = new Date(d);\n                d1 = new Date(d1);\n                d2 = new Date(d2);\n\n\n                setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                d2.getDate()]);\n\n                if (!unmounted) {\n                    setDay([d.getDay(), d1.getDay(), d2.getDay()]);\n                    console.log([d.getDay(), d1.getDay(), d2.getDay()]);\n                }\n\n\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n        getDateAll();\n\n\n        async function getBancasAPI() {\n\n            api.get('/api/getbilhetes')\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            //     [\"SD76-KJ5G\", \"kakuzo\", \"07/04/2021 07:30:23\", \"Perdeu\", \"3.00\", \"0.30\", \"16.00\",\n                            //         \"260.00\", \"M\", \"Agendado\", <Button variant=\"contained\" color=\"secondary\"><CancelIcon /></Button>,\n                            //         <Button variant=\"contained\" color=\"primary\"><PrintIcon /></Button>],\n                            // ];\n\n                            res.data.bilhetes.map((b) => {\n                                nomesBancas.add(b.nomeBanca);\n\n                                dataAux.push([\n                                    b.codigo,\n                                    b.nomeCliente,\n                                    b.dataDaAposta,\n                                    b.status,\n                                    b.valorDeEntrada,\n                                    b.comissao,\n                                    b.cotacao,\n                                    b.valorDeSaida\n                                ]);\n                                loadCaixa(b.nomeBanca);\n                                dataAux.pop();\n                            })\n                            setNomesBancas(nomesBancas);\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setNomesBancas(d);\n        setDataCambista(d);\n        setDataAux(d);\n        getBancasAPI();\n        //loadCaixa();\n\n        return () => {\n            unmounted = true;\n        };\n\n\n    }, []);\n\n\n    const getDatas = () => {\n        entradas = 0;\n        abertos = 0;\n        ganhos = 0;\n        perdeu = 0;\n        comissao = 0;\n        let auxDate1 = selectedDate1.getFullYear() + \"-\" + (selectedDate1.getMonth() + 1) + \"-\" + selectedDate1.getDate();\n        let auxDate2 = selectedDate2.getFullYear() + \"-\" + (selectedDate2.getMonth() + 1) + \"-\" + selectedDate2.getDate();\n\n\n        if (new Date(auxDate1) < new Date(auxDate2)) {\n            [...nomesBancas].map((banca) => {\n                if ((totalEntrada[banca]) != undefined) {\n                    totalEntrada[banca] = totalEntrada[banca] + entradas\n                    setTotalEntrada(totalEntrada);\n                    entradasAbertas[banca] = entradasAbertas[banca] + abertos;\n                    setEntradasAbertas(entradasAbertas);\n                    saidas[banca] = saidas[banca] + ganhos;\n                    setSaidas(saidas);\n                    comissoes[banca] = comissoes[banca] + comissao\n                    setComissoes(comissoes);\n                    total[banca] = total[banca] + ((perdeu + (entradas - ganhos - comissao)));\n                    setTotal(total);\n                } else {\n                    totalEntrada[banca] = entradas;\n                    setTotalEntrada(totalEntrada);\n                    entradasAbertas[banca] = abertos;\n                    setEntradasAbertas(entradasAbertas);\n                    saidas[banca] = ganhos;\n                    setSaidas(saidas);\n                    comissoes[banca] = comissao;\n                    setComissoes(comissoes);\n                    total[banca] = ((perdeu + (entradas - ganhos - comissao)));\n                    setTotal(total);\n                }\n            })\n\n\n            api.get('/api/getbilhetesgerentedates/' + sessionStorage.getItem('manage') + '/' + auxDate1 + '/' + auxDate2)\n                .then(res => {\n                    try {\n\n                        if (res.data) {\n                            //     [\"SD76-KJ5G\", \"kakuzo\", \"07/04/2021 07:30:23\", \"Perdeu\", \"3.00\", \"0.30\", \"16.00\",\n                            //         \"260.00\", \"M\", \"Agendado\", <Button variant=\"contained\" color=\"secondary\"><CancelIcon /></Button>,\n                            //         <Button variant=\"contained\" color=\"primary\"><PrintIcon /></Button>],\n                            // ];\n                            //console.log(auxDate1);\n                            //console.log(res.data);\n                            res.data.bilhetes.map((b) => {\n\n                                entradas += parseFloat(b.valorDeEntrada);\n                                if (b.status == 'Aberto') {\n                                    abertos += parseFloat(b.valorDeEntrada);\n                                } else if (b.status == 'Ganhou') {\n                                    ganhos += parseFloat(b.valorDeSaida);\n                                } else if (b.status == 'Perdeu') {\n                                    perdeu += parseFloat(b.valorDeEntrada);\n\n                                }\n                                comissao += parseFloat(b.comissao);\n                                console.log(total);\n                                if ((totalEntrada[b.nomeBanca]) != undefined) {\n                                    totalEntrada[b.nomeBanca] = totalEntrada[b.nomeBanca] + entradas\n                                    setTotalEntrada(totalEntrada);\n                                    entradasAbertas[b.nomeBanca] = entradasAbertas[b.nomeBanca] + abertos;\n                                    setEntradasAbertas(entradasAbertas);\n                                    saidas[b.nomeBanca] = saidas[b.nomeBanca] + ganhos;\n                                    setSaidas(saidas);\n                                    comissoes[b.nomeBanca] = comissoes[b.nomeBanca] + comissao\n                                    setComissoes(comissoes);\n                                    total[b.nomeBanca] = total[b.nomeBanca] + ((perdeu + (entradas - ganhos - comissao)));\n                                    setTotal(total);\n                                } else {\n                                    totalEntrada[b.nomeBanca] = entradas;\n                                    setTotalEntrada(totalEntrada);\n                                    entradasAbertas[b.nomeBanca] = abertos;\n                                    setEntradasAbertas(entradasAbertas);\n                                    saidas[b.nomeBanca] = ganhos;\n                                    setSaidas(saidas);\n                                    comissoes[b.nomeBanca] = comissao;\n                                    setComissoes(comissoes);\n                                    total[b.nomeBanca] = ((perdeu + (entradas - ganhos - comissao)));\n                                    setTotal(total);\n                                }\n\n\n                                setDataAux([]);\n\n                            })\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n            setNomesBancas(nomesBancas);\n            setDataAux([]);\n        }\n\n    }\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <AppBar position=\"fixed\" id={\"appbar\"} className={clsx(classes.appBar)}>\n                <Toolbar className={classes.toolbar}>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                    >\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" className={classes.title}\n                                onClick={handleDrawerOpen} style={{cursor: 'pointer'}}>\n                        <b>XBETS198</b>\n                    </Typography>\n\n                    <Typography component=\"h4\" color=\"inherit\" display=\"inline\" style={{marginRight: '-10px'}}>\n                        <b>Gerencia:</b> eletronica <br/>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"permanent\"\n                id={\"drawer\"}\n                onEscapeKeyDown={handleDrawerClose}\n                onBackdropClick={handleDrawerClose}\n            >\n                <div className={classes.toolbarIcon}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon/>\n                    </IconButton>\n                </div>\n                <Divider/>\n                <List>\n                    <ListItem button component={Link} to={'/admin'}>\n                        <ListItemIcon>\n                            <HomeIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Início\"/>\n                    </ListItem>\n\n                    <ListItem button component={Link} to={'/caixagerente'}>\n                        <ListItemIcon>\n                            <InboxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Caixa\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/caixacambistas'}>\n                        <ListItemIcon>\n                            <InboxIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Caixa Cambistas\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/relatorios'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Relatório\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/bilhetesgerente'}>\n                        <ListItemIcon>\n                            <FileCopyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Bilhetes\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/cotacao'}>\n                        <ListItemIcon>\n                            <MonetizationOnIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Cotação\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/clientesgerente'}>\n                        <ListItemIcon>\n                            <PersonIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Clientes\"/>\n                    </ListItem>\n                    <ListItem button component={Link} to={'/bilhetegerente/all'}>\n                        <ListItemIcon>\n                            <DescriptionIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Conferir Bilhetes\"/>\n                    </ListItem>\n                </List>\n\n                <Divider/>\n\n                <List>\n                    <ListItem button component={Link} to={\"/novasenhagerente\"}>\n                        <ListItemIcon>\n                            <VpnKeyIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Alterar Senha\"/>\n                    </ListItem>\n                    <ListItem button onClick={exit}>\n                        <ListItemIcon>\n                            <ExitToAppIcon/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"Sair\"/>\n                    </ListItem>\n\n                </List>\n\n            </Drawer>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={12} sm={12} item>\n                                        <Paper className={classes.paperX}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Grid container justify=\"space-around\">\n                                                                <MuiPickersUtilsProvider utils={DateFnsUtils}\n                                                                                         locale={pt}>\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Início\"\n                                                                        value={selectedDate1}\n                                                                        onChange={date1 => handleDateChange1(date1)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n\n                                                                    <KeyboardDatePicker\n                                                                        label=\"Data Final\"\n                                                                        placeholder=\"2018/10/10\"\n                                                                        value={selectedDate2}\n                                                                        onChange={date2 => handleDateChange2(date2)}\n                                                                        format=\"dd/MM/yyyy\"\n                                                                    />\n                                                                </MuiPickersUtilsProvider>\n\n\n                                                            </Grid>\n\n                                                            <br/>\n                                                            <Button onClick={getDatas} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                BUSCAR\n                                                            </Button>\n                                                            <br/><br/>\n                                                        </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                        <TableContainer component={Paper}>\n\n                                            <Table stickyHeader aria-label=\"sticky table\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        <StyledTableCell align={\"center\"}><b>BANCA</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>TOTAL DE\n                                                            ENTRADAS</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>ENTRADAS EM\n                                                            ABERTO</b></StyledTableCell>\n                                                        <StyledTableCell\n                                                            align={\"center\"}><b>SAÍDAS</b></StyledTableCell>\n                                                        <StyledTableCell\n                                                            align={\"center\"}><b>COMISSÕES</b></StyledTableCell>\n                                                        <StyledTableCell align={\"center\"}><b>TOTAL</b></StyledTableCell>\n                                                    </TableRow>\n                                                </TableHead>\n\n                                                <TableBody>\n\n                                                    {[...nomesBancas].map((banca) => (\n                                                        <StyledTableRow>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    {banca}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {totalEntrada[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {entradasAbertas[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {saidas[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                <Typography variant=\"h5\">\n                                                                    R$ {comissoes[banca].toFixed(2)}\n                                                                </Typography>\n                                                            </StyledTableCell>\n                                                            <StyledTableCell align={\"center\"} style={{width: '10px'}}>\n                                                                {saidas[banca] > total[banca] ?\n                                                                    <Typography variant=\"h5\">\n                                                                        <b style={{color: 'red'}}>R$ {Math.abs(total[banca]).toFixed(2)}</b>\n                                                                    </Typography> : <Typography variant=\"h5\">\n                                                                        <b style={{color: 'green'}}>R$ {Math.abs(total[banca]).toFixed(2)}</b>\n                                                                    </Typography>}\n\n                                                            </StyledTableCell>\n                                                        </StyledTableRow>\n                                                    ))}\n\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n            </main>\n\n        </div>\n\n    );\n\n}","export default __webpack_public_path__ + \"static/media/football.7f8c1053.png\";","import React, {useEffect, useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Conan from './football.png';\nimport {useFormik} from 'formik';\nimport * as yup from 'yup';\nimport {Redirect, useHistory} from \"react-router-dom\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport {api} from '../Constantes/index';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                SONHOBETS198\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n    },\n    image: {\n        opacity: 0.2,\n        backgroundImage: `url(${Conan})`,\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        backgroundImage: `url(${Conan})`,\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        width: theme.spacing(8),\n        height: theme.spacing(8),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst validationSchema = yup.object({\n    password1: yup\n        .string('Entre com seu usuário')\n        .required('A nova senha é obrigatória'),\n    password2: yup\n        .string('Entre com sua senha')\n        .required('A nova senha é obrigatória')\n        .oneOf([yup.ref('password1'), null], 'As senhas estão diferentes'),\n\n});\n\n\nexport default function SignInSide() {\n    const classes = useStyles();\n    let history = useHistory();\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.put('/api/updateadmin',\n                {\"senha\": values.password1})\n                .then(res => {\n\n                    try {\n                        if (res.data) {\n                            console.log(res.data);\n\n\n                            history.push(\"/admin\")\n                        }\n                    } catch (e) {\n                        console.log(e);\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n    const [login, setLogin] = useState([]);\n    const [form, setForm] = useState([]);\n\n    useEffect(() => {\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm')\n        }\n\n        async function loginAll() {\n\n        }\n\n        loginAll();\n\n\n    }, [])\n\n    try {\n        if (form.user && form.password) {\n            localStorage.setItem('admin', form.user);\n            return <Redirect to=\"/adm\"/>\n        }\n    } catch (e) {\n\n    }\n\n    function inicio() {\n        history.push('/admin');\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline/>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}/>\n\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                <Button color={'primary'} onClick={inicio}><ArrowBackIcon/> INÍCIO</Button>\n                <div className={classes.paper}>\n                    <img src={Conan} width=\"150\"/>\n                    <Typography variant=\"h4\">\n                        <b style={{textShadow: '5px 2px 2px black', color: '#428bca'}}>NOVA SENHA</b>\n                    </Typography>\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <TextField\n                            fullWidth\n                            id=\"password1\"\n                            name=\"password1\"\n                            label=\"Nova Senha (Admin)\"\n                            type=\"password\"\n                            value={formik.values.user}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password1 && Boolean(formik.errors.password1)}\n                            helperText={formik.touched.password1 && formik.errors.password1}\n                        />\n                        <TextField\n                            fullWidth\n                            id=\"password2\"\n                            name=\"password2\"\n                            label=\"Digite Novamente (Admin)\"\n                            type=\"password\"\n                            value={formik.values.password2}\n                            onChange={formik.handleChange}\n                            error={formik.touched.password2 && Boolean(formik.errors.password2)}\n                            helperText={formik.touched.password2 && formik.errors.password2}\n\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Atualizar\n                        </Button>\n                        <Grid container>\n                            <Grid item xs>\n\n                            </Grid>\n                            <Grid item>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n\n","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api, cotacao} from '../Constantes/index';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Menu from '../Menu/index';\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [data, setData] = useState([]);\n    const [titulo, setTitulo] = useState('');\n    const [porcentagem, setPorcentagem] = useState(0);\n    const [bancas, setBancas] = useState([]);\n    const [bancasAux, setBancasAux] = useState([]);\n    const [gerentes, setGerentes] = useState([]);\n    const [ba, setB] = useState(-1);\n    const [ge, setG] = useState(-1);\n    const [nomeBanca, setNomeBanca] = useState(\"Todos\");\n    const [nomeGerente, setNomeGerente] = useState({});\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n\n\n    const columns = [\"NOME COTACÃO\", \"+/- COTAÇÃO (%)\", \"GERENTE\", \"BANCA\", \"EXCLUIR\"];\n\n\n    const options = {\n        rowsPerPage: 50,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: false,\n        onRowClick: (rowData, rowMeta) => {\n            const dataToState = rowData;\n        }\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n\n    const classes = useStyles();\n\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    function verifyClientHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setTitulo(auxClient);\n\n    }\n\n    function verifyGerenteHandler(e) {\n        let id = 0;\n        let c = [];\n        let gerente =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n\n        gerentes.map((g) => {\n            if (g.title == gerente) {\n                id = g.id;\n                setNomeGerente(g.title);\n                setG(g.id);\n            }\n        })\n\n        if (bancas.length == 0) {\n            bancasAux.map((b) => {\n                if (b.gerente == id) {\n                    c.push({'title': b.title, 'id': b.id});\n                }\n            })\n        } else {\n            bancas.map((b) => {\n                if (b.gerente == id) {\n                    c.push({'title': b.title, 'id': b.id});\n                }\n            })\n        }\n\n\n        setBancas(c);\n\n    }\n\n    function verifyBancaHandler(e) {\n\n        let banca =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n\n        bancasAux.map((b) => {\n            if (b.title == banca) {\n                setNomeBanca(b.title);\n                setB(b.id);\n            }\n        })\n\n\n    }\n\n    function valorHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setPorcentagem(auxClient);\n\n    }\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    function deleteCotacao(id) {\n        api.delete('/api/deletecotacao/' + id)\n            .then(res => {\n                try {\n                    history.go(0);\n                } catch (e) {\n\n                }\n            }).catch(error => {\n            console.log(error);\n            history.go(0);\n        });\n    }\n\n    function criarCotacao() {\n        if (titulo != '' && porcentagem != '' && porcentagem != 0) {\n            api.post('/api/addcotacao', {\n                \"tipoDeCotacao\": titulo,\n                \"porcentagem\": porcentagem,\n                \"tipo\": \"prejogo\",\n                \"status\": true,\n                \"gerente\": ge,\n                \"banca\": ba,\n                \"nomeGerente\": nomeGerente,\n                \"nomeBanca\": nomeBanca,\n            }).then(res => {\n                try {\n                    history.go(0);\n                } catch (e) {\n\n                }\n            }).catch(error => {\n                console.log(error);\n                history.go(0);\n            });\n        } else {\n            alert('Por favor, preencha os campos corretamete!');\n        }\n    }\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm');\n        }\n\n\n        async function getCotacaoAPI() {\n\n            api.get('/api/getcotacao/prejogo')\n                .then(res => {\n                    try {\n                        let l = [];\n                        res.data.cotacoes.map((c) => {\n                            l.push([c.tipoDeCotacao, c.porcentagem == 1 ?\n                                <b style={{color: 'red'}}>{'Bloqueada'}</b> :\n                                <b style={{color: 'green'}}>{c.porcentagem + '%'}</b>,\n                                c.nomeGerente, c.nomeBanca,\n                                <Button variant='contained' color='secondary'\n                                        onClick={() => deleteCotacao(c.id)}><CancelIcon/></Button>]);\n                        })\n                        setData(l);\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        async function getBancaAPI() {\n            let l = [];\n            let c = {};\n            api.get('/api/getbancas')\n                .then(res => {\n                    try {\n                        res.data.bancas.map((b) => {\n                            l.push({'title': b.nome, 'gerente': b.gerente, 'id': b.id})\n                            c[b.id] = b.nome;\n                        })\n\n                    } catch (e) {\n\n                    }\n\n                    setBancasAux(l);\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getBancaAPI();\n        getCotacaoAPI();\n\n        async function getGerenteAPI() {\n            let l = []\n            api.get('/api/getgerencia')\n                .then(res => {\n                    try {\n                        res.data.gerencias.map((b) => {\n                            l.push({'title': b.nome, 'id': b.id})\n                        })\n                    } catch (e) {\n\n                    }\n                    setGerentes(l);\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getGerenteAPI();\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={9} sm={12} item>\n                                        <Paper className={classes.paperX} style={{padding: '10px'}}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">GERENCIAR COTAÇÕES\n                                                                PRE-JOGO</Typography>\n                                                            <br/>\n                                                            <Grid container direction={'row'} justify=\"space-around\">\n\n                                                                <Grid item md={9} xs={12}><Autocomplete\n\n                                                                    id={\"resetField2\"}\n                                                                    freeSolo\n                                                                    fullWidth\n                                                                    onChange={verifyClientHandler}\n                                                                    options={cotacao}\n                                                                    getOptionLabel={(option) => option.title}\n                                                                    renderInput={(params) =>\n                                                                        <TextField\n                                                                            {...params}\n\n                                                                            label=\"Nome da Cotação\"\n                                                                            variant=\"outlined\"/>}\n                                                                />\n                                                                    <br/>\n                                                                </Grid>\n\n                                                                <Grid item md={3}>\n                                                                    <TextField\n\n                                                                        id=\"valorCotacao\"\n                                                                        onChange={valorHandler}\n                                                                        label=\"Valor Cotação (%)\"\n                                                                        type=\"number\"\n                                                                        InputLabelProps={{\n                                                                            shrink: true,\n                                                                        }}\n                                                                        variant=\"filled\"\n                                                                    />\n\n                                                                </Grid>\n                                                                <Grid item md={9} xs={12}><Autocomplete\n\n                                                                    id={\"resetField2\"}\n                                                                    freeSolo\n                                                                    fullWidth\n                                                                    onChange={verifyGerenteHandler}\n                                                                    options={gerentes}\n                                                                    getOptionLabel={(option) => option.title}\n                                                                    renderInput={(params) =>\n                                                                        <TextField\n                                                                            {...params}\n\n                                                                            label=\"Gerente\"\n                                                                            variant=\"outlined\"/>}\n                                                                />\n                                                                    <br/>\n                                                                </Grid>\n                                                                <Grid item md={9} xs={12}><Autocomplete\n\n                                                                    id={\"resetField2\"}\n                                                                    freeSolo\n                                                                    fullWidth\n                                                                    onChange={verifyBancaHandler}\n                                                                    options={bancas}\n                                                                    getOptionLabel={(option) => option.title}\n                                                                    renderInput={(params) =>\n                                                                        <TextField\n                                                                            {...params}\n\n                                                                            label=\"Banca\"\n                                                                            variant=\"outlined\"/>}\n                                                                />\n                                                                    <br/>\n                                                                </Grid>\n\n                                                            </Grid>\n\n                                                            <br/><br/>\n                                                            <Button onClick={criarCotacao} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                SALVAR\n                                                            </Button>\n\n\n                                                        </Grid>\n\n                                                    </Grid>\n\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                            <br/>\n                            <React.Fragment>\n\n\n                                <MUIDataTable\n\n                                    data={data}\n                                    columns={columns}\n                                    options={options}\n\n                                />\n                            </React.Fragment>\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport {useHistory} from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {api, cotacao} from '../Constantes/index';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Menu from '../Menu/index';\n\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [message, setMessage] = useState(\"\");\n    const [openURL, setOpenURL] = React.useState(false);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [data, setData] = useState([]);\n    const [titulo, setTitulo] = useState('');\n    const [porcentagem, setPorcentagem] = useState(0);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n\n\n    const columns = [\"NOME COTACÃO\", \"DESCONTO DA COTAÇÃO (%)\", \"EXCLUIR\"];\n\n\n    const options = {\n        rowsPerPage: 50,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: false,\n        onRowClick: (rowData, rowMeta) => {\n            const dataToState = rowData;\n        }\n    };\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: \"flex\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"flex-end\",\n            padding: \"0 8px\",\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create([\"width\", \"margin\"], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: \"none\",\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: \"-30px\",\n        },\n        drawerPaper: {\n            position: \"relative\",\n            whiteSpace: \"nowrap\",\n            width: drawerWidth,\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: \"hidden\",\n            transition: theme.transitions.create(\"width\", {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up(\"sm\")]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: \"auto\",\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(2),\n            display: \"flex\",\n            overflow: \"auto\",\n            flexDirection: \"column\",\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: \"none\",\n            flexShrink: 0,\n        },\n    }));\n\n    const classes = useStyles();\n\n    const handleCloseURL = () => {\n        setOpenURL(false);\n    };\n\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n\n    function verifyClientHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setTitulo(auxClient);\n\n    }\n\n    function valorHandler(e) {\n\n        let auxClient =\n            typeof e.target.value === \"string\" ? e.target.value : e.target.innerText &&\n            e.target.innerText.length > 0 ? e.target.innerText : '';\n        setPorcentagem(auxClient);\n\n    }\n\n\n    function close(e) {\n        try {\n            if (e.clientX > 250) {\n                document.getElementById(\"drawer\").style.display = \"none\";\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    function deleteCotacao(id) {\n        api.delete('/api/deletecotacao/' + id)\n            .then(res => {\n                try {\n                    history.go(0);\n                } catch (e) {\n\n                }\n            }).catch(error => {\n            console.log(error);\n            history.go(0);\n        });\n    }\n\n    function criarCotacao() {\n        if (titulo != '' && porcentagem != '' && porcentagem != 0) {\n            api.post('/api/addcotacao', {\n                \"tipoDeCotacao\": titulo,\n                \"tipo\": \"aovivo\",\n                \"porcentagem\": porcentagem,\n                \"status\": true,\n                \"gerente\": 0,\n                \"banca\": 0,\n                \"nomeGerente\": 'Todos',\n                \"nomeBanca\": 'Todos',\n            }).then(res => {\n                try {\n                    history.go(0);\n                } catch (e) {\n\n                }\n            }).catch(error => {\n                console.log(error);\n                history.go(0);\n            });\n        } else {\n            alert('Por favor, preencha os campos corretamete!');\n        }\n    }\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm');\n        }\n\n        async function getCotacaoAPI() {\n\n            api.get('/api/getcotacao/aovivo')\n                .then(res => {\n                    try {\n                        let l = [];\n                        res.data.cotacoes.map((c) => {\n                            l.push([c.tipoDeCotacao, c.porcentagem == 1 ?\n                                <b style={{color: 'red'}}>{'Bloqueada'}</b> :\n                                <b style={{color: 'blue'}}>{c.porcentagem + '%'}</b>,\n                                <Button variant='contained' color='secondary'\n                                        onClick={() => deleteCotacao(c.id)}><CancelIcon/></Button>]);\n                        })\n                        setData(l);\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getCotacaoAPI();\n\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer}/>\n                <Container className={classes.container}>\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid item xs={12}>\n                                <Grid container justify=\"center\" spacing={2}>\n\n                                    <Grid xs={12} md={9} sm={12} item>\n                                        <Paper className={classes.paperX} style={{padding: '10px'}}>\n                                            <Grid container spacing={2} key={127}>\n\n                                                <Grid item sm container align=\"center\">\n                                                    <Grid item container direction=\"column\" spacing={2}>\n                                                        <Grid item>\n\n\n                                                            <Typography variant=\"h5\">GERENCIAR COTAÇÕES AO\n                                                                VIVO</Typography>\n                                                            <br/>\n                                                            <Grid container direction={'row'} justify=\"space-around\">\n\n                                                                <Grid item md={9} xs={12}><Autocomplete\n\n                                                                    id={\"resetField2\"}\n                                                                    freeSolo\n                                                                    fullWidth\n                                                                    onChange={verifyClientHandler}\n                                                                    options={cotacao}\n                                                                    getOptionLabel={(option) => option.title}\n                                                                    renderInput={(params) =>\n                                                                        <TextField\n                                                                            {...params}\n\n                                                                            label=\"Nome da Cotação\"\n                                                                            variant=\"outlined\"/>}\n                                                                />\n                                                                    <br/>\n                                                                </Grid>\n\n                                                                <Grid item md={3}>\n                                                                    <TextField\n\n                                                                        id=\"valorCotacao\"\n                                                                        onChange={valorHandler}\n                                                                        label=\"Valor Cotação (%)\"\n                                                                        type=\"number\"\n                                                                        InputLabelProps={{\n                                                                            shrink: true,\n                                                                        }}\n                                                                        variant=\"filled\"\n                                                                    />\n\n                                                                </Grid>\n\n                                                            </Grid>\n\n                                                            <br/><br/>\n                                                            <Button onClick={criarCotacao} variant=\"contained\"\n                                                                    color=\"primary\">\n                                                                SALVAR\n                                                            </Button>\n\n\n                                                        </Grid>\n\n                                                    </Grid>\n\n                                                </Grid>\n                                            </Grid>\n                                        </Paper>\n\n                                    </Grid>\n\n                                </Grid>\n                            </Grid>\n                            <br/>\n                            <React.Fragment>\n\n\n                                <MUIDataTable\n                                    title={\"GERENCIAR CLIENTES\"}\n                                    data={data}\n                                    columns={columns}\n                                    options={options}\n\n                                />\n                            </React.Fragment>\n                        </Grid>\n                        {/* Recent Deposits */}\n\n                        {/* Recent Orders */}\n\n                    </Grid>\n\n                    <Dialog style={{wordWrap: 'break-word'}}\n                            open={openURL} onClose={handleCloseURL} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}>AVISO!</DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper} style={{fontSize: '18px'}}>\n\n                                {message.split('<br/>')}\n\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleCloseURL} color=\"primary\">\n                                Fechar\n                            </Button>\n\n                        </DialogActions>\n                    </Dialog>\n\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown\n                        open={openLoading} onClose={handleCloseLoading} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\" style={{color: 'red'}}></DialogTitle>\n                        <DialogContent>\n                            <div className={classes.paper}>\n                                <CircularProgress color=\"secondary\"/>\n                            </div>\n\n                        </DialogContent>\n                        <DialogActions>\n\n                        </DialogActions>\n                    </Dialog>\n                </Container>\n\n\n            </main>\n\n        </div>\n\n    );\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {Link, useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport {api} from '../Constantes/index';\nimport Menu from '../Menu/index';\nimport Grid from \"@material-ui/core/Grid\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {Dialog, DialogActions, DialogContent, DialogTitle} from \"@material-ui/core\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n//let aux = [];\n\nexport default function ValidarBilhete() {\n\n    let history = useHistory();\n    const [dataAux, setDataAux] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"500px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n    const [jogos, setJogos] = useState([]);\n    const [openLoading, setOpenLoading] = React.useState(false);\n    const handleClickOpenLoading = () => {\n        setOpenLoading(true);\n    };\n\n    const handleCloseLoading = () => {\n        setOpenLoading(false);\n    };\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: {\n            marginTop: 20,\n        },\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n    const options = {\n        rowsPerPage: 100,\n\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: false,\n        onRowClick: (rowData, rowMeta) => {\n            const dataToState = rowData;\n        },\n\n    };\n\n\n    const columns = [\"JOGO\", \"DATA\", \"TIPO DE COTACAO\",\n        \"GANHOU\", \"PERDEU\", \"CANCELADO\", \"STATUS\"];\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n    function processarJogos(){\n        let count = 0;\n        setTimeout(function () {\n            handleClickOpenLoading();\n        for(let i of jogos){\n            api.put('/api/validarjogo',\n                {\n                    'nomeDosTimes': i[0],\n                    'tipoDeCotacao': i[1],\n                    'status': i[2]\n                })\n                .then(res => {\n                    try {\n                        count += 1;\n                        if (res.data) {\n                            if(count == jogos.length){\n                                handleCloseLoading();\n                                history.go(0);\n                            }\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        }\n        }, 1000);\n\n\n    }\n\n    function addJogo(jogo, cotacao, status) {\n        let j = jogos;\n        j.push([jogo, cotacao, status]);\n        setJogos(j);\n    }\n\n\n    function custom_sort(a, b) {\n        let d1 = new Date(a.dataDoJogo.split(' ')[0].split('/')[2] + '/' +\n            a.dataDoJogo.split(' ')[0].split('/')[1] + '/' +\n            a.dataDoJogo.split(' ')[0].split('/')[0] + \" \" + a.dataDoJogo.split(' ')[2]);\n\n        let d2 = new Date(b.dataDoJogo.split(' ')[0].split('/')[2] + '/' +\n            b.dataDoJogo.split(' ')[0].split('/')[1] + '/' +\n            b.dataDoJogo.split(' ')[0].split('/')[0] + \" \" + b.dataDoJogo.split(' ')[2]);\n\n        return Date.parse(d1) - Date.parse(d2);\n    }\n\n \n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm');\n        }\n\n        let unmounted = false;\n\n\n        async function getBancasAPI() {\n\n            let dict = {};\n            api.get('/api/getjogos')\n                .then(res => {\n                    try {\n\n                        let bh = res.data.jogos.slice();\n                        bh.sort(custom_sort);\n\n                        if (res.data) {\n                            bh.map((b) => {\n                                let valor = (b.nomeDosTimes + \"\" + b.tipoDeCotacao);\n\n                                dict[valor] = [\n\n                                    <Typography style={{cursor: 'pointer'}}\n                                                onClick={() => window.open('https://www.google.com/search?q=' + b.nomeDosTimes + \" \" +\n                                                 new Date().getDate() + \".\" + (new Date().getMonth()+1) + \".\" + new Date().getFullYear())}>\n                                                 {b.nomeDosTimes}</Typography>,\n                                    b.dataDoJogo,\n                                    b.tipoDeCotacao,\n                                    <Checkbox  style={{color: 'green'}} onClick={() => addJogo(b.nomeDosTimes, b.tipoDeCotacao, 'Ganhou')}/>,\n                                    <Checkbox  style={{color: 'red'}} onClick={() => addJogo(b.nomeDosTimes, b.tipoDeCotacao, 'Perdeu')}/>,\n                                    <Checkbox  style={{color: 'gold'}} onClick={() => addJogo(b.nomeDosTimes, b.tipoDeCotacao, 'Cancelado')}/>,\n                                    b.status];\n\n\n                            });\n                            for (let i in dict) {\n                                dataAux.push(dict[i]);\n                            }\n                            setDataAux(dataAux);\n\n                        }\n                     \n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setDataAux(d);\n        getBancasAPI();\n\n        return () => {\n            unmounted = true\n        };\n\n    }, []);\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n\n                        <React.Fragment>\n                            <MUIDataTable\n                                title={<Grid container direction={'row'}>\n\n                                    <br/>\n                                    <Grid item style={{paddingLeft: '10px'}}></Grid>\n                                    <Grid item>\n                                        <Button variant=\"contained\" color=\"primary\" onClick={processarJogos}>\n                                            PROCESSAR JOGOS\n                                        </Button>\n                                    </Grid>\n\n                                </Grid>}\n                                data={dataAux}\n                                columns={columns}\n                                options={options}\n\n                            />\n                        </React.Fragment>\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n            <Dialog\n                disableBackdropClick\n                disableEscapeKeyDown\n                open={openLoading}\n                onClose={handleCloseLoading}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle\n                    id=\"form-dialog-title\"\n                    style={{color: \"red\"}}\n                ></DialogTitle>\n                <DialogContent>\n                    <div className={classes.paper}>\n                        <CircularProgress color=\"secondary\"/>\n                    </div>\n                </DialogContent>\n                <DialogActions></DialogActions>\n            </Dialog>\n        </div>\n\n\n    )\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {api} from '../Constantes/index';\nimport * as yup from 'yup';\nimport {useFormik} from 'formik';\nimport Menu from '../Menu/index';\n\nexport default function ValidarDados() {\n\n    let history = useHistory();\n    const [date, setDate] = useState([]);\n    const [day, setDay] = useState([]);\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [valorDeEntrada, setValorDeEntrada] = useState(0);\n    const [valorDeSaida, setValorDeSaida] = useState(0);\n    const [limitG, setLimitG] = useState(0);\n    const [limitS, setLimitS] = useState(0);\n    const [cotacao, setCotacao] = useState(0);\n    const [cotacaoMin, setCotacaoMin] = useState(0);\n    const [cotaMax, setCotaMax] = useState(0);\n    const [cotaMin, setCotaMin] = useState(0);\n    const [apostasAoVivo, setApostasAoVivo] = useState(false);\n    const [apostasPreJogo, setApostasPreJogo] = useState(false);\n    const [imprimir, setImprimir] = useState(false);\n    const [apostas, setApostas] = useState(false);\n    const [status, setStatus] = useState(false);\n    const [configTime, setConfigTime] = useState(0);\n    const [qtdJogos, setQtdJogos] = useState(0);\n    const [idCambista, setidCambista] = useState(0);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n\n    const validationSchema = yup.object({\n        password1: yup\n            .string().min(4, 'Digite no minimo 4 digitos'),\n        password2: yup\n            .string().min(4, 'Digite no minimo 4 digitos')\n            .oneOf([yup.ref('password1'), ''], 'As senhas estão diferentes'),\n\n    });\n\n\n    const classes = useStyles();\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n\n    }\n\n    function exit() {\n        sessionStorage.removeItem('admin');\n        history.push('/adm');\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            password1: '',\n            password2: '',\n        },\n        validationSchema: validationSchema,\n        onSubmit: (values) => {\n            api.put('/api/updateadmin', {\n                \"valorDeEntrada\": valorDeEntrada,\n                \"valorDeSaida\": valorDeSaida,\n                \"limiteApostaSimples\": limitS,\n                \"limiteApostaGeral\": limitG,\n                \"cotacao\": cotacao,\n                \"cotacaoMin\": cotacaoMin,\n                \"cotaMax\": cotaMax,\n                \"cotaMin\": cotaMin,\n                \"qtdJogos\": qtdJogos,\n                \"configTime\": configTime,\n            })\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            history.go(0);\n                            alert('Atualizado com Sucesso!');\n                        }\n                    } catch (e) {\n                        alert('Erro ao Atualizar!');\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n        },\n    });\n\n\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm');\n        }\n\n        let unmounted = false;\n\n\n        async function getDateAll() {\n\n            try {\n                let d = Date.parse(new Date());\n                d = new Date(d);\n                d = d.setDate(d.getDate());\n\n\n                let d1 = Date.parse(new Date());\n                d1 = new Date(d1);\n                d1 = d1.setDate(d1.getDate() + 1);\n\n                let d2 = Date.parse(new Date());\n                d2 = new Date(d2);\n                d2 = d2.setDate(d2.getDate() + 2);\n\n                d = new Date(d);\n                d1 = new Date(d1);\n                d2 = new Date(d2);\n\n\n                setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                d2.getDate()]);\n\n                if (!unmounted) {\n                    setDay([d.getDay(), d1.getDay(), d2.getDay()]);\n                }\n\n\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n        async function getAdminAPI() {\n\n            api.get('/api/getadmin')\n                .then(res => {\n                    try {\n                        if (res.data) {\n                            setValorDeSaida(res.data.admin[0].valorDeSaida);\n                            setValorDeEntrada(res.data.admin[0].valorDeEntrada);\n                            setLimitG(res.data.admin[0].limiteApostaGeral);\n                            setLimitS(res.data.admin[0].limiteApostaSimples);\n                            setCotacao(res.data.admin[0].cotacao);\n                            setCotacaoMin(res.data.admin[0].cotacaoMin);\n                            setCotaMin(res.data.admin[0].cotaMin);\n                            setCotaMax(res.data.admin[0].cotaMax);\n                            setConfigTime(res.data.admin[0].configTime);\n                            setQtdJogos(res.data.admin[0].qtdJogos);\n                        }\n                    } catch (e) {\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        getAdminAPI();\n        getDateAll();\n\n\n        return () => {\n            unmounted = true\n        };\n\n    }, []);\n\n\n    function handlerChangeApostasAovivo() {\n        if (apostasAoVivo) {\n            setApostasAoVivo(false);\n        } else {\n            setApostasAoVivo(true);\n        }\n    }\n\n    function handlerChangeApostasPreJogo() {\n        if (apostasPreJogo) {\n            setApostasPreJogo(false);\n        } else {\n            setApostasPreJogo(true);\n        }\n    }\n\n    function handlerChangeImprimir() {\n        if (imprimir) {\n            setImprimir(false);\n        } else {\n            setImprimir(true);\n        }\n    }\n\n    function handlerChangeAposta() {\n        if (apostas) {\n            setApostas(false);\n        } else {\n            setApostas(true);\n        }\n    }\n\n    function handlerChangeStatus() {\n        if (status) {\n            setStatus(false);\n        } else {\n            setStatus(true);\n        }\n    }\n\n    function deleteCambista() {\n\n        api.delete('/api/deletebanca/' + idCambista)\n            .then(res => {\n                try {\n                    if (res.data) {\n                        history.push(\"/gerenteReload\");\n                    }\n                } catch (e) {\n                    history.push(\"/gerenteReload\");\n                }\n            }).catch(error => {\n            history.push(\"/gerenteReload\");\n            console.log(error);\n\n        });\n\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <Menu/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n\n                    <Typography variant=\"h6\" gutterBottom>\n                        Configurar Valores\n                    </Typography>\n                    <form className={classes.form} onSubmit={formik.handleSubmit}>\n                        <Grid container spacing={3}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={valorDeEntrada}\n                                    required\n                                    type=\"number\"\n                                    id=\"limiteEntrada\"\n                                    name=\"limiteEntrada\"\n                                    label=\"Valor Mínimo de Aposta (R$)\"\n                                    fullWidth\n                                    autoComplete=\"given-name\"\n                                    onChange={e => setValorDeEntrada(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={valorDeSaida}\n                                    required\n                                    id=\"limiteSaida\"\n                                    type=\"number\"\n                                    name=\"limiteSaida\"\n                                    label=\"Valor Máximo de Aposta (R$)\"\n                                    fullWidth\n                                    autoComplete=\"family-name\"\n                                    onChange={e => setValorDeSaida(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={cotaMin}\n                                    required\n                                    type=\"number\"\n                                    id=\"cotaMin\"\n                                    name=\"cotaMin\"\n                                    label=\"Valor de Cota Mínima (R$)\"\n                                    fullWidth\n                                    autoComplete=\"given-name\"\n                                    onChange={e => setCotaMin(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={cotaMax}\n                                    required\n                                    id=\"cotaMax\"\n                                    type=\"number\"\n                                    name=\"cotaMax\"\n                                    label=\"Valor de Cota Máxima (R$)\"\n                                    fullWidth\n                                    autoComplete=\"family-name\"\n                                    onChange={e => setCotaMax(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={cotacaoMin}\n                                    required\n                                    id=\"cotacaoMin\"\n                                    type=\"number\"\n                                    name=\"cotacaoMin\"\n                                    label=\"Valor Mínimo do Multiplicador ou Cotação (R$)\"\n                                    fullWidth\n                                    autoComplete=\"family-name\"\n                                    onChange={e => setCotacaoMin(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    value={cotacao}\n                                    required\n                                    id=\"cotacao\"\n                                    type=\"number\"\n                                    name=\"cotacao\"\n                                    label=\"Valor Máximo do Multiplicador ou Cotação (R$)\"\n                                    fullWidth\n                                    autoComplete=\"family-name\"\n                                    onChange={e => setCotacao(e.target.value)}\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    value={limitG}\n                                    required\n                                    id=\"standard-number\"\n                                    label=\"Limite Aposta Geral (R$)\"\n                                    type=\"number\"\n                                    fullWidth\n                                    onChange={e => setLimitG(e.target.value)}\n                                />\n                                <br/>\n                                <br/>\n                                <TextField\n                                    value={limitS}\n                                    required\n                                    id=\"standard-number\"\n                                    label=\"Limite Aposta Simples (R$)\"\n                                    type=\"number\"\n                                    fullWidth\n                                    onChange={e => setLimitS(e.target.value)}\n                                />\n                                <br/><br/>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={configTime}\n                                        required\n                                        type=\"number\"\n                                        id=\"configTime\"\n                                        name=\"configTime\"\n                                        label=\"Tempo Máximo de Cancelar Bilhete (min)\"\n                                        fullWidth\n                                        autoComplete=\"given-name\"\n                                        onChange={e => setConfigTime(e.target.value)}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField\n                                        value={qtdJogos}\n                                        required\n                                        id=\"qtdJogos\"\n                                        type=\"number\"\n                                        name=\"qtdJogos\"\n                                        label=\"Quantidade de Jogos por Bilhete\"\n                                        fullWidth\n                                        autoComplete=\"family-name\"\n                                        onChange={e => setQtdJogos(e.target.value)}\n                                    />\n                                </Grid>\n                                <br/>\n                                <br/>\n\n\n                            </Grid>\n\n\n                            {/* <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" checked={apostasAoVivo} \n                                    onClick={handlerChangeApostasAovivo}/>}\n                                    label=\"Habilitar Apostas Ao Vivo\" \n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" checked={apostasPreJogo}\n                                    onClick={handlerChangeApostasPreJogo} />}\n                                    label=\"Habilitar Apostas Pre-Jogo\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" checked={imprimir}\n                                    onClick={handlerChangeImprimir} />}\n                                    label=\"Habilitar Imprimir Bilhete\"\n                                />\n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" checked={apostas}\n                                    onClick={handlerChangeAposta} />}\n                                    label=\"Apostas Ativas\"\n                                />\n                                \n                                <FormControlLabel\n                                    control={<Checkbox color=\"secondary\" name=\"saveAddress\"  checked={status}\n                                    onClick={handlerChangeStatus} />}\n                                    label=\"Status\"\n                                />\n                            </Grid> */}\n                            <Button variant=\"contained\" color=\"primary\" className={classes.submit}\n                                    type=\"submit\" disableElevation>\n                                ATUALIZAR\n                            </Button>\n\n                        </Grid>\n                    </form>\n\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {Link, useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from \"mui-datatables\";\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Grid from '@material-ui/core/Grid';\nimport {api} from '../Constantes/index';\nimport MenuAdmin from '../Menu/index';\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [date, setDate] = useState([]);\n    const [dataAux, setDataAux] = useState([]);\n\n    const [drawerWidth, setdrawerWidth] = useState(240);\n    const [responsive, setResponsive] = useState(\"horizontal\");\n    const [tableBodyHeight, setTableBodyHeight] = useState(\"400px\");\n    const [tableBodyMaxHeight, setTableBodyMaxHeight] = useState(\"\");\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n    const options = {\n        rowsPerPage: 50,\n        filter: true,\n        filterType: \"dropdown\",\n        responsive,\n        tableBodyHeight,\n        tableBodyMaxHeight,\n        selectableRows: 'none',\n        onRowClick: (rowData, rowMeta) => {\n            const dataToState = rowData;\n        }\n    };\n\n\n    const columns = [\"BANCA\", \"LIMITE GERAL\", \"LIMITE SIMPLES\", \"COMISSÕES PRÉ-JOGO\", \"COMISSÕES AO VIVO\",\n        \"APOSTAS\", \"STATUS\", \"PRÉ-JOGO\", \"AO VIVO\", \"EDITAR\"];\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    let d = [];\n    useEffect(() => {\n\n        if (sessionStorage.getItem('admin') == null || sessionStorage.getItem('admin') == \"\") {\n            history.push('/adm');\n        }\n\n\n        async function getDateAll() {\n\n            try {\n                let d = Date.parse(new Date());\n                d = new Date(d);\n                d = d.setDate(d.getDate());\n\n\n                let d1 = Date.parse(new Date());\n                d1 = new Date(d1);\n                d1 = d1.setDate(d1.getDate() + 1);\n\n                let d2 = Date.parse(new Date());\n                d2 = new Date(d2);\n                d2 = d2.setDate(d2.getDate() + 2);\n\n                d = new Date(d);\n                d1 = new Date(d1);\n                d2 = new Date(d2);\n\n\n                setDate([d.getFullYear() + \"-\" + Number(d.getMonth() + 1) + \"-\" +\n                d.getDate(), d1.getFullYear() + \"-\" + Number(d1.getMonth() + 1) + \"-\" +\n                d1.getDate(), d2.getFullYear() + \"-\" + Number(d2.getMonth() + 1) + \"-\" +\n                d2.getDate()]);\n\n\n\n\n\n\n            } catch (e) {\n                console.log(e);\n            }\n\n        }\n\n\n        async function getBancasAPI() {\n\n            api.get('/api/getbancas')\n                .then(res => {\n                    try {\n                        if (res.data) {\n\n                            res.data.bancas.map((b) => {\n                                dataAux.push([\n                                    b.nome,\n                                    'R$ ' + (b.saldoGeral).toFixed(2),\n                                    'R$ ' + (b.saldoSimples).toFixed(2),\n                                    b.comissaoPreJogo,\n                                    b.comissaoAoVivo,\n                                    b.ativarApostas == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarAtivarApostas(b.id, b.ativarApostas)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarAtivarApostas(b.id, b.ativarApostas)}><CancelIcon/></Button>,\n                                    b.status == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarStatus(b.id, b.status)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarStatus(b.id, b.status)}><CancelIcon/></Button>,\n                                    b.ativarApostasPreJogo == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarAtivarApostasPreJogo(b.id, b.ativarApostasPreJogo)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarAtivarApostasPreJogo(b.id, b.ativarApostasPreJogo)}><CancelIcon/></Button>,\n                                    b.ativarApostasAoVivos == 1 ?\n                                        <Button variant=\"outlined\" style={{color: 'green', borderColor: 'green'}}\n                                                onClick={() => atualizarApostasAoVivo(b.id, b.ativarApostasAoVivos)}><CheckCircleIcon/></Button> :\n                                        <Button variant=\"outlined\" style={{color: 'red', borderColor: 'red'}}\n                                                onClick={() => atualizarApostasAoVivo(b.id, b.ativarApostasAoVivos)}><CancelIcon/></Button>,\n                                    <Button variant=\"outlined\" style={{color: 'blue', borderColor: 'blue'}}\n                                            component={Link} to={'/editcambista/' + b.id}><EditIcon/></Button>,]);\n                            })\n                            setDataAux(dataAux);\n\n                        }\n                    } catch (e) {\n                        console.log(e);\n\n                    }\n                }).catch(error => {\n                console.log(error)\n            });\n\n        }\n\n        setDataAux(d);\n        getBancasAPI();\n        getDateAll();\n\n\n    }, []);\n\n    function atualizarApostasAoVivo(id, apostasAoVivo) {\n        if (apostasAoVivo) {\n            apostasAoVivo = false;\n        } else {\n            apostasAoVivo = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"ativarApostasAoVivos\": apostasAoVivo,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarAtivarApostasPreJogo(id, ativarApostasPreJogo) {\n        if (ativarApostasPreJogo) {\n            ativarApostasPreJogo = false;\n        } else {\n            ativarApostasPreJogo = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"ativarApostasPreJogo\": ativarApostasPreJogo,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarAtivarApostas(id, ativarApostas) {\n        if (ativarApostas) {\n            ativarApostas = false;\n        } else {\n            ativarApostas = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"ativarApostas\": ativarApostas,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n    function atualizarStatus(id, status) {\n        if (status) {\n            status = false;\n        } else {\n            status = true;\n        }\n        api.put('/api/updatebanca/' + id, {\n            \"status\": status,\n        })\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n            <MenuAdmin/>\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    {dataAux.length > 0 ?\n                        <React.Fragment>\n                            <MUIDataTable\n                                title={<Grid container direction={'row'}>\n\n                                    <br/>\n                                    <Grid item style={{paddingLeft: '10px'}}></Grid>\n                                    <Grid item>\n                                        <Button variant=\"contained\" color=\"primary\" component={Link}\n                                                to={'/cadcambista'}>\n                                            CADASTRAR CAMBISTA\n                                        </Button>\n                                    </Grid>\n                                </Grid>}\n                                data={dataAux}\n                                columns={columns}\n                                options={options}\n\n                            />\n                        </React.Fragment> : <Typography component=\"h4\" color=\"inherit\" align=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" component={Link} to={'/cadcambistagerente'}>\n                                    CADASTRAR CAMBISTA\n                                </Button>\n                            </Grid>\n                            <Grid item style={{marginBottom: '10px'}}></Grid>\n                            Nenhum Cambista Cadastrado!\n                        </Typography>}\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {makeStyles} from '@material-ui/core/styles';\nimport React, {useEffect, useState} from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useHistory} from 'react-router-dom';\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {api} from '../Constantes/index';\n\nexport default function Dashboard() {\n\n    let history = useHistory();\n    const [drawerWidth, setdrawerWidth] = useState(240);\n\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            display: 'flex',\n\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        toolbar: {\n            paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            padding: '0 8px',\n            ...theme.mixins.toolbar,\n        },\n        appBar: {\n            zIndex: theme.zIndex.drawer + 1,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            marginLeft: drawerWidth,\n            width: `calc(100% - ${drawerWidth}px)`,\n            transition: theme.transitions.create(['width', 'margin'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: 36,\n        },\n        menuButtonHidden: {\n            display: 'none',\n        },\n        title: {\n            flexGrow: 1,\n            marginLeft: '-30px'\n        },\n        drawerPaper: {\n            position: 'relative',\n            whiteSpace: 'nowrap',\n            width: drawerWidth,\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        drawerPaperClose: {\n            overflowX: 'hidden',\n            transition: theme.transitions.create('width', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            width: theme.spacing(7),\n            [theme.breakpoints.up('sm')]: {\n                width: theme.spacing(9),\n            },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n            flexGrow: 1,\n            overflow: 'auto',\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        },\n        paper: {\n            padding: theme.spacing(1),\n            display: 'flex',\n            overflow: 'auto',\n            flexDirection: 'column',\n        },\n        fixedHeight: {\n            height: 240,\n        },\n        button: {\n            width: 10,\n        },\n        drawer: {\n            display: 'none',\n            flexShrink: 0,\n        }\n    }));\n\n\n\n    const classes = useStyles();\n\n\n    function close(e) {\n\n        try {\n            if (e.clientX > 250) {\n                document.getElementById('drawer').style.display = 'none';\n            }\n        } catch (e) {\n            //console.log(e);\n        }\n    }\n\n\n    let d = [];\n    useEffect(() => {\n\n\n\n    }, []);\n\n\n    function resetBanca() {\n        api.get('/api/resetbanca',\n        )\n            .then(res => {\n                history.go(0);\n            }).catch(error => {\n            console.log(error)\n        });\n    }\n\n\n\n    return (\n        <div className={classes.root} onClick={close}>\n            <CssBaseline/>\n\n\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer}/>\n\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <br/>\n                    <Typography component=\"h4\" color=\"inherit\" align=\"center\">\n                            <Grid item>\n                                <Button variant=\"contained\" color=\"primary\" onClick={resetBanca}>\n                                    RESETAR BANCAS\n                                </Button>\n                            </Grid>\n\n                        </Typography>\n                </Container>\n\n                <div>\n                    <ScrollUpButton/>\n                </div>\n            </main>\n\n\n        </div>\n\n\n    )\n\n}","import {HashRouter, Route} from 'react-router-dom';\n\nimport AoVivo from '../pages/AoVivo';\nimport PreJogo from '../pages/PreJogo';\nimport PreJogo2 from '../pages/PreJogo2';\nimport MaisAoVivo from '../pages/MaisAoVivo';\nimport Mais from '../pages/Mais';\nimport Home from '../pages/Home';\nimport Init from '../pages/Init';\nimport Caixa from '../pages/Caixa';\nimport Bilhetes from '../pages/Bilhetes';\nimport Bilhete from '../pages/Bilhete';\nimport RecuperarPin from '../pages/RecuperPin';\nimport RelatorioCliente from '../pages/RelatorioCliente';\nimport VerificarBilhete from '../pages/VerificarBilhete';\nimport Clients from '../pages/Clients';\nimport Login from '../pages/Login';\nimport LoginMange from '../gerente/Login';\nimport NovaSenha from '../pages/NovaSenha';\nimport ManageHome from '../gerente/Home';\nimport ManageCaixa from '../gerente/Caixa';\nimport ManageBilhetes from '../gerente/Bilhetes';\nimport ManageBilhete from '../gerente/Bilhete';\nimport ManageClients from '../gerente/Clients';\nimport CadCambista from '../gerente/CadCambista';\nimport EditCambista from '../gerente/EditCambista';\nimport Relatorios from '../gerente/Relatorios';\nimport ManageCaixaCambista from '../gerente/CaixaCambista';\nimport NovaSenhaGerente from '../gerente/NovaSenha';\n\nimport ManageHomeA from '../admin/Home';\nimport LoginMangeA from '../admin/Login';\nimport ManageCaixaA from '../admin/Caixa';\nimport ManageBilhetesA from '../admin/Bilhetes';\nimport ManageBilheteA from '../admin/Bilhete';\nimport ManageClientsA from '../admin/Clients';\nimport CadCambistaA from '../admin/CadCambista';\nimport CadGerente from '../admin/CadGerente';\nimport EditCambistaA from '../admin/EditCambista';\nimport EditGerente from '../admin/EditGerente';\nimport RelatoriosCambistasA from '../admin/RelatoriosCambistas';\nimport ManageCaixaCambistaA from '../admin/CaixaCambista';\nimport NovaSenhaGerenteA from '../admin/NovaSenha';\nimport ManageCotacaoA from '../admin/Cotacao';\nimport ManageCotacaoAoVivo from '../admin/CotacaoAoVivo';\nimport ValidarBilhete from '../admin/ValidarBilhete';\nimport ValidarDados from '../admin/Propriedades';\nimport Bancas from '../admin/Bancas';\nimport BancasReset from '../admin/BancasReset';\nimport Regulamento from '../pages/Regulamento';\n\n\nexport default function Routes() {\n\n\n    return (\n        <HashRouter>\n            <Route exact path=\"/\" component={LoginMange}/>\n\n            {/*<Route exact path=\"/login\" component={LoginMange}/>*/}\n            {/*<Route exact path=\"/campeonato/:campId\" component={PreJogo}/>*/}\n            {/*<Route exact path=\"/pre/campeonato/:campId\" component={PreJogo2}/>*/}\n            {/*<Route exact path=\"/date/:dateId\" component={Init}/>*/}\n            {/*<Route exact path=\"/inicio\" component={Home}/>*/}\n            {/*<Route exact path=\"/aovivo\" component={AoVivo}/>*/}\n            {/*<Route exact path=\"/maisAoVivo/:id\" component={MaisAoVivo}/>*/}\n            {/*<Route exact path=\"/maispre/:id\" component={Mais}/>*/}\n            {/*<Route exact path=\"/caixa\" component={Caixa}/>*/}\n            {/*<Route exact path=\"/bilhetes\" component={Bilhetes}/>*/}\n            {/*<Route exact path=\"/bilhete/:codigoBilhete\" component={Bilhete}/>*/}\n            {/*<Route exact path=\"/recuperarpin\" component={RecuperarPin}/>*/}\n            {/*<Route exact path=\"/verificarBilhete/:codigoBilhete\" component={VerificarBilhete}/>*/}\n            {/*<Route exact path=\"/clientes\" component={Clients}/>*/}\n            {/*<Route exact path=\"/novasenha\" component={NovaSenha}/>*/}\n            {/*<Route exact path=\"/regulamento\" component={Regulamento}/>*/}\n            {/*    <Route exact path=\"/relatoriocliente\" component={RelatorioCliente}/>*/}\n\n            <Route exact path=\"/gerente\" component={ManageHome}/>\n            <Route exact path=\"/cambista\" component={ManageHome}/>\n            <Route exact path=\"/caixagerente\" component={ManageCaixa}/>\n            <Route exact path=\"/caixagerentecambistas\" component={ManageCaixaCambista}/>\n            <Route exact path=\"/bilhetegerente/:codigoBilhete\" component={ManageBilhete}/>\n            <Route exact path=\"/bilhetesgerente\" component={ManageBilhetes}/>\n            <Route exact path=\"/clientesgerente\" component={ManageClients}/>\n            <Route exact path=\"/cadcambistagerente\" component={CadCambista}/>\n            <Route exact path=\"/editcambistagerente/:id\" component={EditCambista}/>\n            <Route exact path=\"/relatorios\" component={Relatorios}/>\n            <Route exact path=\"/novasenhagerente\" component={NovaSenhaGerente}/>\n\n\n            <Route exact path=\"/admin\" component={ManageHomeA}/>\n            <Route exact path=\"/adm\" component={LoginMangeA}/>\n            <Route exact path=\"/cambistas\" component={ManageHomeA}/>\n            <Route exact path=\"/caixagerentes\" component={ManageCaixaA}/>\n            <Route exact path=\"/caixacambistas\" component={ManageCaixaCambistaA}/>\n            <Route exact path=\"/bilhetesA\" component={ManageBilhetesA}/>\n            <Route exact path=\"/bilheteA/:codigoBilhete\" component={ManageBilheteA}/>\n            <Route exact path=\"/clientesA\" component={ManageClientsA}/>\n            <Route exact path=\"/cadcambista\" component={CadCambistaA}/>\n            <Route exact path=\"/cadgerente\" component={CadGerente}/>\n            <Route exact path=\"/editcambista/:id\" component={EditCambistaA}/>\n            <Route exact path=\"/editgerente/:id\" component={EditGerente}/>\n            <Route exact path=\"/relatoriosc\" component={RelatoriosCambistasA}/>\n            <Route exact path=\"/cotacaoAovivo\" component={ManageCotacaoAoVivo}/>\n            <Route exact path=\"/cotacao\" component={ManageCotacaoA}/>\n            <Route exact path=\"/validarBilhete\" component={ValidarBilhete}/>\n            <Route exact path=\"/validarDados\" component={ValidarDados}/>\n            <Route exact path=\"/novasenhaadmin\" component={NovaSenhaGerenteA}/>\n            <Route exact path=\"/cadastrargerente\" component={ManageHomeA}/>\n            <Route exact path=\"/cadastrarbancadmin\" component={Bancas}/>\n                <Route exact path=\"/bancareset\" component={BancasReset}/>\n\n        </HashRouter>\n    );\n}\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport Routes from './routes';\n\nfunction App() {\n\n  return (\n    \n    <React.Fragment>\n      <GlobalStyle />\n      <BrowserRouter basename='/sonhobets'>\n        <Routes />\n      </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}